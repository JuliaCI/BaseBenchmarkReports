cset: moving following pidspec: 20602
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340855288 seconds)
loading group "string"... done (took 0.66599939 seconds)
loading group "linalg"... done (took 7.989703283 seconds)
loading group "parallel"... done (took 0.168934643 seconds)
loading group "find"... done (took 1.293293932 seconds)
loading group "tuple"... done (took 1.93397344 seconds)
loading group "dates"... done (took 1.353029158 seconds)
loading group "micro"... done (took 0.236861921 seconds)
loading group "io"... done (took 0.993269461 seconds)
loading group "scalar"... done (took 40.31719928 seconds)
loading group "sparse"... done (took 12.511859372 seconds)
loading group "broadcast"... done (took 1.00194105 seconds)
loading group "union"... done (took 12.681084352 seconds)
loading group "simd"... done (took 4.712362691 seconds)
loading group "random"... done (took 9.456082181 seconds)
loading group "problem"... done (took 1.861544167 seconds)
loading group "array"... done (took 21.85720091 seconds)
loading group "misc"... done (took 1.724980224 seconds)
loading group "sort"... done (took 3.503967905 seconds)
loading group "collection"... done (took 18.137749414 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525148867 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12934843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132140354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124457176 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155124689 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118838544 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130460846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090040286 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.845819065 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159738829 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122444072 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441969397 seconds)
done (took 5.295898459 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177957436 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086193745 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086558752 seconds)
  done (took 1.307751849 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068839556 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129830575 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070441161 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071306115 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070614422 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070673381 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071017763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069856798 seconds)
  done (took 1.688685963 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076351079 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071980048 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069534669 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073171254 seconds)
  done (took 1.432425399 seconds)
done (took 5.821539357 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814939149 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216537859 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193554526 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420131596 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136829778 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165763486 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642350795 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320263895 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198093744 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079723043 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113463312 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350040329 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113210056 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637867031 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081948658 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094550108 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144504816 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432188562 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070924981 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085387672 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092114993 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13252471 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092579034 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07751575 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147900572 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070971108 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14011727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083892745 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069469069 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224020745 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175914093 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661993665 seconds)
  done (took 10.462336399 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105328518 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103836373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072259212 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130205791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106407477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073373194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07896212 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070942608 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095027643 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.136729879 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100424844 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110713887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071629167 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074920726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091735596 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214348509 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087081532 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087615149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07529465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081761023 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112337417 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081937 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084046324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083682485 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132122613 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187213453 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103126708 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103425717 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072326854 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089487709 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120316064 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132465585 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072578791 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071131655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13467656 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099663347 seconds)
  done (took 4.823514043 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055977787 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150483839 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094157966 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139944368 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0683362 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114560882 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069617169 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084997884 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216507369 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.409639692 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636438478 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115049436 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110090353 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071109781 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072000032 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071467328 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.5721373 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101992283 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113618486 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085854365 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074235961 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072929507 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358607634 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071793106 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067514888 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072787112 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060689657 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129815312 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071810333 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.976780096 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166614442 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070580378 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104584315 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163957161 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096190351 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.280079316 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07341372 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069379601 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164973864 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075564492 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070470064 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090058423 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119460898 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109746923 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122368077 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069640846 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070830692 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170884737 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069252635 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084442459 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.115690844 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158874162 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084319299 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071106636 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268864439 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096610942 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075954568 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071160923 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194029553 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134968334 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073845543 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073621947 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074513122 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076440164 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367678226 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071298338 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.179202168 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071487388 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080855212 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073205218 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074369671 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080003867 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079110361 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097821669 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072460171 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081615141 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07249892 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071581489 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073098966 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090256482 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068300457 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404672619 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07019796 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071949179 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068584622 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093270076 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099551169 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072506101 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.176106525 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103687645 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072809091 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070866104 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112198458 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070303793 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086637234 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073149061 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116334232 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069981512 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094489761 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068718326 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06901671 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100055101 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073226615 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101468872 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068728788 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083157632 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071865371 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.450158328 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070568596 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069086032 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072760249 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06882884 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071860173 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071093373 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083239803 seconds)
  done (took 22.611504037 seconds)
done (took 40.094621329 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268709024 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076248813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076644069 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076756256 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076445576 seconds)
  done (took 1.804812257 seconds)
done (took 3.015996121 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126987102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104730993 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069411434 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101729932 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068042864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106522711 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105455728 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081686978 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106440472 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068818862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102732158 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067810974 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067928195 seconds)
  done (took 2.409999618 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088874172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088171343 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073399862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087699462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067257889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087302652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086487806 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094012883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086169471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076762782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067116534 seconds)
  done (took 2.106013285 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087127356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08849971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076194027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086969805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06691402 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086406218 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086525418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089940376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086387267 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078022086 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067641332 seconds)
  done (took 2.100355391 seconds)
done (took 7.814311053 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081152799 seconds)
  done (took 1.272195361 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597842366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.114795819 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085714229 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114418957 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196812334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121703632 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273182733 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090336623 seconds)
  done (took 8.972955026 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106810412 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073852128 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072457076 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074862689 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071710546 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072129287 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07250017 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072728411 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073116264 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07633763 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075357676 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072892238 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076131907 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075545694 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075078904 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075491406 seconds)
  done (took 2.482940286 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09720075 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095155394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077238408 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07790563 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076203654 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07580418 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077508052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077688395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073934824 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075927482 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077649376 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076559224 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074712272 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067460833 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076491039 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078305057 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074061877 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077306664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077582547 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078989515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078691398 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067222805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07443559 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077115842 seconds)
  done (took 3.164034943 seconds)
done (took 17.091714601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109535307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071442528 seconds)
  done (took 1.380456806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085013495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087094074 seconds)
  done (took 1.377574705 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084939912 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069219562 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093656282 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082370784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072069486 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.071280535 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092410733 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07195206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071141352 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.071924752 seconds)
  done (took 1.988715815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070910517 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079756954 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073886217 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084204778 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076003271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067492914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076446882 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071145055 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080144288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065776507 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074411372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085969273 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074181753 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087928996 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0749469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071696796 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073614618 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070171276 seconds)
  done (took 2.570023006 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068952057 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070611609 seconds)
  done (took 1.353682854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06963074 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067280088 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07037328 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06980621 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066517338 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065578483 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066671814 seconds)
  done (took 1.686965451 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395203634 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119657046 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329945601 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0767261 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.087308023 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271319931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06949959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074357508 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074467733 seconds)
  done (took 2.756000152 seconds)
done (took 14.326837453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083926273 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091102826 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099550815 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392385786 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094906654 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069741886 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116688023 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192342601 seconds)
done (took 2.366034292 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220189855 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.719927501 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448325124 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218973163 seconds)
  done (took 2.60794478 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35727781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093651807 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064396221 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073278116 seconds)
  done (took 1.817018142 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07083283 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074289442 seconds)
  done (took 1.368566393 seconds)
done (took 7.236612718 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070295318 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088764266 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070031562 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068919425 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070885315 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067344798 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069416773 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069106615 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072212198 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071272234 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07165556 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071360873 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07167292 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071475571 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068530575 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066814742 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071581919 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069717928 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069004485 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068813119 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071599731 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070243943 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067140744 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0668846 seconds)
  done (took 2.954153932 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088374224 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069291905 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074860276 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074140932 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072544367 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074683036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074106801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069362167 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074260913 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071446013 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072488178 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073226026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07167529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072543797 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07150383 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073141623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074882362 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069269543 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071505444 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072480095 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188319116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068754711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072359914 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074354597 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072355952 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072964914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071751639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06967377 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074877566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074025434 seconds)
  done (took 3.537500613 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073766606 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066619304 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06775799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074140746 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068246152 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068966393 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067481994 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070035361 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069669151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069024829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070233173 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068383058 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069646471 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069759015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070226294 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072717763 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085371828 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069364265 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068828211 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068958887 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072622947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06613881 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066828574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066243452 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066436101 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066344444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066584102 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066296478 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067792596 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066195506 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069950239 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070586571 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066336396 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074230224 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070632614 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066889248 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071060044 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066409824 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066856937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066292497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066270402 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066792347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066782448 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074562914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067597959 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070247135 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068175279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07027732 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068216367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069731007 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06853372 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067569154 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069574368 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068802541 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070825182 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066709363 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067913212 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066602677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067504418 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066789079 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066609085 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066270657 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069296226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067173146 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083033967 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074016753 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067259817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071153711 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068383106 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069616671 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068618393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081451366 seconds)
  done (took 6.229967864 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093300589 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090334005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069483033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068829408 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065365734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067505928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073450215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067361914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068827014 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08567007 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067411089 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068895547 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068708945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07122328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067413913 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068779001 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075429711 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064794404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066848001 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0722365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06748417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072937998 seconds)
  done (took 2.829738629 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159857104 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074014198 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110657195 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078879254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073540984 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078538092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073437657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075238317 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075156964 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072787232 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072946028 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074850006 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075301713 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073292094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073520248 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073529542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07537161 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072841299 seconds)
  done (took 2.70775968 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080264707 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06970721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090267583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068942844 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069607864 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071285628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073839132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077178549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072528465 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069360599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077304064 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07207351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071856457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06940758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071924901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0689745 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071393878 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069131313 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077408792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073286473 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073016777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077114203 seconds)
  done (took 2.860341701 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083061228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071708507 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085270272 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071213219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064925087 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066995995 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073577531 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069078495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073706598 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071167214 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069061922 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067360203 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072044358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069317441 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072071901 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069402328 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070991314 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069610231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071551526 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065961508 seconds)
  done (took 2.674269623 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089926685 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071374534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070979926 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078835941 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072476849 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072675695 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080556988 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073241637 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073493487 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094753467 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07399615 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073473308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080891605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078104282 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073395895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080502861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080295125 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080197422 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073480742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073667477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094544101 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073722939 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079989471 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073864553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07359779 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07408968 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073527966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078942462 seconds)
  done (took 3.414720792 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070298713 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069217345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067246707 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068106656 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069023353 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069124418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069034203 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069759577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071658939 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069405202 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071743514 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072094612 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071767331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071876119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071741231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071329922 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071816914 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068979991 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069288972 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068485476 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071620984 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071413627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071555652 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069523936 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069046734 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071325469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068907688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068603742 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072070653 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068918025 seconds)
  done (took 3.355672817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07867635 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077482207 seconds)
  done (took 1.406561144 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066428809 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083440813 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066523128 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073656811 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072848395 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070141936 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077106898 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072322186 seconds)
  done (took 1.829685404 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086014272 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081231515 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071446381 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084581688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082949759 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089597295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14401183 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072884168 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078330459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069759342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08930365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071349432 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07901539 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073088236 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079098942 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079344312 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06958751 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07859363 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07177558 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068293595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071239374 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079003236 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072198647 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065545367 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0713946 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093992618 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08078314 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071056781 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073453909 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07733126 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076515008 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06374432 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069820643 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070365235 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067446254 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079812525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084892021 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073988272 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080913748 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073146393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081862596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067350096 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0766364 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078749586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083046388 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.072639958 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073029078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066900752 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070058813 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073064982 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066281603 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072687418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066689652 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078328936 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074265817 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081945275 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070895238 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073787922 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075057759 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076021007 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077661526 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073481671 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074693486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071919543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082854086 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077843407 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080277478 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066527593 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0665054 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06994389 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083280358 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096942998 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078922577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072729236 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073694962 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069654919 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075932158 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073051699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078254692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079633234 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072871796 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078002621 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079840887 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072950563 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073405351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077316124 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068460727 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072713632 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067729352 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086844627 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069276191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067937427 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067470409 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080180127 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073540709 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069146198 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06760423 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07673751 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064006982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068803974 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069744857 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069840252 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079281216 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072317972 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073625694 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077293053 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076885643 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070005272 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071825488 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065271998 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069454815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068172286 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075976216 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063776632 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071380273 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.194411929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072004275 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080406032 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069614015 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07147906 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078601375 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076476352 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070306399 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067151028 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07366179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070765288 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072856916 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078276794 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069368409 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06540138 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065035693 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073258405 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070704345 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07521888 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074310636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074694742 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06399652 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067612683 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075008606 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079007692 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070831116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071812451 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076678614 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071547029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069811077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077561219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073300194 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069279039 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076644389 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071235733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06639115 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072817774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073268966 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068814394 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073725128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072925965 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073150622 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070220877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06898593 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076303275 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070741421 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069137919 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071029697 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069285579 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080704458 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07239154 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065147447 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067313551 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078515082 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068202915 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069644532 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069362944 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072895797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070289619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066872693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069822406 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072670225 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08010907 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073556903 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071279935 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075155539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081726291 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069618242 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072222421 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069458798 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07167318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070660661 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078863944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075640077 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074212336 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072878937 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06666816 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075032354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077871615 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068940375 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067335933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069059771 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073813422 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07588589 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074216261 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07051094 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068742181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07092816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073598967 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072833242 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070270343 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069270412 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075939629 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067901174 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076675179 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070383719 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080355272 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07266009 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064458115 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072355296 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068159637 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075846127 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064421325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067041029 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068972904 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071516273 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070703305 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074518674 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063195389 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076571697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077387732 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069324118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068348899 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068130064 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075735612 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070286216 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072455116 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072036163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201627021 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081675889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070462241 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075710593 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081243625 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071047045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064699414 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076968616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069778589 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068793451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070071202 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069378713 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073533569 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080977434 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080219621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066405049 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075825456 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071407205 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072031735 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067901317 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076314822 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072935534 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071177252 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077618656 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070612133 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070618627 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074271885 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07021864 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071073948 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071622967 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073860316 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07095552 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072131325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069745946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073270291 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069805725 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06724824 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072101022 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070821566 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071703892 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077231938 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070678643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072262311 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075532005 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.072186782 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072405865 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073145799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071183103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076303205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073994265 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072845026 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074849164 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06668548 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079979126 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071540567 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080554811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073627821 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069540127 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080172855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074633374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07835707 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072923822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07211015 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073667989 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071763218 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075667401 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07996708 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070065259 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08332109 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0791807 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070692637 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073256595 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071535569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071468587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06901746 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071368022 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071118167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070757978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069678665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07479815 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073292636 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070620941 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071788133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070973292 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070309448 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070981361 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064294499 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069849035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069826809 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072765096 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079484799 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07140042 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07020417 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069377065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071370627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06977951 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066977386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077584066 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078165669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0705124 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076351693 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069390349 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071430355 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080174901 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063559966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068234937 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066763972 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067463356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076758338 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070002038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079210563 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069173892 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068625266 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065664379 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069386961 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067997588 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063408829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066497311 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072240524 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067697052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067710442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068284585 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203355073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07291673 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079777213 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070717589 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071842852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070781322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067225958 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07015843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06947105 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07322365 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07142456 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067774565 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067471211 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069931079 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070902137 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072040975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070213035 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072384565 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077544734 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070212453 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073882294 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072550171 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065463496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074471044 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073130988 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072690555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072084076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07693411 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076543578 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073843977 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082381606 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073164664 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074875901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073770288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070411993 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071927674 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072175584 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072481272 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071836816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074512883 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080053887 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069469444 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075404316 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072574953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072840855 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.079228952 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073281533 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075273012 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077301523 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070901624 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072915971 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0789899 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075300942 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073869482 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070660828 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072072612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07603195 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069754595 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077012755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07170418 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070886041 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071421021 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06787038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069625758 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070029255 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069491237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076185312 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070687313 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069062411 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068955021 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068202574 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071004668 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073945272 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080276571 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074209182 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075458588 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066462629 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068330999 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072522301 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06944395 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073734799 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073441701 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07615417 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07442918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071640733 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070740251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080460359 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078992546 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076518726 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070281817 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076983554 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073512996 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075657268 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072350559 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070403292 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071614157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074228811 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071915978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069694895 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076979663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073460964 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070837511 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071571767 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071007823 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070212295 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064815845 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069784548 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071525728 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074976725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072001253 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069762272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079240171 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06717873 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069443928 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071296639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068011629 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07329542 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063736056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07206876 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072189402 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070966971 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065187557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.200093689 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069336725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074020129 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070037656 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065737301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081733081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080823179 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074079116 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069551742 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069648289 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065389917 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065566765 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070112993 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071644539 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071793858 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081611944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069160755 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069670274 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064812921 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07159388 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073047337 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07323989 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066927598 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065691219 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069615901 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073304856 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077427542 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068895931 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069655645 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073708279 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072874738 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068344111 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073413672 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067394392 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074040148 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082971638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070553002 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071605619 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077255781 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077475367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070946678 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065122657 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070368654 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072843005 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071192967 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071149479 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070873683 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086534274 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074047546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069911755 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070073374 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0737371 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069778457 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078408428 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071030434 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071369116 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074769958 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072115785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078156087 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072873413 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077306901 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072854303 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073069035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06977178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070536913 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06839175 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069667359 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07085016 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070138463 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075003714 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07747071 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069090711 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080711684 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079275768 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071988976 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066515817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069133102 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069461145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0652513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070821735 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068374633 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06837222 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068129876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068992083 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071977103 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075324186 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071169827 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070987151 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06990438 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064435368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072527962 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072607534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071124973 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066900479 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070318014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070722206 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074513614 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073120108 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068164545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071834038 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071551977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071146353 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065162039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076748791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069167029 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07214517 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068646112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069687548 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069767443 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07293606 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074009842 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070208878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071691447 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074307813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072812019 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068576998 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068353049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07685813 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069129831 seconds)
  done (took 45.1099405 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105874077 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06761298 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065965301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065102423 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076974555 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065864841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065373958 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066115975 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066491816 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06799789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065894416 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065080594 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072935343 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082040366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078429313 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071916891 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066724828 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066416826 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065075414 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065971667 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073129622 seconds)
  done (took 2.844813328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076708974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080752732 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077510125 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084970556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074540281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072837738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077910752 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073440518 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081488559 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076228027 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08221613 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073090188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075458002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075435426 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075280646 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073625927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08338818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07392958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072935488 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077756584 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073713192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078065383 seconds)
  done (took 3.015112249 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070421726 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069476703 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072106192 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064263516 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06953548 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06397793 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07231996 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067009115 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072491768 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069002105 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068140499 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068395964 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071101328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064649186 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069615627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0682781 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113354733 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073804928 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072374181 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072184747 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067378695 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073752914 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066691291 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067076447 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068672507 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073789582 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071935734 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068506966 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069334312 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068639188 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069294454 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066742833 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071027383 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07007233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068944205 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068420238 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069501501 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07010525 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067426827 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069554312 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072658572 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067376704 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072816401 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073091646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068951521 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067544844 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071936785 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069164092 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065340166 seconds)
  done (took 4.774637521 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081455207 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114505037 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070771735 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092507045 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082301562 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075527985 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072482475 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093641008 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065864806 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067330316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083910989 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081499015 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068476741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07323443 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072423638 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068030043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069805233 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06815587 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071882785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067925533 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072238936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075277702 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082101615 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080929592 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072445729 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067775396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067875703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073301357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080551205 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072422634 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072797545 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073636131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085974936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0730544 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068873428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071417988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08470927 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068618015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070848541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066429946 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071078734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072476317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075142585 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08416705 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068719063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073469213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068306241 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06566707 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080154942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071078211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07629966 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081763992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072373327 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069625925 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072997227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083170693 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06828982 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066544454 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07131597 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07972383 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066694964 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072142707 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081423698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071308283 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075086238 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081186968 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074275148 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072301748 seconds)
  done (took 6.558855122 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078689123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099678532 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085277681 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085744405 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07833675 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078239562 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079092712 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078855563 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078260287 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08328453 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078815141 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119531462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074261739 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080647457 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079058444 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079162373 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078277497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078452254 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078376421 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078601205 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07884196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085425511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07823719 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08569893 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090263498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074713915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078162902 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078000833 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085443603 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07929854 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08362742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080746664 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081340365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087499669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083334788 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079021307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068546737 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079460741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081014904 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081041177 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077085448 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087933821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080502558 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076453133 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080936119 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080888191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087078231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082537212 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080810197 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08296534 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078652426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085523746 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078813526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078697671 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085801645 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088113042 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085591348 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085991064 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081115977 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086396475 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086302047 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088832692 seconds)
  done (took 6.445171852 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086038282 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07723534 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08560483 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064308483 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067069677 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074464222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067583593 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067114777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077151203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077084613 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079056499 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074774401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077297511 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078883584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074662908 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077690398 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07481769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074767803 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076687305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075052038 seconds)
  done (took 2.85579406 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078346392 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087397509 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069562801 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074705558 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072323619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074419882 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072267744 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073020555 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070706075 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072431662 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079018214 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07901007 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069977935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074751211 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079621682 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075271073 seconds)
  done (took 2.543727614 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087186886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076599433 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082701362 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070190413 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070176471 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065728841 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069052139 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064372679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065696474 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081394379 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069421836 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079774903 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069354608 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067967323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065962561 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075157317 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065192234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06664191 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069354545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082239645 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073068567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067567424 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072397636 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069058558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071567621 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073238745 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067897122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069456664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066238959 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069446968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071846261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07223173 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066285307 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066757242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067969403 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066099734 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069851551 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069515184 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074912562 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069107417 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067319517 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071427504 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069668958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06997381 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065400526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069089989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065649435 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071786194 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066613036 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071516084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069003004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071219097 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06974282 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076056555 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072421244 seconds)
  done (took 5.229252545 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083017047 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072788381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065376763 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066859204 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072211171 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070350988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072553223 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070377588 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070392761 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067434397 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070727002 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072453288 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07029888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072691756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071989103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075226752 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067308836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072767482 seconds)
  done (took 2.642769906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074553988 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069240807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075979334 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069467777 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069622986 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071743072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065019123 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067688665 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067795028 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069106312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068918341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071757063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07014145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071408091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069395918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06902668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071748393 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068487265 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068890324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065226759 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071858383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067939737 seconds)
  done (took 2.889598576 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097636847 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08606619 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142213823 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082680546 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089433926 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07513913 seconds)
  done (took 1.927603254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094866273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104439025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06957419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072536557 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078832475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072956813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072907365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073433259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081718509 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078313501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073401799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081530393 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081002722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080010772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078797596 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078421601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073332825 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073143642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069507298 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086295101 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072946575 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081073499 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073243249 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073402031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072888228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080343742 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08126081 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078308706 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072821475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081485995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078481253 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072897883 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082900402 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080407958 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073682447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080846229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073137614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086210853 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078947199 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080319323 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072022071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078554884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081332146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077478555 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081631213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073333228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078032325 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073650046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073348627 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087999183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078672115 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080478216 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078617583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0812974 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081170783 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087753564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078628471 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082750316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081529182 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079968862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080725686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078851616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081051771 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078447997 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078626944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080466365 seconds)
  done (took 6.55622004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108272364 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069962628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07377173 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079127884 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080739848 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073520496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073307756 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073281379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073813858 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070974818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112292614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074594366 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083159166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081062274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073151586 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073047376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074367221 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080120717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070201944 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087994175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073952226 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080281125 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08037466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080384167 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07894445 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078522833 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073495083 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073389265 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073148973 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073655864 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077225144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073241205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080623383 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069744987 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080135462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073173466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073066793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077309709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07299875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078529696 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080327225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086037738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073707694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07331568 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078674644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073480644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073673916 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070752886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073234875 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070110952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078360318 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078400677 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078453858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08011806 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073309874 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073441413 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073134181 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073014903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073454853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078756283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080557971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07373439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088153072 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0729547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073955656 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080443327 seconds)
  done (took 6.468524979 seconds)
done (took 134.883730499 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194113495 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174074142 seconds)
  done (took 1.721914735 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072211309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101455528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080273133 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132072563 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070047748 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10359624 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102955365 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080986375 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069171484 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069367834 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069737674 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071729829 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135110938 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069682263 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070239465 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07286902 seconds)
  done (took 2.736156186 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10258489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169030744 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10640906 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068416565 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103542438 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075789858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068683907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078713852 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074520765 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068978547 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075819123 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073990477 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070130998 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075862951 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07382282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075704468 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068090297 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076467162 seconds)
  done (took 2.874521518 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103846199 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094847249 seconds)
  done (took 1.564122706 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158842667 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137174298 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207370777 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355865325 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163882746 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150971893 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14645051 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145322762 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116060582 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141208757 seconds)
  done (took 3.083425706 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10648273 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158351609 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277469203 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122147534 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076283502 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097117284 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124540641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.0824452 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083282959 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083356871 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084021845 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079961223 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103580349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077380679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077829871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079928737 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107960765 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076609042 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07834327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079206168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104934616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069281508 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076482679 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076549029 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080107193 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080476943 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069715987 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070462849 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079215058 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078414851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079614256 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094916776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080116663 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108692387 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074538995 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110565047 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080527973 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076953931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078442334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076621164 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081914498 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080811376 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077718465 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079814523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069633319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080734383 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069106851 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069809482 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08032089 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070575125 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080787627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080244612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10953177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070641729 seconds)
  done (took 6.189714772 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11003438 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111954737 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075599127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11828403 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108534052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076141464 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108708171 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101920413 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109973494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073990015 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071487836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073892098 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085135025 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085771671 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120741031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112340415 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076779885 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074932118 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11149872 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11141442 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071899364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102948326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096908136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109433045 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070734469 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074517345 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071741995 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073960588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080202948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081362065 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073053519 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083139709 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087239018 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080776644 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07009806 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071295303 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07217797 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083542373 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082773085 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082063383 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080831396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071838616 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071496882 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073125097 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073831685 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072241555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081945524 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083284224 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082042916 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073081982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073999125 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074480734 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073186769 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083466794 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080807285 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084316945 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082977806 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071762014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072019666 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076423597 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084417687 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082130499 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083767904 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073052454 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083147001 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072666913 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083398176 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087425218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072065181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074506955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072053702 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073682121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073255924 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081399969 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081140266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073215313 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073012959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072190508 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08297803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082125698 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072416915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079965194 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070897515 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072215872 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073016859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073305629 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079993681 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082269534 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072632364 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070965287 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072036027 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071537939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070964376 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07843627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08137498 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081029437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080399762 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072132221 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080301698 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079740645 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072493072 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080325706 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071032255 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072271391 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071695282 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080232432 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078183438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080751851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07175704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070813805 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079283111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081954916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070386663 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07935617 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081456104 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08031024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07098846 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082443168 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070841668 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080740052 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071626583 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081026716 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071174552 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079701713 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070952911 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070295653 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071066708 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080194637 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072407582 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070359237 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071955559 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072130652 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080111292 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083048293 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073024922 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078771022 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077704203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071874379 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078762341 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070183102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078820759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071352046 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071084409 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069082196 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082248407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070536539 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07053218 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070970607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079940993 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070326799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079040317 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077355774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069203202 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080099361 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079908107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076504298 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080085552 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071966979 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069692954 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069996752 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07019938 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078369267 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079411742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071669221 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069836785 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07743098 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079827757 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069038361 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078019445 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078455492 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078566203 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070460012 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071220883 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079633296 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080547412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078458777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077813314 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078553207 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070240995 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078044265 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078777993 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069993464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083416589 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070195008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082915099 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078141273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077162224 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078097344 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079962585 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080052563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080058792 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08264149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06954002 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070132346 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078563725 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070671993 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070900787 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07864496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071609889 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071338211 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082756741 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070429145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079478544 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069767225 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079242498 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068998999 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071843111 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320315736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074340527 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076016983 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08583809 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076471268 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083697826 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087472079 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083807096 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07442668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076254504 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085475731 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084244486 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073741209 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074021432 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076236367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08438785 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083019695 seconds)
  done (took 19.214914998 seconds)
done (took 38.762868493 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218955148 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161829084 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180809151 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125239461 seconds)
  done (took 2.184686833 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12406313 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108230841 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097629171 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070076505 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104118845 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.07061104 seconds)
  done (took 2.002689267 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322593535 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217736597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195550451 seconds)
  done (took 2.15922138 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218938946 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201494788 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461151262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282146641 seconds)
  done (took 2.705762894 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.157087935 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09288535 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071881826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088662806 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137511871 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164418356 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10460089 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129522238 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083651873 seconds)
  done (took 2.509140024 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154098546 seconds)
done (took 13.150098952 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.224742596 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193988621 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101115997 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132465083 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07384983 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239448434 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097854854 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078953802 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117993228 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073967668 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076343707 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226170446 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166795531 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082828832 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08905579 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207099146 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078601611 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078014026 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084451127 seconds)
    (20/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224237929 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15691991 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087377874 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.261604264 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117200579 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094568059 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.162694799 seconds)
    (27/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.237451207 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.178039178 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092838923 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077000026 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225318481 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.165481661 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076660821 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100282761 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08320623 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216290848 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11642844 seconds)
    (38/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093458557 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.108469915 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076757304 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227105588 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134989896 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07009619 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203092669 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210262921 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077989045 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10520296 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.216915824 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 0.139478976 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164086868 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189055617 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05895571 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.207812505 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.229802802 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076467149 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079197975 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133687448 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077494523 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.293835977 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.153525209 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.106774767 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 0.138816072 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090143536 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054798595 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077215336 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161308207 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055011046 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069689132 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115781532 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095834587 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213769854 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107174554 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095612044 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071492492 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141352516 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080744164 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094067521 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074237411 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069492873 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081460215 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.12279284 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.26264848 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080976605 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092505979 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055347691 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069763849 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082051008 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054698972 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18601491 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065380149 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054011755 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12390132 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186677025 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.070017731 seconds)
    (95/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07752149 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073359368 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067963115 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.120245009 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08156477 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127555793 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055108167 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055370146 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07967622 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080478676 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07768786 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097157093 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144426993 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070010684 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080252413 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076784318 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09025177 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055482724 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054796153 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153007285 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054479943 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055213259 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057065297 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096746038 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085624543 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.146514263 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078167715 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077890757 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056116721 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091651942 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076882574 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076166416 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076565375 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120856809 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07905455 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192441112 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076628028 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16446598 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155082385 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195434338 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055823217 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078478594 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097089187 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055930233 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069378901 seconds)
    (140/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069801237 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077257992 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205593376 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096862376 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097345895 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055734398 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081812644 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071671289 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06971796 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.180943634 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081510054 seconds)
    (151/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095489929 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193458725 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077826596 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071946151 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161445749 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077467374 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162736099 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107393652 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 0.148702495 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054198162 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 0.201792843 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069408374 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066874403 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080845964 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068983256 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067811828 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106865413 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069128757 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072009841 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11749908 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08217352 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146542168 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143476938 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069257379 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070532312 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076007338 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06593772 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159477852 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090146576 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10609679 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096378723 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053437639 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.149941848 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077868167 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067862992 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066332985 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093216723 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0941407 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056102343 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.243416467 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078228515 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071635337 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057209983 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07302134 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068706723 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056473778 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070739129 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074872629 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055128927 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054766364 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095475507 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095844682 seconds)
    (203/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107995004 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056711859 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073031134 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116276142 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054660767 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079277516 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05485965 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077386386 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085704973 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054404738 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117122098 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157667965 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.106368818 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099175625 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082811623 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0698619 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075800396 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081735733 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054717673 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075608011 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202773497 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054355627 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072824958 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069934946 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069980433 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05675129 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06747365 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054567084 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068363089 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07109729 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080979017 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067323894 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077445984 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070626638 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070012449 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057192833 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054658029 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147625512 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056629109 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071083719 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054652888 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100499607 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070396152 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10754431 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056569751 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078009717 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070524587 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071004817 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193897294 seconds)
    (252/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08366807 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055909758 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08677016 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161996434 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069429362 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066009684 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083065574 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069317964 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07627391 seconds)
    (261/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076114858 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077767226 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077940138 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082442091 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054424872 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069564059 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054935294 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093634507 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072534199 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055939828 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076927325 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123524574 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077630237 seconds)
    (274/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067726966 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145025492 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068305452 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09302149 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070859744 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070201327 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055556818 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076813358 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07704591 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137683664 seconds)
    (284/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18548941 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055050189 seconds)
    (286/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055068574 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054224663 seconds)
    (288/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076289944 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054154565 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078245247 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091618927 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135109017 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075926728 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092904145 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054853307 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054409975 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152713503 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082860047 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067212641 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066484019 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07645454 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069590572 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055011398 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074633847 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073896524 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054604629 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065668006 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071426011 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055014361 seconds)
  done (took 32.63211261 seconds)
done (took 34.069131354 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090986702 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097484734 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079550856 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097411924 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085552574 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080330926 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077205471 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082697647 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084092223 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085709423 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081862617 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058205797 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07897249 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078754096 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0792951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095197202 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083426121 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077196931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078476767 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068347052 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076866473 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069351785 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071667288 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059226638 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085127457 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078159548 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078859339 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080084648 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070631583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070529156 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075223962 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080796078 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071902983 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084946986 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077641633 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079693747 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078962396 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080527583 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071148615 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069587784 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078412683 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069084545 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07685562 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077478344 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076047065 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075253799 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076849419 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080948798 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095021703 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071715602 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078661094 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079860243 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079004258 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076486727 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073724948 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077217649 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073955391 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095001207 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077551691 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071232474 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078262453 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07824032 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074923716 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077333724 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077300631 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079114392 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079655884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07492052 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078852066 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075554487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068763746 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076587623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073079286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069364341 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079796983 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082696675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068132818 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075747541 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077073795 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076022207 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068476947 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071222584 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073346825 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077149609 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070882237 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057360254 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073485996 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075548815 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068083036 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077391407 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07684464 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076334017 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071020501 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079681912 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068074045 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07430301 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069753243 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069401569 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071289569 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074122743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069114025 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071050276 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078784423 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071016495 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075883636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082623021 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068753833 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076420128 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067715578 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067831433 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082393664 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078242956 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06864136 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071481908 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067832643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076083581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067926029 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069394116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068694341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068718979 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074878687 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068876567 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070783918 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076329494 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081901289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068330718 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072542222 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070507348 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068730936 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07462947 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.205011273 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070924134 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072420798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066433893 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071607502 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070378985 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077687624 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071400232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077436023 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071228625 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077866947 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074905439 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075859971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074712045 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067954803 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062667556 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071937093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071212449 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071835041 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06933121 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071290065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069091303 seconds)
done (took 13.127752747 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070170825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143334279 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099984127 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099546436 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089681135 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070181916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079364267 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103343793 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07153818 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104269898 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091915757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090333014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118031026 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068087888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070272818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073908041 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070676326 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085007774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103368091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090910398 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118797164 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068779382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096667187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093431244 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091817059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098275706 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070674019 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073819027 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07360062 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105592278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092801688 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073740311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070547505 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102137496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09745882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087452677 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070201813 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087071369 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069999517 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069591888 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071289815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102441096 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084501177 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.0842035 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073685714 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080402374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071173163 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086748184 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093564547 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082644855 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089285621 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104556512 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072381853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087614211 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068074814 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089846038 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08090072 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0722837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069956254 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078414971 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0698921 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074035589 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084727235 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083762495 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073998438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088873064 seconds)
  done (took 7.117442692 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088393967 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096033465 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087803961 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087606349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068962366 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070377673 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069767581 seconds)
  done (took 2.099135626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070066785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09266565 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093554371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093665681 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086520597 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092283634 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0798504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070602938 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092359997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071650806 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091579469 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105295213 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073347202 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078222056 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094744505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069730283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094753787 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069980658 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073792497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095083468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072634355 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100350068 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073892413 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070996125 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084893917 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070337881 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119182342 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074721169 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072377463 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073419217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067879756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111913529 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084408229 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078516408 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070921754 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085360696 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085649323 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068730693 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087200157 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07944415 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084587496 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070853889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071756739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068554423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074597306 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081478591 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071367662 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071068088 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072941286 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091399427 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071021348 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084224772 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073742111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076045878 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071692969 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077269452 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081041977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071416413 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091118944 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072166896 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087766238 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086629743 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084443434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08649581 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072483315 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084183005 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085388461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072863259 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072608917 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074183741 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087048762 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068529106 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071578315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081068849 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072148398 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094481851 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094519454 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072171665 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084352966 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070753947 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070390217 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070733137 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09419637 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075647982 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0702126 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074489167 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07328053 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068700754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0692278 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074179403 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068546647 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071781516 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073253249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073909644 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072889745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087904767 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073136883 seconds)
  done (took 9.235654825 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073066415 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071447976 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073448556 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071654845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071090922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072001665 seconds)
  done (took 1.989173311 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096332681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072320235 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083679127 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075150566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109701196 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090311573 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091018143 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08145181 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08829985 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082444009 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.092166815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091766061 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096031213 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075950866 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091499364 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075444551 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091093683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078456436 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081898335 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076360909 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090000635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075600859 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076497983 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085919146 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079569315 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075903518 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081841794 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082250077 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082213952 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082040243 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075856054 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079579788 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074222874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081532243 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091625262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074493675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075038239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080335527 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076135264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079318211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092313506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076349775 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077312233 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081084394 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081044699 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074822644 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081474605 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08286983 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090246279 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081011636 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080910522 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074173029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079342438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080419623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074207932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081493509 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080344085 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090857207 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075730589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074236032 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072870963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079480482 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080907971 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079384241 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084066274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080590685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074042029 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075646723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076073307 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075059085 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080780923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073055406 seconds)
  done (took 7.399975061 seconds)
done (took 29.360192701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539005216 seconds)
  done (took 2.055185155 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.638793502 seconds)
  done (took 2.182093027 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.507864664 seconds)
  done (took 8.049513633 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406959007 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510574287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.751159394 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137274604 seconds)
  done (took 3.383064721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728843655 seconds)
  done (took 2.274887894 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236230166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220250692 seconds)
  done (took 2.00996307 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387265337 seconds)
  done (took 1.924868438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.154244352 seconds)
  done (took 2.695754456 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266463957 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184071963 seconds)
  done (took 1.994484582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.492918514 seconds)
  done (took 2.033933778 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.91465892 seconds)
  done (took 6.458726087 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221554942 seconds)
  done (took 1.807527863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246030737 seconds)
  done (took 1.7843584 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765534844 seconds)
  done (took 3.302522089 seconds)
done (took 43.503362201 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08885732 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090575273 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088711538 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085246211 seconds)
  done (took 1.871509683 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082636775 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076407281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079736106 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076239288 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081225933 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076081405 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077752422 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078599044 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07613588 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076770473 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076066306 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076368735 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078358299 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07738114 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074372686 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078377398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079535518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076151922 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078945084 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076093667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074466966 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078045276 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07799757 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07505543 seconds)
  done (took 3.395598771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083364455 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076018544 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078780587 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075177966 seconds)
  done (took 1.861146195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082663724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095583437 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093457378 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082040414 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099417744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090136622 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072419121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072348313 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07411363 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080766867 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071074863 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099691515 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09201179 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081276186 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083686716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069089736 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071518684 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091366767 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082087922 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081972867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073860944 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081670958 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071777136 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092393429 seconds)
  done (took 3.52904081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09257678 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110116191 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084710065 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092199539 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095186837 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068734057 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091636705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094833556 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131147446 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068407017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074096854 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069017326 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077468164 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068545079 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084534006 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111685615 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11600268 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072420392 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101203581 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069434961 seconds)
  done (took 3.327406518 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077723562 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073516404 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070785754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068552092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080845486 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076257969 seconds)
  done (took 2.003738775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073237294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071970522 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071432964 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070440054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075590478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070533642 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069650278 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07086443 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071271985 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070402995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070407615 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069705182 seconds)
  done (took 2.403350403 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204793358 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07144635 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073766653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069508631 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073948379 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06997367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085217023 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071935327 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.0958364 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069935095 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070920306 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072407564 seconds)
  done (took 2.581161543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215658363 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079596 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241541108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15512698 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11433561 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11951203 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11638818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1173631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145983377 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103989213 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170305064 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169660142 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111276524 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139949166 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092657379 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102417124 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157641035 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167204617 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10943735 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169098977 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153763746 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129545399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151057074 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105461642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108957017 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126043285 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075319402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08390816 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173691024 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136595409 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147255957 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115170788 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09541987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180046397 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175635985 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144063296 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150897331 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087934549 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105300969 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137646985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202924737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092381549 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1640789 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251207022 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085185381 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137591071 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122367829 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124421188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107336233 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094397729 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149846342 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187237964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141881482 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091258064 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128676303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116391837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118475172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117532509 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184970144 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165862662 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131353785 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075338603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11388721 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155807613 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136427071 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112074609 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128144976 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094648315 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138063656 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157466598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125764907 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147241218 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121544942 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092300285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121857214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143205471 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130697845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163689587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126029906 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075766408 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125724653 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104600059 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083482405 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.151504666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078761905 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177752929 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101996447 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108932502 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129270857 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112998331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112024866 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161664055 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145538211 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105878885 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210438226 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109712139 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124045308 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149269838 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09167065 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112936831 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121100178 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081422531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141454536 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078947166 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126266318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078863455 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128269742 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132930832 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081839598 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124795568 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107507377 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102768192 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13538791 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161925612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091039836 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084914274 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172565332 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123976397 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105654427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146559317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157461758 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102427307 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103327489 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15320079 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181304689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092734445 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16447574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109678497 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087208923 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091786411 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1261408 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114721429 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127586729 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085180368 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121044331 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170628171 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07846378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098822939 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137135622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081565154 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084193672 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107969203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107332011 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098977359 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102751837 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105322134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138489433 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12538542 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107504858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125573957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246173692 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174458084 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091201848 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10633414 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10829168 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073265182 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140048898 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159987812 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0831814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130868 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124936069 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12103256 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121063215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087322164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144869393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082282525 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073275091 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148104978 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113451604 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113069508 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152735354 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120722147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12903056 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124114904 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135225199 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135244076 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133315207 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109363392 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091671115 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114485854 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129768585 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077147742 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094362032 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083308969 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107445157 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099257785 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086551102 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14409455 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127423879 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114132625 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114211507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099546806 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150078493 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079837221 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131284536 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12182683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098411785 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153505733 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153623869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133885163 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101526748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139543288 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073625959 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077271978 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09015956 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123744174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231063326 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087387526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119514257 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150775768 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133268649 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139502724 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128942474 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125426034 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15981228 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073628632 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124077938 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149268506 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124124233 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10831277 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093632527 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102718859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144990715 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110788566 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184160615 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115367269 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125513052 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156534448 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103982115 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082825214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105940363 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138148306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106766013 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145926636 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102054273 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092030757 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111643925 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078326303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101835684 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129764867 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121137339 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136499705 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118155034 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135655126 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081329652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118344352 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124522944 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124227411 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067116248 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122946077 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162383272 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098068714 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12023311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1541799 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082052738 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138208434 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175641099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290661096 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089387429 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112770916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123453682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131233818 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123868853 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14428376 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109946714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139623407 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113260721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08956797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09133165 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100811906 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10817974 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098916954 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10732233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115810239 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098769479 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134984628 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107613597 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113654851 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119461745 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102839904 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094501919 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099619159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179550084 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121645189 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174141364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102151501 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146712707 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166048616 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078338217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081978472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080677172 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142632653 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087326217 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132390743 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11103077 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121859129 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126200241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145008529 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098868161 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071795932 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113614853 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135610068 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128628868 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102324731 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106651868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165444518 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103069603 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082171024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117283162 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118850291 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105705648 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172277532 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064597891 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108358539 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078720533 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082941131 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27424209 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15704896 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083892668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107990964 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121960273 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115048393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130207476 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107013306 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112422324 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130601515 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154305376 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131254646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092546062 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114945297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130618745 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158244517 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108358752 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099808136 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174106311 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152928999 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161948074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091321501 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116686691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115301244 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110609703 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139387001 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087140398 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164996111 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085336824 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140038762 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106158858 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091566579 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131391982 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112507691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091089953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150324049 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120209467 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086013883 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081138267 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121221064 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121808396 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109253458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078834159 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140543014 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076717649 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134016031 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161094127 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083210929 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107093143 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098608292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08239325 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107819078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249188739 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09082305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102027703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173732589 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089659876 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151848811 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135814767 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115212489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137607461 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106039202 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642036951 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080349628 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153582779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119743016 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177188429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103896231 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119841868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111798064 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125688513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149181729 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10684988 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186917386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13621372 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118108821 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082184826 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104935473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107152642 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090292694 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1113556 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115878686 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117870153 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095746126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118454228 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126528358 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085510353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099201374 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157885898 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119325971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147238477 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143914404 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089264544 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120371441 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139828314 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083216047 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122852405 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153634294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107993177 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10318604 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083763138 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102539107 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159810696 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076226964 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30777665 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123895724 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114004306 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115391678 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115740551 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134686305 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109737965 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124044032 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095280759 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112224973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116042445 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08551931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080235446 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110701585 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114713526 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101705655 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10013299 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102099278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154304239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074936181 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102290102 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118248428 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146918304 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176879281 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091784917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085816097 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121915709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117291741 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115473589 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1239961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082054164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084846021 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08264415 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081398592 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111574298 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115462223 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117334792 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113683232 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165387048 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088307029 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.242242302 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098373399 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10729587 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073203919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081504906 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099032386 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101069378 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111044039 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113761331 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162285151 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097838986 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092438506 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093632545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077072997 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085835285 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130445352 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110885999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119334521 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248397853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066248762 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112429812 seconds)
  done (took 60.538919712 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112801689 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085562983 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099285036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146524173 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126425327 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204838703 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154692807 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192357155 seconds)
  done (took 2.778815955 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073715129 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09948791 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106708944 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08713041 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070710838 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072478514 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234531235 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086205288 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069744826 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099563812 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082429009 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072762663 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438458049 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069104414 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070876461 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06478464 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071144819 seconds)
  done (took 3.517427406 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407934033 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617889237 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362298214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079450822 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.917464043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096181985 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.141679464 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140406475 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081623196 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538915493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414410119 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13596307 seconds)
  done (took 18.595541495 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085532507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077427433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092668628 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092970974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080999398 seconds)
  done (took 2.08545099 seconds)
done (took 110.058537182 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086778193 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617757829 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05625367 seconds)
  done (took 2.357116719 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088824163 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088994682 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088114814 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08614118 seconds)
  done (took 2.016513249 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079405912 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07936065 seconds)
  done (took 1.818111475 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238983206 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171169229 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100179886 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087122861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082967293 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083715181 seconds)
  done (took 1.914647206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077127977 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079167672 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076313986 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079065883 seconds)
  done (took 1.967434011 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082649227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056889748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058751985 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060265903 seconds)
  done (took 1.913997615 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092313355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082657723 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083420328 seconds)
  done (took 1.913567113 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107677546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089691984 seconds)
  done (took 1.853200653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087073978 seconds)
  done (took 1.744565664 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101923735 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105387354 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136122518 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114606367 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143078299 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112568969 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087617552 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088470546 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079723338 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089526188 seconds)
  done (took 2.716184214 seconds)
done (took 22.465295998 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083809889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377761325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364651241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094092821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673495752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359370518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992187937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09672831 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119201848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070606222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088452068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652880779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982805726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332961808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970336831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332936075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653354034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071586975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070776148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070859013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97653701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070748068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071162007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071461578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652871806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375763063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071471626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332836623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071564677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073381466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359105721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071795886 seconds)
  done (took 16.296845218 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075808993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124235444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076346924 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089104156 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074374594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0722105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074805773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088266562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124494248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070877859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088690043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070448873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074487895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071495413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090920055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071820362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072034487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07187013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071427945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071465422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090414615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071143376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071504973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071607254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071385477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084617297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071956556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071272901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072413456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073954317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074379876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072139824 seconds)
  done (took 4.194669332 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120554338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129320011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077190741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107383184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114770566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073124944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147379061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097431098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130683731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07132612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08940486 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071654327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106197502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072022631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091749245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072177594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073074855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072209091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071395306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071721304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091949524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071687285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071527938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072213649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072839602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086297569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071858245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072268394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071867755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073692842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075723101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072195637 seconds)
  done (took 4.435936239 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077160915 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078784801 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087398642 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087882074 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073101905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074899197 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076933064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072854803 seconds)
  done (took 2.303950931 seconds)
done (took 28.894251421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083723345 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072597993 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07603865 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086662863 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076732647 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081039605 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069885694 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078769866 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075698815 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076372027 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078171634 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071319707 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074550176 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070454789 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076997859 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070993058 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083258447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075465627 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083010371 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083071744 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073493055 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077274242 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078526982 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083586349 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082933942 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082897075 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080989496 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076454614 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071970762 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074090499 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081755313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087421202 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071982648 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082445136 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071397935 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071304669 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074833703 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070689882 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082299072 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080117507 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072379741 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079586132 seconds)
  done (took 4.904704052 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094347936 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099200896 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091147257 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066695653 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069963128 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069083435 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092717008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063057648 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063061472 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092239567 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058746478 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062625528 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067468979 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056907433 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063586456 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059891918 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065335263 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058693186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063245478 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063044967 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093174919 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0567447 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081010496 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066679729 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059000795 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065144923 seconds)
  done (took 3.526218236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078054404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088922932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093491906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134713572 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108984017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083297187 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08253549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099134739 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092884036 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070066382 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074522923 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096646752 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093716558 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077356958 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070803667 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089767307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088282322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072134876 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076667626 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098088995 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09116807 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089109318 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099971788 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087033721 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070092423 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073274347 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074923329 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084969139 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073503932 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080697895 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07476347 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074700775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073101699 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.093609438 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073622757 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072631954 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098456657 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081261998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082565237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072170199 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078923518 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071884025 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096501635 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130601144 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070357484 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07709006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075011757 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080916719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070231638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091210249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082634087 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070579284 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074084623 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07003008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070479192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07466352 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072474998 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073640255 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079955234 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07685731 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096456604 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075765767 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086957317 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07042015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078804554 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069916702 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072130418 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069992101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099767057 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072540659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115291328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071827845 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071701654 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080532805 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07979551 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07775604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071673294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087586618 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081428809 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076367392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079202966 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074564238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07416661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09496561 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073277078 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072983011 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07157356 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076986827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074066621 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071874489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086793311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070315349 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073817639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088014866 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070918391 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0725909 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076478999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075649075 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070592906 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082437134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075039069 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071856164 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081363349 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071319587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074240224 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083648297 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077768374 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069792752 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074775921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076177428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071937303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072943178 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073889382 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072347253 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079526945 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078037727 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075067425 seconds)
  done (took 11.083772391 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169568149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161230066 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073606327 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153545098 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080530497 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083000393 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15550101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098437409 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071063291 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072174775 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072278201 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114298679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109957334 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122752112 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082545003 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071304637 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087855421 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119046197 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157626652 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151319733 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088803035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080632474 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073967972 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072429395 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073844689 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0825282 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089126387 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082306921 seconds)
  done (took 4.561769507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084411079 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108671705 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078866137 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094912054 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093862695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071243462 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073554003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073564565 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085124996 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081107531 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071008269 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076921562 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07772891 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075243763 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072565871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078655252 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078728997 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072850604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074992776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077048868 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082403386 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096927521 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075058976 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070750268 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076156297 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070794723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066165265 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088206585 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071961656 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099985066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069431226 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076648906 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086375695 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072375572 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071257935 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07126841 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071102688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07096726 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073760901 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069526505 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069826106 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060532265 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070694566 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082162919 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078629564 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060159364 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076452895 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077178933 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076407486 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068721656 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074464992 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074611791 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074672722 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079767704 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075479754 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07681979 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072135092 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077514452 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080995344 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071179954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068683365 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070290825 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076115808 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06817314 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080405687 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076293159 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069789689 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071574214 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072916938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078250569 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071034306 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075712868 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068722212 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073481035 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076095873 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073475425 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072497565 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06968782 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071144125 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071533591 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058485562 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071150455 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056172587 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074658558 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069035077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069796632 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070942489 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07670415 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082830632 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072727528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07722184 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072521719 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070293311 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074437599 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06366214 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074082706 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082899152 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085692602 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071584269 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069199835 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086142247 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076099792 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070653149 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059033131 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075998329 seconds)
  done (took 9.583635517 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093921979 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073858238 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087662232 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094338757 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091399588 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078575953 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0811311 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072665226 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087619605 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077719334 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081409328 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071695969 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081885755 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081255755 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074010162 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081523972 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07585355 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088501608 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086696466 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071425966 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080246826 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084793349 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094469565 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086154461 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084615042 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085868208 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09574658 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081230719 seconds)
  done (took 4.044164882 seconds)
done (took 39.375499222 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.767548445 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.926037911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743386782 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086051082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.957687787 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.762063061 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.936045183 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743771998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.961621365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778273717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.03059882 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.947324985 seconds)
done (took 65.322601941 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.848432364 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885959001 seconds)
    (2/2) benchmarking "String"...
    done (took 1.976877223 seconds)
  done (took 5.543178189 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.966277975 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313694941 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.991325797 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.741497201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.747217399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.058617643 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552413164 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.250684257 seconds)
  done (took 30.336143584 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.942314232 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968064194 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.449166084 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.497159657 seconds)
  done (took 15.589323236 seconds)
done (took 63.049855359 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.761184018 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.757556175 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.752727925 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.720937741 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798145328 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.753031558 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.198949537 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.799201281 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.732619532 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.721767903 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.735522274 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.202846072 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.748730942 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.016634769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.731224275 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.740835789 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.778933452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.289955622 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.889779408 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742203753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.738225508 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764671844 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.732131475 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.742218995 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782524254 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.73089671 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.104550739 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.725675668 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.345916776 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.727885092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.756540208 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.188584073 seconds)
  done (took 202.890707822 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.724559002 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.632283817 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.706107299 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.767820633 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.192313795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933666134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.838312303 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.216582004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.727036365 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752759924 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.93749436 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.723153923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.94400879 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.669003105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.753430098 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.726164086 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.897415064 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.954040269 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.755075461 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.897793926 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.725056272 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734796416 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.672916691 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.895456832 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.73744668 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.720795865 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.885858791 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.733733142 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92119709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.886641508 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.761613034 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.730053518 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949148548 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.598769101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.746644154 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.746222908 seconds)
  done (took 167.856958676 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.891122429 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.72810625 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.72505336 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727222502 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.739453166 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.726184802 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848697795 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853367843 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.336277173 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.467498441 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780402042 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541562297 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.72545354 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794592263 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.73800094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.724346156 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741908394 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.756228267 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.726213118 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728670795 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851758862 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.739910216 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.743657255 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736799133 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728925358 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733034032 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.09849794 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728548064 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732230202 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.985857893 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.727450756 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729041156 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580456348 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.261235091 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809924062 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731150952 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73338197 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727844161 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946566507 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728970569 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.730259749 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.730888537 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727287732 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.863764749 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.72885624 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.849582192 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.731222508 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21170544 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.726175021 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730747227 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.459888474 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.340587672 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.729204646 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.73132843 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733695659 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.727810094 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730252458 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.735782614 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.443899776 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.808648764 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.73046113 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.732359651 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735903862 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.728965583 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.0382302 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.732637509 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.822760226 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.790042157 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.967966093 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851289627 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731764268 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796268431 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822589044 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.729038815 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.728709648 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728990346 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.730009116 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.811337623 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.728633479 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.853308648 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.729797441 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73746133 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.733236554 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781596976 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.797084082 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.73147632 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568551274 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.733250759 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.73050761 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.004804527 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79573432 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.730201908 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.730163817 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732455528 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.856612694 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855176636 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441727222 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.73366279 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.444679124 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742292233 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.737282261 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.874642301 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.733606407 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876290729 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.732428322 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.732361041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811137421 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.735837857 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.736080658 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.73029535 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762607884 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.732792897 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.788405272 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.73177296 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.107750299 seconds)
  done (took 396.83819194 seconds)
done (took 771.210234699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.372843302 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.335389304 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.436823732 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.360566009 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.329895933 seconds)
  done (took 13.502721064 seconds)
done (took 15.169820644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.82386591 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.826066184 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.755510208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.828414634 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.751782429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.826323155 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.806702491 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.757323077 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.794398887 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.759416306 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797386443 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757222708 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747801499 seconds)
  done (took 24.897682349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976629601 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.975477138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810819624 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.974269778 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782856374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.967826275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.89899782 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889569198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896893739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752352346 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745462685 seconds)
  done (took 22.342718052 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.982508214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989397216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81292155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.965199121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787573104 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.972250669 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909415562 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.892911283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891492714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753699488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747187483 seconds)
  done (took 22.373625395 seconds)
done (took 71.281603374 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.742457715 seconds)
  done (took 3.41136083 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.771849277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.937876277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.755928884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.744244567 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.742011394 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.743772903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.745001045 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.742070471 seconds)
  done (took 15.852395039 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.743013106 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.739467554 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738880097 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.743063961 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.739314114 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.745973847 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.739713613 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.740965388 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.740262276 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.741591927 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.742575848 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.743141871 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.741538316 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742569545 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.743207952 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.742470415 seconds)
  done (took 29.542047049 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.741180908 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.741357053 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739533964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.740920465 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.740667582 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.743236475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.740683935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.738874382 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.738148583 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.740942226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.740917499 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.743479011 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.739867289 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.741598467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.743108877 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.742784363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.740644937 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.74534076 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.745206587 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.742253757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.741997662 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.742444512 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.746016586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.741476393 seconds)
  done (took 43.477459146 seconds)
done (took 93.951303722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.567929773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.396695779 seconds)
  done (took 9.636041792 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746420521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.743487065 seconds)
  done (took 5.223473231 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.745655471 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.744450095 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.744139887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.744310723 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.745404468 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750975295 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745755228 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746578626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.744503337 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745922626 seconds)
  done (took 19.132321083 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.750342922 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.74480655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74300473 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.74648249 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.745463935 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.743634213 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74722333 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.745904978 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.745024908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.743760596 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.746170071 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.747342813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.74710567 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.74572602 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746425068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.743531126 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.743901265 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.746990544 seconds)
  done (took 33.099248326 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.747270122 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.745979585 seconds)
  done (took 5.168198991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.742624058 seconds)
    (2/7) benchmarking "second"...
    done (took 1.748046478 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743678622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.743398744 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.742111985 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.743354007 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742901529 seconds)
  done (took 13.880484622 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.747557476 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905172372 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.972889064 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.387547699 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.748072882 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.749963266 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.699771657 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.751797979 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.753325808 seconds)
  done (took 19.396927277 seconds)
done (took 107.205929064 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557323873 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.743192262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.987039528 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.806827461 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.760373142 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.087189787 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.744819689 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.057518476 seconds)
done (took 42.421519764 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.753511495 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.993722991 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.065016166 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.771333378 seconds)
  done (took 16.508386052 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73852508 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.261194145 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.784939538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333624934 seconds)
  done (took 19.830678241 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.119204301 seconds)
    (2/2) benchmarking "read"...
    done (took 2.095971103 seconds)
  done (took 5.898555453 seconds)
done (took 50.670523759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749412706 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.746522929 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750859196 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.74834366 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.748004557 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746553513 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.746172782 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.746065909 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.751411049 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.749059865 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.749761895 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.747893568 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.750170588 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749381635 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747460766 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748176516 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748833998 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.747949952 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747213919 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750220194 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.750782657 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751205144 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74929916 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.747215 seconds)
  done (took 43.646918601 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.752555192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.74911043 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.749135193 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.749543042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.74867014 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.75010103 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.755662485 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.750156817 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.752053828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.752578606 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750432461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.751534479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.751647245 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.748882608 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751165303 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.749296266 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.751481351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752033337 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75250567 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.747442873 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.75250749 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750133422 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.750474304 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753643836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.747440757 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749933459 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752186609 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.750002734 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751140629 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.752397251 seconds)
  done (took 54.204634873 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.756676405 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.760676008 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.753682889 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.754098175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.751667909 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.752379144 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.754202849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.754210899 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.751972753 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.755717268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.753767686 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.753029034 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.751557338 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.754851532 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.752785454 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.754262563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.754093212 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.750685716 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.752710101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.754369141 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.754639845 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754844038 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.752727156 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.754064059 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.75446115 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.753519178 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.754490469 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.753033248 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753878198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754230247 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755045243 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756393639 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.754802706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.75451639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.754326327 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.753448245 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.758849369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761402866 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.754806148 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.754413418 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755104199 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.754392685 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.753241073 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.76024505 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.754239919 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.751820844 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.753784581 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.755084525 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.754800997 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.75674496 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.756305284 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.754913789 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.754389567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.752875181 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.753345146 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.755412059 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.754297765 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.75386173 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.755376525 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.754587235 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.756739501 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.753599704 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.754346112 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.75669797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.7554839 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.755353598 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757583116 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.756129456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.756536303 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755879315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.754636192 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.756164709 seconds)
  done (took 128.022665487 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.75772796 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.754645611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752850506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753148616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755180753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755415487 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753850341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756603863 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750962541 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757121219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757231603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755307158 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7533944 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756821919 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754997488 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.756698546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.759732256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753164177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.758208034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757423678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756782111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751509311 seconds)
  done (took 40.307031187 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75604201 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757141236 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.752953976 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757537333 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756518396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756935863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.757272183 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757008329 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755734418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756012229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757640465 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759249116 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.756166791 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754073391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753672376 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755536624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758935933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754377601 seconds)
  done (took 33.301681899 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756058459 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.755621254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.75825772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.755386748 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.756458262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758512677 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755036869 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.758856421 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.758756284 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.75516192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.757658401 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757857081 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759307497 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755146535 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757408324 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.755384506 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.758580734 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755316402 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757985719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757561352 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75756382 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759863654 seconds)
  done (took 40.344109903 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758582084 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762210222 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.760278608 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757381146 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758506945 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.758728196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760480409 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.757769832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.758089565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.759080627 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757204489 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.756341876 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.756167357 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757413504 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.757994978 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75853029 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759006206 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.758473833 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760322101 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757164726 seconds)
  done (took 36.858764781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75923314 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759217657 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761200483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761744811 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760966762 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760263693 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760556695 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761102749 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761796685 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75956755 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761102441 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760599356 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760526355 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761329549 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762928938 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760495288 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761556175 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761573988 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762160116 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761310183 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763046503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761466171 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762305287 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.761940661 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763313836 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762127049 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76328869 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765179237 seconds)
  done (took 51.010822246 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760878033 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76139002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.759035502 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.760219278 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.760229236 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.75709134 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.75761509 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.760641637 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761387922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761166244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.761295199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.759681621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761216727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.762575443 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763939675 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763489336 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762436434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.760549229 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760790082 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759476576 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.765074313 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761525935 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.762847187 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75988123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760673468 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.762138772 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761492378 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761757709 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762047769 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760766909 seconds)
  done (took 54.525383364 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.78361992 seconds)
    (2/2) benchmarking "in"...
    done (took 1.781191427 seconds)
  done (took 5.257378738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.762039529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763050225 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.764287032 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760934745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.762289184 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765417069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.765521802 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761209668 seconds)
  done (took 15.796077825 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.76506932 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.764721519 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.764539873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.762659802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.767426004 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.764672658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.771679183 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764949563 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.766339266 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.765007632 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.772196077 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.772140339 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.767565862 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764580261 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766172974 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767641747 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.764309041 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.768715877 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.764916846 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.766415267 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766784255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76833419 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768244641 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.763086698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768613804 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.774002576 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.770364324 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.767107475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767732667 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.769988591 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.765609821 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.763821841 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.766046651 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.766563428 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.766927055 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.766805255 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773685304 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766683123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.771607028 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767671614 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768334269 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.763586107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.769339864 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.767852816 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768829604 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.76985402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.766696373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762868712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.766463901 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.770039842 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.772831285 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767851881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.764004116 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771610195 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768326139 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774343645 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.768502459 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770926711 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.776770632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.776502111 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.780280997 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.775177849 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770857402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.767620011 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775561377 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.791524831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773688307 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.764540774 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.765377135 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.767810697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.774546589 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782237896 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.777807272 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.769545102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774341438 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.768518737 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769384152 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767357145 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773199646 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.772748057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771024344 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770139121 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777568362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791947386 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.768864845 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.772621515 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.769447831 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.770651176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.769128413 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778855579 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.771474261 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.770106747 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.769538883 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771629044 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.77132665 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.77122861 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.768719535 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77033069 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.7671106 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.769346252 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768787227 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772739553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.780957954 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769756709 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771123155 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.775128661 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.769677081 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76946331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.778174051 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.770278963 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771340724 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.770847232 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.77590208 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.770721891 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.773562329 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.778417676 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.772460052 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.771223231 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.771847207 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.771279111 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77899068 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.796187157 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.770274821 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.771606293 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.777643309 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.785498278 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771276166 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.774971887 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.771900885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.768237442 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.769687747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.772481018 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.771661654 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.770838809 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772213549 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773309065 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770094986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.771293108 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.773067874 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.772631769 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.773530611 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.773626484 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.773539712 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.774923093 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774491948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.774767182 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.77827715 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.773918387 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.773747269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.772929818 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.768990958 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772140607 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.774119228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.7748826 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.773791535 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772612849 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.771134748 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.772989634 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772270758 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.77342819 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773082048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.773576698 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776367049 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.772832146 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.780042687 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.774179066 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.769688351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.772404888 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.772588009 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.773400169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.775017712 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.773889475 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.777147193 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.782517104 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.773742853 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.779330161 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.777907337 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774566025 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77470031 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773580235 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.776911146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.782430823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.775223141 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.780208993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.774592287 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7752093 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.776846704 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.775764055 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.775030119 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775697056 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.77854206 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.781087321 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790273826 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.783732771 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.776474403 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.777993027 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.776171557 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.779502091 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.783902955 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.776635821 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.775194721 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775631324 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775004314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776332281 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.778485824 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.777146797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.775271053 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.775928959 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.775736666 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.777777012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776429962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.775940605 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775764824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.771464196 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77485937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777689096 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775896078 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.772985202 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.776046407 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.77522215 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.775872308 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.77731418 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.782670067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.772505082 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776258347 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776848638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.779234771 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.775483071 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.775716368 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779595517 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.777525535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.777011651 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.776940968 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783446655 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777674716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777894257 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.780898479 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.777666231 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.774577984 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.779500399 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.784103882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.777193842 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.781240389 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779889324 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777907906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777645556 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.78238204 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.774545736 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.777155838 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.776829877 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.779844746 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.775213196 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.779589944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.778723634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.778873729 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77969281 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779179217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.778349773 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781416543 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.778846141 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.780036319 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.778755296 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780254394 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.785410577 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.784550621 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.779393449 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.779471202 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.778775403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.781879433 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.778599131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.77912818 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.778714573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792877822 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.786555686 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7851203 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.783547415 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.779509373 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783057848 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.780049827 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783756531 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781147846 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779997101 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.779043708 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.778981923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.777238208 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780113366 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.778812463 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783342949 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.781063359 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.783084716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.779773305 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.778903665 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.780410798 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.781549953 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.780283855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.77959931 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.780490675 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.783904373 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783942799 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.780752656 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.77951202 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786164126 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78281076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.780711181 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.78135985 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.780030751 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.779607183 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.782735582 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.781415045 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.784272022 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.789606644 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.784131218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790944975 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.782370466 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790310773 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.783726574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.784108054 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.787805168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.777521997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.7800178 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.782423933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.782215854 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788832749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.782116777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.78292383 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.786229618 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78424099 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.782714349 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.780684675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.782910327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781779401 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.782574521 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790673504 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.784183555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786627745 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784239216 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779185596 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.784013358 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.781794758 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.780904456 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787183311 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782713477 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.78400149 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.78457346 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.785543709 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.782034439 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.782809032 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.782254346 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.779943552 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783113825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788785614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.784081406 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787453602 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.783195936 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.793724418 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784185839 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789847584 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.784609021 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.783412657 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.784995203 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.783929725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.786921045 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.783574015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.785513146 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.784249698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.78660848 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.788435842 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.784603012 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.786627577 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.784598088 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.784858089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786803617 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793725692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806713519 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.78512637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787449369 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.7818425 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.788049234 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.788816347 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.785164144 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.78400907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786924716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796424323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79092725 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.785368232 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.786565976 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78568612 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785369782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.78621652 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.785567928 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.786927281 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.785284125 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.78718497 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.787575753 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790615154 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.786504436 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.785992416 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786754254 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.787150625 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.798270968 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.786006607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.787110986 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786412654 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.784910768 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.785995616 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.787308678 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.787532565 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786769623 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785439407 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.787964001 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794416771 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.793076636 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.789390976 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.786495036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.787533135 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787586977 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787229694 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787895892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.787575951 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788475281 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.78851419 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.788240642 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.78881822 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.786809513 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.78782906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.788767631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787720391 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792514722 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.795281711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78858869 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.785049478 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786737158 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787184438 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786586092 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787485225 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.795841117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791422581 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.797075342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796189624 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.79196464 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.787361688 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790672867 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.79696142 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.789560243 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.790393565 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789488754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.790013217 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.789142975 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.793197051 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789371556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.795781224 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788965266 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.789064755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796875234 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.791506494 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78924813 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.789904201 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.79338819 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.788987806 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.785258081 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.792250512 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.789815249 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798249749 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.790380815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790036155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791738753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790618365 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.791454237 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793672769 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790173639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.79063403 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787713828 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.790680831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791964312 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789177499 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.787274141 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.790528163 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.794398062 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.794774547 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.797553263 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.788699188 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794413754 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.795663858 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790928382 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791590476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790017588 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.787474212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.787355573 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.791186224 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791412937 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.791227665 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.794247205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.791243472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.79263554 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.792881975 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792698357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793837061 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.800909258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.797540581 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.788912075 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.790784001 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.790981491 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.79480333 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793667939 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792874076 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791999905 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.793739569 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.79079845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79186053 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.79175349 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.797169406 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807845357 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.792407039 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792513936 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.794117045 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796257694 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.792576711 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790209323 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.792157518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.794463605 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.79606077 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.800193008 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.793587325 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798408656 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792767065 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.793056756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.795284169 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.795900013 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.798883229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.797427431 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793641534 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.792781152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.796878644 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.809106691 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792636278 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803158011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820193072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.794298898 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.795856989 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.794852053 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792961567 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.79432368 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.795590036 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.794652619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.794105747 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793932359 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794810077 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.794419306 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800032409 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.796490323 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794203029 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.792932365 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.793874903 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.79632926 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.791452785 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.79700964 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.793866126 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.794394054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.794164822 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.795590992 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.79487317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807374712 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.805550915 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.793709788 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.794726557 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.792211391 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798831168 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.797645943 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803302079 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.80057284 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.795397854 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.794953131 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.796934364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795857235 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.791801776 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795989349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.79406872 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797421609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.791950485 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.808638341 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803261791 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.800354607 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.79597196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797590633 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795722854 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796376981 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795915139 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796427886 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798148684 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.79707833 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800586932 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.795115375 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.795326224 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.800704874 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.805411948 seconds)
  done (took 1064.090164019 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794641578 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79284082 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792117885 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.792673358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792616266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792930893 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793343029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793434444 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793459832 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793530362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793046339 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793529739 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.794625533 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79381913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792898018 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794164109 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794810899 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795145328 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794110506 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795231135 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795952006 seconds)
  done (took 39.395747033 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.796952398 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.794004857 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794578988 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796508807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795776259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796053194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795378304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796097011 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798321454 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795605006 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797566267 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797733709 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.794071366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.793404917 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794811213 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799575913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798170043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795455722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.798483389 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796244166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79769972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.795743169 seconds)
  done (took 41.24443667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.798500478 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.799141341 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.797272347 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.795662979 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.797969761 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795452248 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.798794883 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.797324892 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.798858541 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.798177382 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.798930975 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.800012439 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.805478176 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802227747 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.801415084 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.797986688 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.94203521 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.799684836 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.799956353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.798677519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.798729218 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805345071 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.79622977 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.795733515 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.797920439 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.802984553 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.800109998 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.79894335 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.801110929 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.800554713 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.803891547 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.799640217 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.800401903 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.801035084 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.799097979 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.800823812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.803137224 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.800793661 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.797001114 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.800924958 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.809306837 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.819851703 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.802462421 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.806732754 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.79965294 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.800012947 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.803974478 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.80869944 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.798243736 seconds)
  done (took 90.105004585 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.801671952 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.799931438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.798227548 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800525973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.801771776 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.800256281 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.800980132 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.801212744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.79906858 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799288034 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80176107 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.79793339 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797283618 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.799767002 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.800944203 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797944892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798146753 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797265313 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.798225199 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.797680698 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.797826552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.800283919 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.801276405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.797781444 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.799975882 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.798018233 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798159531 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.801367143 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79904288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.798226351 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801614826 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802144497 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801333228 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799509279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.798340505 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.800607834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.801762368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.79809149 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802529374 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.800057784 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.80284786 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8012118 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.804473922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.801085698 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.797913455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.799628596 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797603781 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.79784655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.799699596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.8019722 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.801640317 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.799319262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.802102758 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.799923436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80286054 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803138524 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.800520129 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.799011991 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.802570627 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.800818827 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.799839178 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.80310784 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.800381556 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.803279663 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.80168948 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.800737812 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800475923 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803456966 seconds)
  done (took 124.147658481 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803769612 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.804815893 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803662229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804621646 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803642173 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.804225787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805998692 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.804113039 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.804383028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80543849 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804866348 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803716057 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.805579308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.804230454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806170733 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805170541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.804815408 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806014277 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805581305 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804259663 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.806492519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805367552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805374437 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806186985 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805362778 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804523026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805586457 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.805423343 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805768992 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.805167422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805579747 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.805496701 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.805222263 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805213394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.806923583 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.8062044 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805154854 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806845668 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.807666298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.807016446 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806208469 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806163525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807120747 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.805279809 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807231653 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.806696702 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806299551 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.80721262 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.807153114 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80629858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.806462964 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807182889 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806468837 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808160807 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807676977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.806354391 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80831952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807700435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807358583 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.807529889 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807666707 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.806030551 seconds)
  done (took 113.698082407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806831862 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805629208 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.804286777 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804823354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806872478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803566097 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806700752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.806675394 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807357352 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.806584344 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806926593 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805744627 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805217219 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8071445 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804359285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807079679 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804404161 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805143075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806784848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804282776 seconds)
  done (took 37.85308329 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.805709663 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.807204315 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804702145 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804962989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807020121 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807395064 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.807316351 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807863643 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804630216 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808440841 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806773787 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812113102 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805440908 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8050926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.809099243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.805552486 seconds)
  done (took 30.645909814 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.806890072 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.80917122 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.809830502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.809229596 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807111542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.806556967 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.807647883 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.806849369 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.806307943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.81040389 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.809608153 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.809574138 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.810360855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.809938521 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.806213611 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.809934234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.806370535 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.806944354 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.808818285 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.810253641 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.807771887 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.807076404 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.810673601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.809315731 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.807070799 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.807350533 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.806431943 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.810243841 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.806521386 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.810160906 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.807086196 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.807723327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.807666559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.810226046 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.810683577 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.806944285 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.810871357 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.809840735 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.811485564 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.809514077 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.810267774 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.807995993 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.810380112 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.810893915 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.808842923 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.811743002 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.807656774 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.808702785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.806086523 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.809968796 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.812113725 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.811521865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.812827145 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.812583578 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.811617342 seconds)
  done (took 101.234114025 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81156734 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807546195 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811841512 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812393599 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.808918224 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.811272848 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.809060866 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809048209 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812026705 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.810646255 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81195898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808749412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8126022 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811005398 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813012112 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808822497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.809225207 seconds)
  done (took 34.332406931 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.809435805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809387603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.812906578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81105307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.809468 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81262452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809327311 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.811111178 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813631326 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810452807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809791581 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814702997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81303508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.812864876 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809962739 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80956757 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.812301808 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812534523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.811125977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811325817 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.813899603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813843347 seconds)
  done (took 41.594884307 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.812570243 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.812772772 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.828502965 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.833725358 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.834190413 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.847747716 seconds)
  done (took 12.709977477 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811230715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813401328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811865208 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814639601 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813184333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811375716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811474001 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813538853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814212019 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810894316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811198225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816067212 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813955627 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811944777 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815806346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815933221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814554306 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812156682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811765955 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814721337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813173082 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815353122 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813919784 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81186638 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813208025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812225428 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815660629 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814388634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812144357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814623988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815732027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812900033 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815564161 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814803098 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815966963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816054668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81408723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816023311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818383875 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813100394 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.815250006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816679095 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816173194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81387492 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817442564 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813420035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813284553 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814203406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812897983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821013899 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815822409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813504391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815657469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817409951 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817587684 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820041603 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814515968 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814757386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816811425 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814805575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81541301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817179866 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814148364 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815607344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817696046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816820296 seconds)
  done (took 121.509747643 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815253263 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814735316 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814513748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813914121 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815432898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814409241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8151517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813960948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814950925 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815655661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819243043 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816369375 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814683755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815352845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815672056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816735901 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815293605 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815392542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814955936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818785188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815124845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816863339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815208571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815288991 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816743067 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817515544 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81585097 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816123937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815828087 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816141628 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817471879 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81710814 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819089682 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81587515 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81553411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816091854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816886303 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816890559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816472286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820362451 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816190959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820197871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816657531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818184604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818541714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816966929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817245285 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817422131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81736843 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817403023 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817237156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817375662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818541049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81790401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817227338 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817339746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817472361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817071417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816875842 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820685216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817404693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817998311 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821102267 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817888587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818084377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81841113 seconds)
  done (took 121.656637617 seconds)
done (took 2479.170243459 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.801074197 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.031987616 seconds)
  done (took 15.580731665 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.989978593 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.943160842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825389612 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.855024409 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.826209726 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.849842928 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.842780503 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.825490161 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.826386407 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.825865 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.825304048 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.013691433 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.875943385 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.82655355 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82703506 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.920693984 seconds)
  done (took 51.658429533 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.82937489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830301527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.84144006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.832698692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.829692996 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.846032425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.864743303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.83288371 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.89264971 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.844372533 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.951702193 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.842625804 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.829403191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.899629721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846659456 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.844202624 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.921377194 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.906372021 seconds)
  done (took 35.241951836 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.907924679 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.835453939 seconds)
  done (took 10.507195271 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.859806314 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854454249 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84342229 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.822198281 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826533607 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.848510073 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.854000396 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.846685977 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.843270187 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.858420647 seconds)
  done (took 70.221262548 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.835613857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.830552593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.831507426 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.829753363 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.824237727 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.826062163 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.829500903 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.825897495 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.506265518 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.867368554 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.837380219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.836056242 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.82967321 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.83300693 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.829563423 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.853208888 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.92170576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.827580243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.828962763 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.835537442 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.831610496 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.886378608 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.844816226 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.832460572 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.862107392 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.508065019 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.839741837 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836997504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.923055381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.828478556 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.83106881 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.832118652 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.833166478 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.173954345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108456302 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831768635 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.845084143 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.839698013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.828998869 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.932642489 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832132544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.838079715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.485965468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.090063217 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94381995 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.873899009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.147632113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850981627 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.833714736 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.858485371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.836739658 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.833433407 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.843474575 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316086777 seconds)
  done (took 130.03846443 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827447374 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.179174355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.999709017 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.82991235 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119018431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041208157 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829581401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879101522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830774834 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062403593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.088720168 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93950819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831102609 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827897981 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829294423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82699753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989065411 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.904667557 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.830702926 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.826982693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861166894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076505026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.95920881 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83155158 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860518403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045412173 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956246492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939154107 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.617231102 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.826544308 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896719809 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831018203 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.831010247 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827088061 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990565391 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927785376 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920823102 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.830374092 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828839926 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.827750462 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.504008979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033594429 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928932552 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.978206933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031501825 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043687253 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.615459915 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.829100038 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.573182911 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998702091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.064659244 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.06492237 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.957492562 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831997925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.157318456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827512123 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828762869 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084775781 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98629421 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.934580249 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832127118 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830382718 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.828006655 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080679501 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834551208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931483556 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833206893 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829745943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931830713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938408109 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.974646152 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052879018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867633845 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.79579514 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.366167197 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08439928 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.902857983 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088246061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835144089 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831501367 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913643732 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.689916525 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089955067 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085941326 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094352103 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873957232 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.560027057 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.829487338 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.06375074 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059929811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088592141 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039762377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.078856602 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.152680957 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.830519392 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.830968687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.065296466 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972484564 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836575408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179323302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071261675 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405204566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85531492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14584935 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971316482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835200899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.477203782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833733185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059111058 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877769524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834698098 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833079434 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.058144166 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.809588673 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833026594 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.487548987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.899133432 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838170445 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072334799 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836932161 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101708135 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837834631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076188028 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.430468219 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869906088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01331486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.039720907 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.835524947 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085663116 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087955202 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953029795 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063657417 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.450638016 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83662042 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125737469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835794096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.833998805 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009720818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.834543715 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986008634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837154302 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125734905 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86147583 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077136649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836728233 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094098213 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873410797 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889154854 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836942077 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963857186 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835287569 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.759326139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996585953 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833812207 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.834234404 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.395484006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.835597395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99132463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069698735 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85955442 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909677145 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.507344747 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830565534 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925020787 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860745416 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.231876456 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.833076429 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.087850708 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.834045622 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830033702 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827408611 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073054518 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.016844776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827466008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.826734564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.724927476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.824568107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823732135 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.011084948 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.145715231 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823911494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033943971 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827026597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957072582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828364529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.910376772 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162784378 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821415047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.822365207 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.822639217 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.823490394 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.822717872 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035388574 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853567853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.360381355 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963825798 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095177759 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138766106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.07554337 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.871941616 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824419224 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090839984 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824868466 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.89065327 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.824753301 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846693496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059317595 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828284687 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092370249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107936741 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.86345185 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874119806 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.825487392 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822254448 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.821422254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971442488 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914320883 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824083634 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.821313849 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940805975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948154887 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037461554 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.823972007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.872258538 seconds)
  done (took 894.133742629 seconds)
done (took 1209.127570583 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.821009543 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820635243 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.809199592 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.824915853 seconds)
  done (took 29.03206571 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.832328888 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.827007219 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.828954125 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.827415399 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.829174024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.826197448 seconds)
  done (took 12.729117885 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879267774 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.827679729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825386739 seconds)
  done (took 21.290814387 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.899098232 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.218844356 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937349629 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.266892195 seconds)
  done (took 10.081414429 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.832522444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.83113723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.830488084 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.831985686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.832874895 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.833786188 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.832832182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.832174015 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.832452926 seconds)
  done (took 18.250650878 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.240590369 seconds)
done (took 97.380375494 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.478319704 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.938922375 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.868166051 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.13587295 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.94627656 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.303666986 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.463579014 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.871522223 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868670364 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.903550274 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.970622344 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183307602 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.162941742 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.888210388 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.090161831 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.198146078 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.84279492 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.192123199 seconds)
    (19/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85838402 seconds)
    (20/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.340927472 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.938838574 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.986779673 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.830964489 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.971632316 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.234557013 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.942479385 seconds)
    (27/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.264063057 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.028069743 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.952968511 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.943893363 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.403507594 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.832357398 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.290661148 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.84718522 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.928102999 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.925862146 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.175303791 seconds)
    (38/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.866143659 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.942957269 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941307983 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.822451563 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.920333353 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.019254265 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138784058 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03398568 seconds)
    (46/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.233208566 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920729445 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.828253272 seconds)
    (49/309) benchmarking ("sort", Float32, false)...
    done (took 5.639726414 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.991203265 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.019685449 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.108861567 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.935158197 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.278398428 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065177022 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.13571828 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.873840423 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.992203916 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.169247042 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.147770526 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.913629453 seconds)
    (62/309) benchmarking ("sort", Float64, false)...
    done (took 5.599658743 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094372603 seconds)
    (64/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.261094289 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.11456313 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940094614 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.156024451 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186084645 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.828264073 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.314383699 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.830174863 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.26294393 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.943981992 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.900580129 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.939777576 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.926371581 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.226159971 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.862304697 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.841129848 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.971209344 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.826117647 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.258828723 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.700558758 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.882722399 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162049971 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.238272221 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.84906817 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.911851061 seconds)
    (89/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992863738 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310526239 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.086649834 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.386887055 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.851999082 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.510997243 seconds)
    (95/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.954581464 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.910576553 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.92939959 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.082214258 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.99043223 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.848093182 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.763427164 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.202975176 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.953066321 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.933839328 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.873638668 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.490980902 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856498482 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153736493 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.878158787 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.872898251 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.059249479 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.354214172 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.836786205 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.968285194 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.989182902 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841382609 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.271230342 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.939484196 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.101063727 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.072989823 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.873281794 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.102707586 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.271547432 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.815587647 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.079921762 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.869809025 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.099648526 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.923147882 seconds)
    (129/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.866288868 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.054076253 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976577592 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.082006836 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.855820885 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.853934837 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141170239 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.983858445 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.656608042 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.840178565 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.763882978 seconds)
    (140/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.851800519 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.986130973 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.133556043 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.497499912 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.668291764 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.851795018 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.091449318 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.887061648 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.54591134 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.988911286 seconds)
    (150/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.845578048 seconds)
    (151/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.988787124 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.835942898 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.856064625 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.952710471 seconds)
    (155/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.074023062 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.869910407 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.090294345 seconds)
    (158/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.95943558 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 4.768446375 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.938327726 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 7.282561783 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.083808092 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.998060419 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845904674 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959163326 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918479974 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.400261974 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.171073333 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.988082129 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.811531598 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.615138233 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.924120795 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.825720019 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.822677992 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.312656255 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.867193458 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.946774764 seconds)
    (178/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.013914589 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.771138208 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.91152011 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.07153008 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.018055589 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.091894966 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.858713323 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.202058231 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.986929451 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.516967664 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.922706484 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.62048557 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.605827239 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.30996589 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.115592734 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.133692804 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.026197594 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.949523371 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.23548852 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.117491762 seconds)
    (198/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.900391531 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.877883156 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.002035289 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.793485937 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771829372 seconds)
    (203/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.914178334 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.283409839 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.929166733 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.248045394 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.16629283 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.622022452 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915597924 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.035299742 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.661990325 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.943231799 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.798650887 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.232524248 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.876189984 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.926002776 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.887688107 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.128114927 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.828863083 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.812045739 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.041900817 seconds)
    (222/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.209624657 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.322284651 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.142035053 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.864381205 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.800063205 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.540252134 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.787528369 seconds)
    (229/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.120944292 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.873969995 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.848067932 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.796899384 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.353788331 seconds)
    (234/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.051538003 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83005231 seconds)
    (236/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.87761585 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.798063453 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.872000126 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.234524414 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.665220108 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.104233113 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.93448904 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177826219 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.823611805 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.077676388 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.874578514 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.780350736 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.972890406 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814320475 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967864208 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.798181078 seconds)
    (252/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.31768412 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.300740637 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662506549 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.896515565 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.901938195 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.252273083 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.320218793 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.187281096 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.8289857 seconds)
    (261/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.898384732 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.129816496 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.807709448 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.499352727 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.11202288 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.143115256 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.87541755 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.819996126 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.900669867 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.775844095 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.826085292 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.815779599 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.909666951 seconds)
    (274/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.88101353 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.799868094 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.942033101 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.845811769 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.934281198 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023119866 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.785141502 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.952911525 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.483339892 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.815540049 seconds)
    (284/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.798684609 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.980090996 seconds)
    (286/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.874821392 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.912204789 seconds)
    (288/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.962602373 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.980624179 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.813185115 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.949477086 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.899922387 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.832408769 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.747432233 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.71727387 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.98771097 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.807305292 seconds)
    (298/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728199868 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.055408764 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.967926884 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.83035232 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79937737 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.441537737 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.835191187 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.820174619 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.904266299 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.936610677 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.874857954 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.785379333 seconds)
  done (took 994.888701049 seconds)
done (took 996.723349324 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834460833 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82781388 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811023967 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.832987 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.923950256 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.83995925 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.82129023 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.813596484 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859165065 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.860690623 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.810870575 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.838585905 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.81332963 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812946754 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811013595 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825910114 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127686653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.843754048 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.831256726 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.820141879 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.829142262 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.812120607 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.859725532 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.838710046 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.814893913 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815199175 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816085138 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.833167389 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924446212 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.814859609 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.815894277 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825006487 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.130116673 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.842479269 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807749248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833067976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.823676286 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822402788 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816084926 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.84581821 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.223090685 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853553247 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.814639049 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.814424248 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.814383314 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.81798487 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.815536302 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.819770033 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827547682 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827822455 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.221008066 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.869275578 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.817742223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.81448266 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.824824472 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.814565164 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.817913034 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83106214 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835869137 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831415863 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.120678785 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.850041444 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.817022095 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.832575801 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.822989875 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.257377886 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.851781224 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816581523 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.218749715 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.859743153 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.255685155 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.862069528 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.812719119 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.825830602 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.844019382 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.12640979 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.838105585 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.809784345 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.817371164 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.808571442 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.817920709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822657414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.816305501 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.808286259 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820078033 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.83616442 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.817448311 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.810373107 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.813489184 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.823711592 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.81234914 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.814941113 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.809694214 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.803765978 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.81547305 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.810260414 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.809489662 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.809621779 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.812074014 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.814105889 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.210014305 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860878193 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.80263765 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.801896682 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.80189738 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.813743775 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.206799851 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.843308534 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.822864501 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.849659672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.799415509 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.105450997 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.833696628 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814736216 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.807536823 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.801144239 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.793788511 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.105974286 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.235928163 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.85573096 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.800629262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.797888898 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.815142998 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.800643784 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.796307809 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113076368 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.830470818 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.813299104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.921771627 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.808243306 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.833383175 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.794795216 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.799981735 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.825473462 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812499944 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.82778503 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.798909014 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.80964101 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.80985858 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.790409988 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.807295081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.805361735 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.793135362 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.798931464 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.785969471 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.82095333 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.805799899 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807664754 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.811605585 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.910449993 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.78776727 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.097950488 seconds)
done (took 284.547007853 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.855648044 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.783847267 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.881534349 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.783098515 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865937172 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.880083552 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.782552819 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.778203387 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.778694555 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.155603011 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.779127382 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.778782089 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.7818785 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.776279172 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.862244456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.778884878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.775757474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.116016877 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.779818216 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.851784149 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.773329235 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.777326306 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.779524785 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.152647474 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.775928226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774916999 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.857928364 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.778368794 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.116914698 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.773684245 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.772085416 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.11722723 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.877666165 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.799539885 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.789536905 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.78734814 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.872731653 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.784973135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.872805362 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.862495294 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.879337195 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.820700031 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.775647762 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.782665338 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78346433 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.782015465 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.778092059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.807595614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.778244097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.777925752 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.117403183 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.79119493 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.787610565 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.77812258 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.777035905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.801901181 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.776910255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.782751208 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.872097281 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.782433819 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856602312 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.154971266 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.154975042 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.781431499 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.774132502 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.781454405 seconds)
  done (took 178.374523571 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.847318105 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853043457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.847544766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.785533517 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.830738029 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.849594777 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.786774984 seconds)
  done (took 14.509808671 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.787968685 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.781977569 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.834128111 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835038033 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.783056085 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.929274168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782972207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.79294274 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.788116646 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.83426879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.783081049 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.782703306 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.780791642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.781321214 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.833666994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.793852101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90118709 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.783662864 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.785081995 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.933116875 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.780476907 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.788674633 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.836222879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.795837825 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.783201623 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.788543035 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.375056497 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.783524691 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.779855897 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.782498141 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780699337 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.824979742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.784409684 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.776724125 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782487285 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89808592 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.783724645 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.779891386 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.784565646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.778328536 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.783352512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.782812295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.783285458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.781290648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.785134157 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.808231634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.784348634 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.783949738 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.784971503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.783196108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.835059408 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.78515798 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.782170635 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.782896956 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.839625022 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.792980575 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.785126146 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781586466 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.785171157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782829587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936588282 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.835604282 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.785433144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83649998 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.785915088 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.786987094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.784745434 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.784814519 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882572912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.785280578 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836610882 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.783073031 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.943329795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.808883452 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.787421835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.789136745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.787998681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.78578638 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.787784399 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.79124486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.782804146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.787604088 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.792065274 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784015702 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.78279914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899540307 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893462972 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.783008054 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.798588854 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.79314219 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.78272699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.839727734 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.785792598 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.782605367 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843910322 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90469061 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.844172714 seconds)
  done (took 197.488571881 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.791885727 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.79368668 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.787909623 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.803941772 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.788316225 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.787616722 seconds)
  done (took 12.46861421 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.789981571 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.788600372 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.787328977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.787285419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.787923382 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.789111061 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.788599015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.78943856 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.791337018 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.787651436 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.78901112 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.788032618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.789041728 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.786837468 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.789214166 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.786435202 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.78691409 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.78429747 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.7861344 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787104634 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.936746162 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.78747335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786808826 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.787603768 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.792527978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.787042383 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.795648848 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.78666379 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.786880855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.79559781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.792622309 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.790277822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787942331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.793262012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.791964501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.787667396 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791654757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.789748895 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784097562 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.789152867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.790620113 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.788231146 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.788227419 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.789885592 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.78966674 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.792748144 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.793448299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.79562735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.788616599 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.790293947 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.789233303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.788016811 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.790987509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.790075646 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.791091683 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794875562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.793632902 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.793641974 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.78792715 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.789569138 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.788112941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.788724757 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.789633843 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.794183208 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.793117059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.786751886 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.785966105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.78969541 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784686954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.78432103 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.7857373 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.781255634 seconds)
  done (took 131.687867115 seconds)
done (took 536.264042914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.949131269 seconds)
  done (took 8.659785693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.898672239 seconds)
  done (took 8.656501811 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.292189657 seconds)
  done (took 10.005709558 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.807231586 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798491287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.786768685 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.788277304 seconds)
  done (took 28.917874905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.916075874 seconds)
  done (took 8.625562009 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.796619049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.768179208 seconds)
  done (took 15.305367474 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.808031595 seconds)
  done (took 8.511980141 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.07036116 seconds)
  done (took 8.797404143 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.784917152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.798736926 seconds)
  done (took 15.300382895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.748954611 seconds)
  done (took 8.448256167 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.209077633 seconds)
  done (took 11.007820026 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.785304125 seconds)
  done (took 8.59319096 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.841932271 seconds)
  done (took 8.541203325 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.852183069 seconds)
  done (took 8.551655504 seconds)
done (took 159.631810449 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.769600446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.769956037 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.76598948 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.770635271 seconds)
  done (took 28.774373383 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.804566799 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.80636879 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.805831199 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.815916388 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.807953973 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.80494961 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.796042568 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.795527413 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.811279517 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.803867574 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.803253509 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.803688536 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.802486852 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789957897 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.800460648 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.800462365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.809409496 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799599875 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.791570748 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.80075291 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.766865329 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.80721191 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.799583474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.765384008 seconds)
  done (took 44.892058938 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.961732898 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.833798874 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.916865876 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.815558357 seconds)
  done (took 9.220194521 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.814753364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.81668635 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.828004203 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.866955267 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.890297472 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.827154001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.78871669 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.786005223 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.771153996 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.81717601 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893854656 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.815855621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.907796707 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.763952601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951170296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.764691347 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.764608702 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.816048328 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.867141001 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881857801 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.764282729 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.81619122 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.819406169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.811940463 seconds)
  done (took 45.536997415 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.762793946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.772225779 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.7701351 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.765741395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.763675243 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.764014875 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.770974534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.76473428 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.784621442 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.764610034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.762951959 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.76411794 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.763173833 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.76415114 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.763698825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.776972986 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.77683254 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.763593022 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.77020246 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.766239489 seconds)
  done (took 37.047965336 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.755145021 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.604459541 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.102554802 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.005893387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.760237908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.748583134 seconds)
  done (took 30.665663004 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.767158092 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.759480254 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.75305247 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.81218771 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897366126 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.762855212 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.753487173 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.767201607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.802647499 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.823375975 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.776453279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.784021358 seconds)
  done (took 23.138689052 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.748981075 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.761495581 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.750059119 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.776854516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.764934249 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.762362342 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.761415288 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.746977617 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.769181127 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.773650503 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.761600388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.766246622 seconds)
  done (took 42.829214505 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838959661 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637939663 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.781230616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472579076 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286406782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960336437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.275015305 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088293562 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.752912684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022683023 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708699986 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999299125 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005362923 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75041236 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824920963 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.193992111 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050926854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981199137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785987395 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488842299 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925972171 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369684783 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.577710768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932917574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012872341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.935279131 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.061892845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.768385486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939867607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843145183 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81249556 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80424103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076510673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183585448 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917373424 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811764316 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455881956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.523577 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.789457085 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.512183067 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.652169561 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941699525 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813873175 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805804094 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.738883653 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368633775 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149952608 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.809809939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.507215887 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804989699 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815752447 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896138741 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.808438516 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.621175979 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758457902 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085960014 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.803336693 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812097296 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376577513 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878609957 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4725852 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.750955912 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.900552138 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577886611 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289126784 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.959747636 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.811737978 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812878606 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742830593 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.469984612 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936224181 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954503212 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.829020738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459529736 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11819817 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.840624958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.897302932 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103012157 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.640435764 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.751254717 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037755509 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.766794796 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748040625 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.667787615 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745071397 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090206058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848444731 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.425718391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852559464 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150738814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821049228 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831900432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818355208 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034616577 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.691668695 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810296096 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.56222053 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099315715 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83291984 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147739399 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745553822 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.815159808 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067084495 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.023013141 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.087849183 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.260869941 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974057889 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812447375 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.900830867 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.764652162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.827511143 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.087918821 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873263715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881128298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950899254 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.767780345 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123873922 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84546822 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.992158328 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.827318235 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088285313 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.137689084 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071327066 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899983793 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82106934 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.818763252 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.51070517 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449004935 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.045075432 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.820680849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358190299 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.834972409 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.82194728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756812405 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.4472831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802195439 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.934099285 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045500607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.820913233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100540946 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755843663 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967040722 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.936938763 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.044287201 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.475606051 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.904252562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081545474 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367077507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.111950801 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836698525 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840398894 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915072383 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843299672 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.302188799 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08159193 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.825631141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.826174355 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.532310026 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.902715419 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830490419 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.832468122 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.645927036 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116009929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855391634 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837442178 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.717108085 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841953336 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895077304 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832936638 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838199559 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.35794354 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582352943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.839315261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.507125345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064086405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837815769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.577927313 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026419061 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.91454653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112707695 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893873677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.765183115 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.532786628 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.533446736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831356667 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76602823 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.831133933 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840106715 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842851919 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.032177073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113717492 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878764537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.58058566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.950985035 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843539001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.838081932 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832244755 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.326847131 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92092264 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491770122 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845422896 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969630147 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.847120568 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769137236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837458889 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838896566 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835026318 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.785925042 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887301639 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.49903759 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296498816 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096369931 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483066607 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853429372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.60807299 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.969689188 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.858960285 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.601496595 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850483772 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.974443924 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966450079 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.902002311 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.644613216 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.666402909 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46101448 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206323745 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21092806 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334416414 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.31199459 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.223333329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229313325 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126885902 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421790384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953727337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247376917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837842012 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984751079 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.549873096 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252990753 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907832297 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120832123 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28187189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.720013679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061647319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10394893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927718491 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.739207611 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929218991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.133901022 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048753785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626703495 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129534751 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229651123 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648882344 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.017123489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.892658573 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.591227627 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978510483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.604237247 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254460015 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467906547 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901249658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390428986 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902466968 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.339629964 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250479462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266567758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.987245485 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83049675 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904662299 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904452309 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.893567563 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.872797397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.818365941 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.174342914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905479602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130007069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.209794414 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163809708 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.80101291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.899507164 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89457826 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212772728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.594202897 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139548068 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.272133402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.479891367 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905186277 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829451224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829649886 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.598110605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896869251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869570108 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129675149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006512003 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848570991 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310313974 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215242031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150603501 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.909188819 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175231296 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174279396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631806651 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925763177 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.9966964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649879231 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.603224014 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.118802855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132517671 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717162864 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128290061 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.95887151 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.860577594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895893965 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11096804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.12012569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874988807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15450498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621235536 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.908563453 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271044652 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9576085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.901962135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119366223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.989441576 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907582235 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979039101 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907185886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.908877925 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908969506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943989646 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934869852 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.039803995 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.911229536 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989420358 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965427426 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.490871534 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.908149935 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182155568 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26455198 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229268741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960129571 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898392111 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904156433 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832227533 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036991852 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344531048 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172293918 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027701275 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.038555456 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924124794 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650431217 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220015501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217814371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173940827 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.795471746 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899296827 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989960186 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.125043464 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909696752 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.110503155 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136459769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227641023 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373413142 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.069725947 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343137821 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17382601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.265172272 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90040977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490689661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.915097831 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.657600812 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.945810966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903389529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193358105 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912633061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282752737 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922736548 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.09545715 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.416979411 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575690867 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268859709 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891886506 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964679712 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18157371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297893041 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217746281 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969384231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910904342 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.600090048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03919225 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.852015813 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166342641 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901155642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112857547 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.613586741 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910372091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184356402 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218140783 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.898896346 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.878066687 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961477917 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910765908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125796219 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169743637 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156164278 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912331484 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902748115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.717498938 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182229776 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963230715 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836303203 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.905266595 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002500074 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151002706 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922418252 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.420356828 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.606130509 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204018516 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.883519477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924078785 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333955974 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350756637 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237688844 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.435218468 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136841077 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467749036 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781672495 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282967242 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.908227271 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338830982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285549068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.906787081 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.433418615 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020697527 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.18372538 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227884184 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.911872726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711170902 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.95297643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127382271 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499098171 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847288876 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910813775 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.965481648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903997467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034394182 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915540976 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.904374104 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81506232 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.747023807 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39774567 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.910080816 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.893625045 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.685414359 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.495621007 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018155448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061583069 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91051836 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.609101592 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.196673799 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159211744 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43459814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.980896416 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.909549714 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905543333 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83341337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104646099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.104799431 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211498606 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.288059524 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.020917634 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90995528 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.121519323 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117043933 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.88454824 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067985173 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321710551 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022155306 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.818727613 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.621137558 seconds)
  done (took 1682.418338697 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9088664 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.916810566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.914871618 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.918928555 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923337939 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91981071 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.932814574 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.001057673 seconds)
  done (took 57.274386138 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.906524932 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.124863176 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.915711639 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.906646457 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931422292 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.907652288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.475916818 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.921660941 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.93704267 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.917436517 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.907748209 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.909138006 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.257811756 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.935122801 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.9078731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.931847151 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.926138543 seconds)
  done (took 75.567445939 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909578756 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.24879083 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926386154 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.929640856 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.84650303 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.915526978 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.027557092 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.949347108 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.911619205 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.080863059 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.250712793 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.923410322 seconds)
  done (took 90.760504202 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.924007768 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.914430886 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.916510884 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.915682065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915485018 seconds)
  done (took 11.434649536 seconds)
done (took 2181.276299131 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.157165657 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.130296703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140491865 seconds)
  done (took 6.111074216 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058113473 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.104704674 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.225898729 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.228991357 seconds)
  done (took 10.460536489 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.197225039 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.279447264 seconds)
  done (took 6.315880591 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.242337644 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.936938737 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.296516647 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.909493701 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.910499173 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.910589061 seconds)
  done (took 22.574045843 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.912070418 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.914429965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.911496169 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.914698472 seconds)
  done (took 9.49300261 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.892177046 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.707771402 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.89145309 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.91089717 seconds)
  done (took 21.243102299 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.659754264 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.308836274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.655024729 seconds)
  done (took 9.463444611 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.374123856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.130824877 seconds)
  done (took 9.344479502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.164546717 seconds)
  done (took 4.004216019 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.939907137 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.182954634 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.428044253 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.430742896 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.522784309 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.734082834 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.239041123 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.150983688 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.356112659 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.371734729 seconds)
  done (took 25.196724432 seconds)
done (took 139.679963268 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33181856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941087057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.111253187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271291123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.148529623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.110433261 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.131593388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.272263155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.806555697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.792352756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.270966755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146148452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.076708824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931104183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.079921596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929932557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.141774487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.352881439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.99169727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.173621681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.140834417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.918526421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.113607137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.931933317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.14603478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.066458661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.46199436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932448786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133582856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.473120475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070269596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.313625184 seconds)
  done (took 169.555858747 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912410494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.91116799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.91206387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.911918083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.246488205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.913900239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.912094234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911338057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.938332366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.923470507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912798628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.227058775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.91295039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911628239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913813839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91260283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.090873988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.912675666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.913000954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911740805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911968964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.083280231 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913834167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.085050208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.056470924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915010486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912724395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913418142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.91266146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912598199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.913685371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.912946566 seconds)
  done (took 208.400158795 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913234842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.91454637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.913919854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.91341782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.9145374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915420827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.915087115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913441155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.39411562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390757167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.914496204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.914641827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915240961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914622838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.916641084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914189934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915009081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.913228669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.915089519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916417972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916262136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.478120046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915672919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.484033077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.914982763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.914219864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.914428932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915646143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915588212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.915759004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915934336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.916396407 seconds)
  done (took 221.210226709 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106415144 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.921250692 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.921500769 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.840524653 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.9221427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.921984043 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.916132007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.105349606 seconds)
  done (took 19.506018211 seconds)
done (took 620.519589778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.403074995 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24775449 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.105867383 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947038615 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197852763 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.980377512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.941320149 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.007363 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67323028 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.014935687 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.586160496 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.964163056 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.680480219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.97077566 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.063470499 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.000682946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487851342 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.580145003 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.117011903 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.023994225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.11518319 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.878892453 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.030934763 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.70063736 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.70055613 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.924522873 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.117942198 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.500127788 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.955591356 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.103186586 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.693247018 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.334672906 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.960648801 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.941875447 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.999341484 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.976571903 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290313075 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.958428922 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067538522 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.67788977 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.023508567 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.558346219 seconds)
  done (took 105.351142024 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.91227178 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.910217251 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.908938379 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.910752047 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.911581338 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.909507548 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.909632195 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.909270899 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.911364623 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.909132623 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.909585076 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.911988984 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.910479601 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.911541152 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.909659398 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.909569573 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911395439 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.911983549 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910542597 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.910868531 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.911113018 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.910069474 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.926270823 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.910355685 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.911871087 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.911437531 seconds)
  done (took 51.550202614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.926509905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.07820924 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.165925207 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946824104 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.925396252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.928106711 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.94515236 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.930905165 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.927467641 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.92758739 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.038127357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.932311068 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945106419 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166486147 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.944701022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.925821791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.926031555 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.925380311 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.084723852 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94405943 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.945584701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.931860676 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946324359 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.94091797 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.928012058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926979766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.93000946 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.416402858 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.93605911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.035796351 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.972749719 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.952165914 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.333067529 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.185266437 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.984729134 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.937931384 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.927050598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.040359842 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.933711977 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.926573339 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.946076877 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.931546784 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167926103 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425075338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.94301529 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.927437894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.426804468 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.050542775 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968623236 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938975516 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.168087694 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.947502152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.928802241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929007237 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.964437767 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.933387586 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.928259218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.2746301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.94077294 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.947207485 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.934083064 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.929081135 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092226404 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.937729703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.080122673 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.939285196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.938047337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.929034666 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.168888102 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.948024461 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.421169283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.943999146 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.929962413 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.038943513 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.085966247 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.454747241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.942316541 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.094030445 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349644872 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.953732997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936480578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.406813465 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.957699849 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937144475 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.931254285 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.931353406 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.930374931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.975909568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946308884 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.360345648 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.431438353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.294161623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.95776665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.944939201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.93056146 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.274421311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.939376684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.931685633 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163041876 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.43689279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.946616478 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.938894748 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413296174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.947855105 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.950127635 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.939851517 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173088221 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95012138 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.975262182 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.930017638 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.938489228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.932914576 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.950625753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937834674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.931515121 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.407238261 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.065351326 seconds)
  done (took 239.266517388 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925829968 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.929656174 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.925826279 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.928433811 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.924272735 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.930024856 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.924322874 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925879829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93051436 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.924799389 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.9234619 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.924847121 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.928486128 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.933852834 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.934958069 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.932076652 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.535980432 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.927921334 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.925718255 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.925371936 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.672633068 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.933619866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.924217715 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.926016892 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.92777705 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.925531288 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.933121272 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.92845472 seconds)
  done (took 169.192165209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.933617496 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049344235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.950677721 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.961502465 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.942437902 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.930531909 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.956360968 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.948226801 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938684871 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.930811356 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.932346048 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.99570331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.944459561 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.033107511 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.965783779 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.964530453 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.036891701 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.94051895 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.931771995 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.932254308 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961263543 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.926177928 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.994698523 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.060630622 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.95196895 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051013678 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.937086887 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.934409677 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.933185634 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.05234898 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.948284956 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.995795451 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.961644926 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.951460144 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056559296 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.050410164 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040287712 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.964567081 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.938641262 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.932391337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.931823465 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.921485297 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.052621969 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.952797596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.935617142 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.041564963 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.953095436 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.935560428 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.943305486 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.933073513 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.947821855 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.952776061 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.001443936 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.067062513 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.968665798 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.959888232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.960720751 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.212893371 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.942252469 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033843571 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.926325648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.05386813 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.954209265 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.92167791 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.935659693 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94027637 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.964728841 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966771127 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.039266633 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.943667825 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035394919 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97002696 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.941923054 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935269426 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.937864818 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.053916794 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053262226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.970871599 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.973854277 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.966895698 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.930100808 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936227444 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.922249022 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.953133185 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.939306487 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.053550778 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.054512345 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.945811463 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938389105 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.9375881 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.936990345 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.961532829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.064043998 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.970611541 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.031760038 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004748185 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.011228179 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.950711445 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.949088938 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.93970423 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.000810791 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.95101619 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.947939486 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.259920782 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007560692 seconds)
  done (took 209.455854072 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.38477001 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.990717023 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.995423212 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.256486059 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.361373657 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826702181 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983163718 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.986769967 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.01075318 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.175575354 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.059006204 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.004558905 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.973866816 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.96054246 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.986080056 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01050146 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.996252334 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.308226434 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.11726388 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.063315405 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.966634332 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294999611 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.3072782 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.373728235 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.021594362 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.338281698 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667758998 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.127562685 seconds)
  done (took 63.418290819 seconds)
done (took 840.079258182 seconds)
SAVING RESULT...
DONE!
