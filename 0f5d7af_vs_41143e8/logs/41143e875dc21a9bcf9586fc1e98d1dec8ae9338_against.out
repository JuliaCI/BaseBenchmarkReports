cset: moving following pidspec: 26766
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.168454447 seconds)
loading group "string"... done (took 0.45402455 seconds)
loading group "linalg"... done (took 10.251758395 seconds)
loading group "parallel"... done (took 0.223368738 seconds)
loading group "find"... done (took 1.881131671 seconds)
loading group "tuple"... done (took 1.986482891 seconds)
loading group "dates"... done (took 1.332105981 seconds)
loading group "micro"... done (took 0.45493382 seconds)
loading group "io"... done (took 0.436483907 seconds)
loading group "scalar"... done (took 45.773287011 seconds)
loading group "sparse"... done (took 13.184382764 seconds)
loading group "broadcast"... done (took 1.094761742 seconds)
loading group "union"... done (took 8.459647429 seconds)
loading group "simd"... done (took 2.153532829 seconds)
loading group "random"... done (took 8.480901122 seconds)
loading group "problem"... done (took 2.357179838 seconds)
loading group "array"... done (took 24.772678362 seconds)
loading group "misc"... done (took 0.884802763 seconds)
loading group "sort"... done (took 3.664385722 seconds)
loading group "collection"... done (took 15.8358978 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.599023442 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11134835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.17523379 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175862101 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242734645 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137402817 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138191462 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09881702 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.801151835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177079393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125286433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.360144031 seconds)
done (took 6.011709741 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.231942865 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.083508927 seconds)
    (2/2) benchmarking "String"...
    done (took 0.144734708 seconds)
  done (took 1.067863754 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.08807111 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080615255 seconds)
  done (took 1.012116434 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.081991685 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.33521234 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082986057 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.475053101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.139737111 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083545722 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085195114 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082320568 seconds)
  done (took 2.12680786 seconds)
done (took 5.363978855 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.376547272 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.820842031 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.478130642 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141780197 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.27392303 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.228846215 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.201665341 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.21711629 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088694585 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086196448 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171432467 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.424301221 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.296283456 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.84348697 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09906228 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100259555 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132920092 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.762367586 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084311561 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134783272 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.365494632 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11912314 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105860024 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.147823961 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190257324 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106208913 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161702071 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083837959 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672278537 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123527355 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.206255548 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089636552 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157289576 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.127824181 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177732248 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115605674 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66662821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194136119 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.144643509 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.086307396 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676366413 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.105178464 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.169323215 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097945229 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088108102 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.166568647 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119469278 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083409848 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109089512 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084530115 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166520777 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.590323674 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104227727 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196917587 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099584526 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.679239056 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105921613 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.254020867 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132194095 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110314341 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083171886 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.083746519 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151252551 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088946455 seconds)
  done (took 19.424463959 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143650345 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136775517 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085551461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132988146 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101575402 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083791872 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083346765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08507383 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089633774 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144826201 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08990588 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152592954 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083779299 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083633318 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.151026495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203424889 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090539324 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.096111393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08685077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105734996 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116687296 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.089671089 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084802261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084489285 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.141275406 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216313791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114406627 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115348214 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08371596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098332296 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136576743 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132979426 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084933521 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082330355 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121724623 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12697037 seconds)
  done (took 4.924284905 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188317257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106371013 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164219119 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.13669347 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11551152 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151208476 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152663479 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229669879 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.675110141 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.162553191 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168618572 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132566179 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100529385 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098962871 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089388402 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084485212 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.556848004 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143378108 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11111678 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17136248 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083983812 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087288078 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385249096 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085534562 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086125634 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084888765 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086784665 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164974946 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084172078 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.585328323 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109344357 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084662234 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104827588 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129281375 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.218041018 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08985318 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120894187 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086561472 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083145533 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084997902 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153768815 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083877058 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085392383 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092362242 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135354774 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127465254 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085028428 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085135795 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.191933247 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085336875 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091784461 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.823244709 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171661552 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.151219371 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083369216 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083225553 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.163785312 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103687706 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084043741 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08305175 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.163457837 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094946315 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08335799 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083936018 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084026393 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083765729 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086620802 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.285462977 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087422159 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.103401157 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08529423 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085103842 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.355664925 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089313142 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088575976 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102849918 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083077105 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086402589 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08232874 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085192253 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084699067 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103636289 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107264058 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085821416 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145936522 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085274275 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104121516 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112078455 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087749119 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083322396 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130813285 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085804214 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084411704 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.160026042 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082052997 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103640774 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102557909 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136004878 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086694363 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15748343 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085036147 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083287806 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104485741 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090051304 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129070302 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086395114 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084053322 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088399319 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084439533 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08551934 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146280872 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084400098 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085439959 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085290168 seconds)
  done (took 21.292766454 seconds)
done (took 46.487674895 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.596581369 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082627475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083955912 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083810233 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084157503 seconds)
  done (took 1.849423148 seconds)
done (took 2.744090819 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.182512001 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102712103 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098345955 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.100124245 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.107276816 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101544632 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085249939 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098522849 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121580485 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097235989 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101007948 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.086707341 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098093775 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100569348 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099333295 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082486337 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102179871 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099231277 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115652667 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.082929647 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083177427 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10029757 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085233126 seconds)
  done (took 3.251431628 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094398354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10188402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094256655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094413484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084764084 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094438949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094224074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101612107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094258197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091364844 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082873101 seconds)
  done (took 1.930441456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094923888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099002337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085395016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094994236 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085231188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094830707 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094741279 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098434427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094681517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091298519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082530132 seconds)
  done (took 1.918303221 seconds)
done (took 7.999866913 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.443775299 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.679946967 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15166004 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20588349 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.244833413 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.183370543 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282918793 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165021691 seconds)
  done (took 4.36734694 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.121560598 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086040327 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085995126 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.145764151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08632204 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089669393 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09030804 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08566145 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089380271 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089270264 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085719332 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.106352798 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08879759 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089155369 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088627365 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085478356 seconds)
  done (took 2.453574125 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129977526 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112095066 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08950839 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08887875 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090707181 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091312604 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092989551 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089124555 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086867529 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087912279 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091265987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106734379 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08914672 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086894711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089834835 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109686585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087606259 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090050902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106845034 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090607734 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090122675 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087079675 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087496264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089331115 seconds)
  done (took 3.245320206 seconds)
done (took 10.968856755 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101888083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085650572 seconds)
  done (took 1.080691711 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.158474585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154943982 seconds)
  done (took 1.215135096 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089554432 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084020983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088169895 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.087093565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08447047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084421894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087708276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083860091 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084176789 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084790033 seconds)
  done (took 1.764770062 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087352045 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085717659 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087371541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15117302 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086014224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084095765 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084999369 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084729521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084321979 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083225236 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083897836 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111798992 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084532582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091674251 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085108523 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085889083 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085816822 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084901251 seconds)
  done (took 2.539140188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083780671 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084299682 seconds)
  done (took 1.077026446 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083518426 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083744573 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085983449 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083496568 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083888457 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083362809 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083263427 seconds)
  done (took 1.493497399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.445308376 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.204349535 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.287994628 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101574787 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084161855 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.28796048 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082846147 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08385219 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089710186 seconds)
  done (took 2.610418615 seconds)
done (took 12.686666677 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094433049 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.160540215 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.485812425 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105130005 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084450569 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150156299 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.185745986 seconds)
done (took 2.187107142 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.24775326 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139388947 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.108598651 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084852712 seconds)
  done (took 1.491813625 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086830353 seconds)
    (2/2) benchmarking "read"...
    done (took 0.091626845 seconds)
  done (took 1.100186409 seconds)
done (took 3.515935024 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083863949 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107633258 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082867947 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082563576 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083950767 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.08433375 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083742328 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.084442636 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083928584 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08418405 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086330174 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083926696 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.084293903 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.102974982 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08411082 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08502758 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084571115 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084850861 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084206751 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08475833 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084245678 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086239592 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084604007 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083756477 seconds)
  done (took 3.019907748 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084552777 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084607086 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083605664 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084360018 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084279783 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083938471 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083459087 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083821299 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086134066 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083977202 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08384644 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083915072 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08437548 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084115781 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10199648 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084716646 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084636271 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085183667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08426917 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087679957 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084208458 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083714776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08406726 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084024109 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085720702 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08364109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083299428 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083872584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083487301 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103484706 seconds)
  done (took 3.494440163 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091692585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081639177 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084556839 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087355127 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084646856 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084900028 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081565997 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084895136 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084634008 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083666249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084535894 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086373589 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085333944 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08492385 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102791779 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085676461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087518164 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085991901 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085217529 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084919267 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085620958 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085573172 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086864016 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084585873 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083339378 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082289717 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083800122 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083961003 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102427528 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084545325 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085381977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085205816 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085500049 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089717648 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084865203 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084373621 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085129819 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081615929 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085665072 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082083501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082773432 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084285361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084876606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105188661 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087742432 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084921544 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085666913 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086211136 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085349002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085675057 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08481019 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08476085 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08531459 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086019375 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085457941 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085268783 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085187431 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100572703 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085810231 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08510709 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085379742 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082866699 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085684099 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084997606 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089469199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086127894 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08859338 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085388007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084546026 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085440484 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.085866799 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107142728 seconds)
  done (took 7.155797164 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083993479 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085418589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085440415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084779733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084414225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086957971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084650038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084371954 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084683404 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084006235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08468059 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084243065 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084729574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084504393 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103004331 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085137826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087459331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085258618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085264518 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084950117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084589822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085035819 seconds)
  done (took 2.821785347 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0879929 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08973784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.08596254 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087714424 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089027425 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089520708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085506756 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086741296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084424732 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085386324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085267798 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084810175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087301313 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103895561 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086656885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087461923 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087788768 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08834483 seconds)
  done (took 2.523520747 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085927203 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084936854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084750027 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085083645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08547622 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084360507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085295831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084558264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084478397 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087452841 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085248564 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08539567 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08477698 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085444194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10342704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085547447 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085189666 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084880807 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084911118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08494455 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086043692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087395595 seconds)
  done (took 2.837345701 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085653922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08674388 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086289409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085817455 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086437816 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085581636 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086245046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085697337 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089802983 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085347878 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088292781 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085706542 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089638385 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085217304 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105236954 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086950928 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086250025 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08597847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085660382 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085866482 seconds)
  done (took 2.692738152 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145017629 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089045573 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087345491 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08760558 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087455531 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087324387 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0868807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087604612 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087255546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086998752 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087589177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087905113 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109903002 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087915486 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087488872 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087233296 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08752048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087646404 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087492948 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088187989 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087570482 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087568569 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087284964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08977157 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086693729 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087476239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10670843 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088090545 seconds)
  done (took 3.498526496 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085178472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085434496 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08533101 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085441165 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085182085 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08573379 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088067416 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085576442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085900277 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085874988 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085407573 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088948043 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085545857 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103796867 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086574218 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085911403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086020349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088577113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085803034 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085742991 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085473729 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085667528 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085414571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085423404 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086116508 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086239104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085488507 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085219191 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106306186 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085867983 seconds)
  done (took 3.567190324 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089322048 seconds)
    (2/2) benchmarking "in"...
    done (took 0.088504379 seconds)
  done (took 1.129801163 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086302007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086833813 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085935653 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086484816 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086666488 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086245903 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085885719 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088472285 seconds)
  done (took 1.642060512 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145404732 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161627755 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087915918 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.092930122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161965652 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158906734 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120113782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088384277 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091319426 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097216428 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147782571 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088233123 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090916254 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090166411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090554226 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113069886 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086277004 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092820036 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088804055 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087576791 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090797402 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094285333 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092636919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09009157 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089009469 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10452578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092423776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090822005 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090059004 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111852608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090633246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088326697 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.091237574 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08789926 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085928962 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162559798 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095292199 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090388407 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100166737 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087611238 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091141597 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107821867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092573656 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094318859 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092824584 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088568652 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08776724 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086768353 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087584541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089893546 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087145265 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089178005 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085919841 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092596642 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095519157 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114374233 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088289427 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090466208 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089048028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09329801 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090415871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090346438 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092651917 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087468378 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092552665 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094880479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09043384 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086360401 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0881739 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10672471 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096219886 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11684331 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094226047 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087687128 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08777974 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086546821 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092469296 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08852211 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090634798 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089219851 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087228766 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089217246 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111683189 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090155871 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091760683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0905367 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088106732 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089883287 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08802353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096374837 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088517354 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086452613 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089221006 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091458791 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08918349 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088372704 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089164398 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112146466 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089768474 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088510289 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088439162 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091248846 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093316912 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089522274 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089733876 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09207884 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156051432 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090303088 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096475239 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111500854 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089058436 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092388179 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092039884 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087727759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091802092 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088162984 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088317822 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090848932 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087894355 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089280505 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092761646 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095043005 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.087677198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107209621 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091986855 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088892714 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089580347 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089933659 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089902962 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087500287 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087073993 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093959623 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090629121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092245528 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089665781 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091696979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087043252 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108705629 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089438341 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093617801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091505606 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091742153 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094014796 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0928738 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088984119 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091770291 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090566211 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089048325 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091048828 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087883631 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087223103 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108726489 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092063738 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089384823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092609932 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089225303 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091267316 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088660126 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088735213 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089449602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088912954 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089000037 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088479126 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088495483 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092318782 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110265325 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088511805 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08769019 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090429758 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089260841 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088308393 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08978316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091397254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088780405 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086939451 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088118289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094736485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095326969 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093662973 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108270842 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090697505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090719476 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086969685 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093043607 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088835858 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089191088 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088985309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094528754 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091509091 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089908476 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090663602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089126181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093583131 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092526846 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.110390347 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087986603 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089403145 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089933018 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095456272 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08967277 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088723825 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089129406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091835626 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08954191 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091807125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088832003 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.088917605 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089608108 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11179982 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092997428 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089639281 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093249485 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09201383 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086215533 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088743049 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08721213 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092203619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.086385621 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08778681 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089251672 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091834201 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089110628 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116966608 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088117433 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093736221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094299124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092059309 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089274089 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089017441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09118127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091542313 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093576092 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089671898 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093957671 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093084185 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089693242 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109405003 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093115892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089913097 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088079715 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090980395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089292974 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094487848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089168625 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08861741 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091916222 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089869803 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093018055 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087351176 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091797661 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108944047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08949707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.088850048 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093975704 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093148608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089147186 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091415228 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089757363 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089234243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09291007 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089089311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090204056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089887931 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0915935 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091438374 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113555862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089954662 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089608094 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090281478 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088414187 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093003869 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08932821 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092680208 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091252852 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089769078 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09129531 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092649857 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089403774 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089010383 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108756791 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090661935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093038697 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093028388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092363488 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092893183 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088385473 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095870984 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090175511 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095931146 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092795118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088957347 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090828788 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093240689 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111268892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089452144 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091010976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091789168 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092165185 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092260713 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091489885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090344601 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093629774 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092193255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092704244 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09264682 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093109483 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091089114 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089914999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112992601 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091005487 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092920921 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090256797 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093316177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093873814 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091512608 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094849524 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090636001 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092047083 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091204789 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090697895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089854856 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090307317 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.109053818 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092028199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090491596 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094119035 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.090206344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091531168 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090364123 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.087700033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092254349 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093261852 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089428416 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091923716 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090386721 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09238677 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110429545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087486581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090702548 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.088478275 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090821129 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095064621 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091925611 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093922938 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089498947 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090322007 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087925368 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090308632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090004199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091720608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.108364098 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091596087 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093531093 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092646494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090732878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094613621 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090001798 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092630427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090462724 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08983766 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090732331 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088761391 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089577584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090596451 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114626524 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09059753 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091150753 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093458166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090684272 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090796412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09269023 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091692085 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092975178 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09535462 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091134881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094302433 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090857933 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.089276295 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091887869 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.110196527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09126029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091735577 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092686411 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094317075 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09130912 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093544197 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09315149 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09432358 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092362664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089639296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090753502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090538542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09020121 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.111056056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091578631 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096988454 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091561864 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094212537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089643642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090037266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095248433 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090363274 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090337397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091535916 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093333499 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093622863 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09376719 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110938984 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095872682 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091243637 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092570704 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092417081 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091255731 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092563601 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093758695 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.092162613 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097338178 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092947952 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091023711 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092965476 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090732465 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114974232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08910242 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09099226 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091498809 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089393865 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090075435 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091075385 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091916035 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093370081 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096418271 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089526659 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089430908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090806277 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091480924 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09342775 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115795753 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092849285 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095354716 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091754973 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09070182 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096499815 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092179116 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094842139 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091425335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093973702 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09144337 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093707613 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090773995 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093173445 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112968639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095217143 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097060128 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091583039 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0927484 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093654468 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091153057 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092571842 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095373113 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093998122 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08937023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091317036 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090867602 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095654086 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110802449 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090174172 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092067074 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09422697 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093773024 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092155472 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091354941 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093687 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090637964 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094781748 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093608088 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091724729 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089372973 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091300561 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112503662 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095082316 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092499045 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090667357 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092827904 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09381018 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090758423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094386858 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091536198 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090045895 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089963397 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091639413 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09154252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09402419 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092656588 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111524858 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089430062 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087742788 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094154262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094404921 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093807433 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090778323 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090265901 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092214477 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090905923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092416703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088178096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088375517 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091314215 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110492173 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08854669 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08957467 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08732303 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090419728 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09077507 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088947579 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092338917 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091574431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094252194 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088951882 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090472508 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089195396 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087832097 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091548277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108520061 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089947121 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092442181 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092915312 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089208718 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08879036 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091444154 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091864175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090505476 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089161567 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088688935 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091906243 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093819589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091730917 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116394712 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092546086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091672868 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091177201 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091730528 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09612503 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09142545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090997873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092056113 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091907343 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090454346 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092947051 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091667057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092932821 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114843804 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.095905059 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092451883 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092581705 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092216379 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089902734 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092223994 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093993971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091013049 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09108384 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091270821 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095007312 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09411386 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093915585 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091807316 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113335028 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091128023 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093623401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094942353 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094475821 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090079436 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091654821 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092384276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094822733 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094959392 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.092287091 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095180027 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094160785 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096184257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.110339016 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093623537 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092034054 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.096959324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092746592 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093839694 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094544428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095318334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093667767 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092175112 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095406368 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096128148 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091688492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094169944 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.110741676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09318893 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.091682231 seconds)
  done (took 56.737240966 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105454883 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091666667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092110609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091898995 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090570753 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091316473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091263357 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091749319 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091321302 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090319568 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090749814 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09359059 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091194117 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090256938 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111058118 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090838386 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091789775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091107584 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090878977 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089460269 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08793932 seconds)
  done (took 2.962756353 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088715891 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091319867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089213582 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087494887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087660023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087605263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088759897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088966052 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08830381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087306741 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087763876 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087605643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089906832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087757188 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107869748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087980517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087970604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088862941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088462271 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089027541 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088356288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088475713 seconds)
  done (took 2.98012665 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090754654 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092518249 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090019479 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088954434 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090594178 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.087862105 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089353411 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088128199 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090816656 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09020061 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.08959947 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.0908073 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093108833 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.09116944 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112611941 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090269384 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.094971475 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09298206 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093284511 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091389323 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092845312 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092196357 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.092231634 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096044376 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093125167 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092809208 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091391127 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092651442 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.114110435 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090801176 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.091495441 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09266818 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092529117 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093855602 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09569174 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092670791 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.091946702 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.090619391 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.090943549 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09235533 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091607195 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092547036 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11313586 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089623746 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.090850247 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09512627 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093656582 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09212181 seconds)
  done (took 5.489426137 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089156427 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113461377 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08954925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116190901 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09101298 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.090498482 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090048435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116370502 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093391584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091219705 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.091348523 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091536653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113877136 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088861691 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088493084 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088983736 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0883321 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089376413 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089564508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093538552 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091976134 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091394556 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091216967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.090974485 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091512512 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091425036 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091554136 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11382592 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08943668 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09134553 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094151932 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091437533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.091818284 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091735731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09201565 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091183449 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091159577 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091764129 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091537843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.093204305 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091687164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093673828 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114695423 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088882472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089244173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088769599 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088695822 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088459755 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089261511 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088880896 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.088657883 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.088742752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091652912 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090071607 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088863447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087960863 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109728391 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08985172 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088465048 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090353208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09031966 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090653631 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.091008827 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090028026 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094522453 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091385409 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092233111 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091613386 seconds)
  done (took 7.454030664 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089923826 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088618492 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089117906 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.088719772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089673883 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091240487 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091246826 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.093494771 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091507547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091179243 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091741369 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091546747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092532724 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091773418 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113273128 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089265475 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089478469 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088962282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091705695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091092684 seconds)
  done (took 2.865982725 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090059604 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090527577 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093051915 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09343421 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093022772 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092858996 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092725002 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092734827 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093050963 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09469894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092806793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092665531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09280126 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093017077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113509862 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091788927 seconds)
  done (took 2.53170128 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092110173 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092829251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201332204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089397309 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.093895886 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095648332 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092783801 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.092631514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.092243141 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099828423 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091710488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113915814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100950882 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089783448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089318624 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092023499 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088786686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088817122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088887426 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169024008 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089018067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08894708 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088602136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114426242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089374023 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089917234 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091988207 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.089329001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09249928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089105629 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089276025 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089704454 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089547837 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089022948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089564181 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089649999 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088354375 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.09179819 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113330987 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088533842 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088843537 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089247197 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089602596 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091062066 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.092633339 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091834615 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.090057366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089577723 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091963885 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089846253 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089847899 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090310743 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111405303 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089690892 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089747949 seconds)
  done (took 6.305080248 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090414175 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090123836 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089726662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089430915 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091657181 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089611006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089025904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093484624 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09056567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089358785 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089686496 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092732021 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08979672 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093131331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113945816 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092460979 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091019235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090203487 seconds)
  done (took 2.694371082 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089890622 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090199125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090081086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090247272 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08971788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089043776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089580485 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089540676 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092060091 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089120703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089897924 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088928386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088969071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088923501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109759515 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090586534 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089821878 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090707284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089708804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092241011 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089194946 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089171952 seconds)
  done (took 3.035379689 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101239201 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.158399252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100747275 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165237536 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.092379874 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092158633 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098373304 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.094274809 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130240972 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.09363316 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092946026 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092284652 seconds)
  done (took 2.353014264 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09093624 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090983321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090670796 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090107424 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090408563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089855691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089947164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092311386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089465479 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09295058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09002529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09118997 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090661868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092166368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113381438 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090583702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090353688 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090932836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093147845 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091098212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090889609 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09079927 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092408323 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093432187 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093634666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093659222 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093660076 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093774709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093479325 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116497915 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094051627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094099566 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094909289 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093933996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093981599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094256108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09384816 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093816379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093514387 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091741465 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093798574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091569463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092895863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114970874 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090157861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090885669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090346629 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091694162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093030174 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091757635 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093777182 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09617012 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093692339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094061832 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093631597 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094024394 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094258776 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094876877 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113459224 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091045935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090303655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09014177 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090826085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092954518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091601549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091117041 seconds)
  done (took 7.224854976 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091590499 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09111501 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093469746 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094377567 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094259533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094246378 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094905892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094153547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097076217 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094043631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094302297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094123175 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094003444 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093453127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11497401 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090325041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090469574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091088156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090542483 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092460838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090975158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090012456 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091095879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090957602 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0906735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089793954 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090947629 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090540323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091489187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112750491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09401181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091438021 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091141394 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091287022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090503792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090835168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09129938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089907318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090464525 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089938665 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090204258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092376964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090294917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111977862 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090947691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091176379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091420251 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091763125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091179105 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090119254 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090305174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090911118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093107966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090339089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090276672 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091048814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091361171 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090513057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11204296 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09131426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091481124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091052896 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09189256 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096654533 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094833968 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094685385 seconds)
  done (took 7.200981363 seconds)
done (took 145.139748734 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162618554 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.185309175 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.240830782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151471663 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.1404535 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.124337939 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091679141 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.091536062 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.097153212 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.115293185 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094582527 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.095004435 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.143626244 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.189784652 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093061176 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.124810699 seconds)
  done (took 3.18315121 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181733887 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.264753691 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108238735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.093925003 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095898524 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09112765 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112816703 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.145385525 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09482931 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.091902423 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092209361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095145022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093219824 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092312081 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095389232 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094339199 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.095212617 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0926834 seconds)
  done (took 3.087970128 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10957587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.132974433 seconds)
  done (took 1.305355559 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115365787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.125027062 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26271904 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119808125 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107231939 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097773936 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12059782 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122255604 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.1671768 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.092020389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.091931144 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094226981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.109171815 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091605244 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099504287 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095181639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.116132297 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.095311175 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095484333 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095539141 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138686161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093306248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091872703 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091564392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.157204045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091967505 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093114884 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.095214253 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09206095 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091551087 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091814178 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091440483 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091833077 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.115962788 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094707119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094697191 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093393653 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092323424 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094149801 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092795801 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.092842374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.092986287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094417115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09295941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091969379 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092879701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092088382 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11353591 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09260758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096867088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091784357 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095240419 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.095170024 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097713152 seconds)
  done (took 6.692115508 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.496819275 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126697668 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092749954 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.553785316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094195245 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094258113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.482324317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114684064 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198907714 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.518965576 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107031149 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091562117 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10537185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.199585053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145424113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224256592 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.411547214 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097278862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116899022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104047501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091476483 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094505741 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094113529 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.691173033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091617919 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093025662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091433556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091786146 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125428442 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094965284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09166638 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.107991614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.210397939 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.101726471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091914355 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091914595 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09208864 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101638637 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176342314 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104048559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170402055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091574583 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113952571 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092455339 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094674462 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091779785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093903183 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.109771476 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.104550911 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091722936 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095513834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09255601 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091189914 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094224205 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09324399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226494879 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.249500385 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09364987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093431204 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094668608 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175906459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099319711 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105263918 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10767757 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.102001605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093133629 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047128085 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103869828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092768094 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091924084 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114017279 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091476182 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09498864 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15297592 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670409995 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092552924 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092345862 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092857555 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166055305 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094135495 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093291785 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101526361 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091669406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095623653 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113661938 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092576948 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.10615078 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189662909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092910603 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093299831 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092312169 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102000142 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091748404 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189045835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096816943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094063415 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179408421 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092624651 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.116411421 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104436814 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093052042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105343705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093310717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096440352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092236015 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096873526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.101330628 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097986157 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0913782 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092166539 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.103663191 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097508382 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113266195 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.10628111 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.691193137 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103170601 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095295039 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099356348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092376082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.103968244 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092087849 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178279999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093685484 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104591515 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096533008 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09645004 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118637401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.094885213 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098856498 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094177292 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092432886 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095842064 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198243848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.102239385 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09189832 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.173160283 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174200781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092316517 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108011505 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094988202 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.130828363 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096952909 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092504683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092472868 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.048775971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096707173 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094645996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0949133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178716154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095380436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104703561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096791693 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096460791 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.052916842 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124008468 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.094525233 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099431406 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092307442 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093839837 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096034577 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096748972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.101425952 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.110889047 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096637859 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097553314 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098225746 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.106281818 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093787242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.097400081 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.118648995 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094803788 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097144523 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09976696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104660291 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.110975069 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.094980747 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.094988245 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867265747 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093052006 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094113031 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.106082832 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093356446 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194717779 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116982561 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104270925 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.103401135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094396924 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226257612 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102403374 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175207914 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09684127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106728988 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09204835 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091995477 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.096408915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093007004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092173591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.11553186 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094033962 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092519579 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148690211 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094362524 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200353404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092228262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.106502415 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095736232 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093450841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195740938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093920494 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096646372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094548114 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114065214 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.095117898 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.860405249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094787116 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096211509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094852796 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095742104 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.102670212 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092754104 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09244307 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092279903 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.096016118 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181323073 seconds)
  done (took 40.681460568 seconds)
done (took 56.006730111 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.161681832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.136266969 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184332185 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114554006 seconds)
  done (took 1.755435825 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178692877 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112158161 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.172938458 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092571759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173251948 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11432765 seconds)
  done (took 1.935976073 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.122803371 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112420305 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109002821 seconds)
  done (took 1.428361213 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.152487455 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.147052518 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417317884 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.339763009 seconds)
  done (took 2.243083495 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207635332 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094962658 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094609654 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.173981679 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177906691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.131506126 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096947247 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103469099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100080583 seconds)
  done (took 2.314404035 seconds)
done (took 10.766046924 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.395876984 seconds)
    (2/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.210183524 seconds)
    (3/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.232134644 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.273497474 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.174534958 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.169670563 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.245878017 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169177492 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.223786472 seconds)
    (10/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200901094 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.287367914 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.221440082 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.269554279 seconds)
    (14/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.16787356 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.095229753 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097498793 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.095711314 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.145905315 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.167300988 seconds)
    (20/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.133131833 seconds)
    (21/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144705561 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.179949571 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.201504091 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.220983516 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218597379 seconds)
    (26/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.168046124 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15032597 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108920353 seconds)
    (29/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098288815 seconds)
    (30/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099921118 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108255283 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095678688 seconds)
    (33/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13724395 seconds)
    (34/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093065154 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093503325 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093842607 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146650774 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134211381 seconds)
    (39/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175330278 seconds)
    (40/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.283864266 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.178539686 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.186604231 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093311531 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137923538 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216968841 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10454635 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.140378822 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198598143 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.116702636 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092552112 seconds)
    (51/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174525118 seconds)
    (52/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.203706469 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.111913543 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.135362858 seconds)
    (55/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.120111043 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.14767073 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155759036 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.174347439 seconds)
    (59/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093803783 seconds)
    (60/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.137514838 seconds)
    (61/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.167541028 seconds)
    (62/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.151851219 seconds)
    (63/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097747183 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113011444 seconds)
    (65/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.138026453 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.114519018 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.105319801 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.154144505 seconds)
    (69/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.119500366 seconds)
    (70/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100579811 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.122263674 seconds)
    (72/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190759236 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.147115177 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.156147034 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.146579607 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102296941 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095271756 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149710826 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15980904 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.168174517 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096406764 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102018615 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097527736 seconds)
    (84/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094034278 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143508636 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09235672 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097845416 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107100883 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.12082998 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095955648 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097883737 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100571247 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09376374 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09284396 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095248643 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106456984 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094480696 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096124188 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.111377706 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100197774 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093564493 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137675625 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10778863 seconds)
    (104/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107037923 seconds)
    (105/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096344398 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097062717 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106214607 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109581109 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153296075 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093636307 seconds)
    (111/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096281823 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093318315 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.112135536 seconds)
    (114/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.131794341 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094609528 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093894091 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.11791344 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109092009 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.09541613 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092466967 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187713721 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.140559711 seconds)
    (123/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.22464981 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.095426398 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094109314 seconds)
    (126/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106895579 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094916108 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093222192 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094242012 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093222074 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09549824 seconds)
    (132/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09361221 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112403972 seconds)
    (134/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.106901195 seconds)
    (135/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103759642 seconds)
    (136/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099894582 seconds)
    (137/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.139608849 seconds)
    (138/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.153480532 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150698726 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103766604 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09801086 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104232989 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094168284 seconds)
    (144/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.148367591 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095496406 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093553211 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095391616 seconds)
    (148/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.117261487 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093472058 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094107879 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094503139 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09425652 seconds)
    (153/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217941984 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093250551 seconds)
    (155/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106723048 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097696182 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096364969 seconds)
    (158/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098938307 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096782005 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.1185718 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.100622581 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100435828 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096090035 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.105533971 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093331386 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093803906 seconds)
    (167/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.099043513 seconds)
    (168/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.097519356 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.093818134 seconds)
    (170/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.097521977 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106854381 seconds)
    (172/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096298167 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098712479 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117443695 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096453196 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093898189 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096438871 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104818319 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094425685 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.100580739 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.113012424 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09477512 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09441921 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094025051 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094815769 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.092936165 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.13530608 seconds)
    (188/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095702584 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097956002 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.107301446 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.094688173 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092795339 seconds)
  done (took 25.70631744 seconds)
done (took 26.804382922 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172720479 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121280271 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101755347 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102154573 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16768949 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11982945 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11020652 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126228689 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.10331333 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093299684 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094058132 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106125707 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102143642 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.173090474 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104647455 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093769 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0939213 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.105201547 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.132223292 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108575107 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168965934 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097817476 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.102965812 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093743051 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168262864 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098408537 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125660521 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111897205 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108640648 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094341668 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111838713 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09403762 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10852258 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107483331 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096577138 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093542654 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096050603 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099483716 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093820483 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122710145 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10724938 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094461061 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.101666999 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094024735 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093336565 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09341207 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096143849 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106300562 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094392164 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11215464 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100353574 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107493748 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120255596 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094132222 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094391906 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094471172 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103464638 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096559886 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107227221 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09700973 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094200572 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098350251 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.093520591 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096416652 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.093249138 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119716217 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093730209 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094798966 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094234127 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098873611 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096500646 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093706928 seconds)
done (took 8.845664427 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09712141 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111590667 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094249503 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171041263 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154138596 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.095084261 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.094288974 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094981864 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.100763719 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117303386 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094443157 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099843605 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094190162 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.094992421 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095224657 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099414835 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.093315515 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09436827 seconds)
  done (took 3.028441775 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105133646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115231921 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105575415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105475664 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.097611626 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094016276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094350907 seconds)
  done (took 1.86874016 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09471569 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182150756 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.166001487 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.165708315 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.19651178 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.170817334 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094352698 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105797764 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096657996 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.178356026 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.208192026 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094003265 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098243449 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.167739825 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0939719 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.160923134 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093652165 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120087097 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1640405 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096728081 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107290798 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102898727 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09426376 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.174592761 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094777308 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095910487 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120861235 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096777901 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120816989 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.17506747 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099899732 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094684343 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.170510384 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096023687 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198693079 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09700461 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.172130876 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097990814 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099217796 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.093759238 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096876003 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.183813343 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095525362 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098905072 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095788056 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183622387 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094351188 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175970593 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095760816 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119924815 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.098800227 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096011081 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099205843 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095013111 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184181624 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096901481 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162634981 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187934473 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.174946047 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.16104357 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095695739 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.200839607 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.167510104 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096383934 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097848182 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094058824 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.164418571 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093459722 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.098549026 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.18485286 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095273889 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.166213725 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.165395445 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098603907 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094298428 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.098814827 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120638489 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.167218215 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094520687 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095986797 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162355662 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093338441 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094768894 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094557777 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119718721 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099642511 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09700831 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0949703 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.163922517 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.163779403 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09431974 seconds)
  done (took 12.672610056 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094579889 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095539032 seconds)
  done (took 1.370913278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102444588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094142593 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104076666 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095141015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101954391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.177494646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.18110173 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094687957 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.125085991 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102101646 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.181488837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.180577777 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.178549446 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120402567 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.181109798 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096933459 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.179249308 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094450666 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.100202653 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095741542 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.098630943 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095231887 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121112769 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.160798804 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094245302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09438279 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097349093 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.100355378 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101164724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.094325531 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095012767 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094544855 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095116331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120310747 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.180175706 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095209357 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09491432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097938985 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094444904 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095067426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.181054009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095441295 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.119688799 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095310349 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095179963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095829257 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095719769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09496332 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.181793787 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094757211 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095053029 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094246782 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094819555 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094913723 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120439852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095592477 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094914819 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.181415711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095685087 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09761913 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095794213 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0946899 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095399665 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094915082 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094189712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120391154 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096258669 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095313808 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095672793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094630797 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097696073 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095629334 seconds)
  done (took 9.271443239 seconds)
done (took 29.360352257 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.114809008 seconds)
  done (took 2.288018564 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630158345 seconds)
  done (took 1.804173278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.61357622 seconds)
  done (took 8.817785481 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.364084565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.28199105 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.867683168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133658702 seconds)
  done (took 2.822688837 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.104293011 seconds)
  done (took 2.293465704 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232738037 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192986451 seconds)
  done (took 1.598958327 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729006875 seconds)
  done (took 1.918682745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.310996555 seconds)
  done (took 2.484201292 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.195546353 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159959662 seconds)
  done (took 1.54667834 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525181912 seconds)
  done (took 1.716981282 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.719120234 seconds)
  done (took 8.916485707 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227366312 seconds)
  done (took 1.415342828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.258801955 seconds)
  done (took 1.454938645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.033136223 seconds)
  done (took 3.229338754 seconds)
done (took 43.499066372 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102652591 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107898798 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10631025 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.10358069 seconds)
  done (took 1.602503615 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101811245 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.100133749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10119479 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.09987438 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102130213 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100731094 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098913189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099180765 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102031977 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099608242 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099532991 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098693289 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10005544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121769495 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09542629 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100290103 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101955448 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10037808 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098625145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101355286 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096174682 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099343297 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099810055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101695287 seconds)
  done (took 3.620445475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103456625 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101375784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101143201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100927643 seconds)
  done (took 1.609318457 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103454232 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107257589 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107584158 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103219572 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106439788 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104975864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098223116 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094561414 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097675225 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103351426 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.106422788 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100576664 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129906221 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.106739233 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105585997 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095582846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103140871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106542871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103900945 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103619019 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100455597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102875283 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095870754 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098514298 seconds)
  done (took 3.688055249 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1688884 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.107307332 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.118675727 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.121687398 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.095253782 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.120640222 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.118410404 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.095086099 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.102859923 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.094890495 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095893961 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.12587027 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.122532749 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105597721 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095895582 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.095567879 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.095958164 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105177729 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.150951274 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095341065 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.103735838 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.108065836 seconds)
  done (took 3.651149342 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106195103 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.09978991 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095948107 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095586154 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106812498 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102189542 seconds)
  done (took 1.816066845 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101589813 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098210618 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097930073 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096521863 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100675508 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099083122 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096133616 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097510987 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097767223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.095499589 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096043799 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096118073 seconds)
  done (took 2.380795682 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209184868 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115313186 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119893308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096194698 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101034546 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096098787 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107754307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097635979 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097125712 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095744245 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096506955 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097887738 seconds)
  done (took 2.540098914 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146164997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101448988 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180291554 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.454245948 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111896714 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155865771 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.381970541 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145082431 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.129849458 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110771418 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130086238 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111885626 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145647212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138980079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11164032 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.373317987 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150566577 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144217828 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11452558 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143049744 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12523268 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163802954 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13541292 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11722212 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138375894 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11324078 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099713901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103080391 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119258609 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122187139 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149313365 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116337623 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106834604 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134353007 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113307574 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119049362 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208452338 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104723523 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232289083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131943321 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145706902 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134259893 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129600566 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118574949 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106918538 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139500116 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108942769 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126156062 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107460573 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112407995 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15366054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124505103 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.117855945 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110685559 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.420374609 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105010504 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113535274 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143875253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138825346 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136356606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13023945 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101282014 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168853184 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132429342 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126212568 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110549176 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114749592 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096252648 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158202815 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163970935 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124821868 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155776835 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.138896794 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11041535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125219379 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121676057 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145681932 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127419524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126683417 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100047556 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142515574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104695351 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106612331 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168047431 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100705371 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165634552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105947486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.306985509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140396846 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12446169 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121287347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122515174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154968895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118676437 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.139562504 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114117458 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114472019 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146858816 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1014969 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115799734 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138733708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099561691 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143427519 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105180895 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124223712 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131524927 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117777599 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128652659 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111115668 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133937319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138835678 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124251996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125046389 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132534587 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103906549 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107168185 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133232607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128275494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106777629 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148965661 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132377748 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141252311 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104964421 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105777291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179903905 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110438719 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158277724 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107022506 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106259545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.126726118 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130303176 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11563419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123517092 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104519222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.143876651 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130618437 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10312644 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110202441 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156781763 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101271105 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104099246 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136412273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105318698 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114855049 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.121041349 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132305424 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119316913 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12716073 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126045268 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133770784 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109642058 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113644952 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10504184 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129658766 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144121383 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099838811 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126595301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132045428 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103728895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173493912 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120690975 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175180521 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12654095 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105122779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174127118 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126122072 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101505432 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105165341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120874779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117406619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127649618 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170916236 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115822925 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120067139 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114958323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141937801 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129270665 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11515172 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106553595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128677688 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122807853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100765843 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096450643 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102364115 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111607009 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101789089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134998007 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12122365 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119386609 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145577595 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129021635 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107174089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157642949 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10063454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117922223 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125168191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110547021 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127456637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13269916 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131945795 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131095368 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111104047 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102118321 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101853912 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103111138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120287199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109019021 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10581457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106047541 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134405596 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122604014 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139851967 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173933622 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120919652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140362284 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102268787 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142478882 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115592244 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130434937 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174873795 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105873201 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120173413 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131572754 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109990015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143422143 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125964874 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152360569 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130866035 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131230145 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103405405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111396924 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155496057 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104469724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114444492 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107035095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109065638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112507211 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135583807 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100568539 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132193267 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115257449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116407104 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140556384 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114041152 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104864869 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109270826 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135014412 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138371423 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.122020032 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123720797 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117565611 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137109654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111004139 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119012417 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103236019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.433879021 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126665042 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124097883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105631522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132122404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134129994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113108232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113454157 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174300585 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108061234 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128845587 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154745247 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106625507 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106708298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11611225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115717276 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127769453 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097282466 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120006609 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139721442 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126630999 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138703676 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13080513 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124972297 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124169765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121585365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134861313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139379532 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125842577 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12249424 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128328765 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112329058 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197770278 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106200625 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103136792 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098471143 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177659713 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107159763 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125240041 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.173475161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151777583 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130550173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156728447 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139698096 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102848271 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12653038 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139671349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14964812 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106091188 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107125014 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154682031 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164557329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104794186 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15596083 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.413172489 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142492386 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117612772 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120255171 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.422989983 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104786612 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104781433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11342004 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119073353 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102236817 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176099197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130486288 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109296828 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114255348 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105545383 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171825787 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139771503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108758324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121383655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105880811 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117306577 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113145621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142784362 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115794065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.117036463 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113566126 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132096887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12178343 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102834265 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125326381 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125776256 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127954217 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140554165 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111413494 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176740975 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104350415 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114077012 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104992917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101351913 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15233615 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.175253371 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10708031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121640437 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125566742 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110584447 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098797002 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110975536 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126161261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107178072 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107443412 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154310809 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.109045605 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130078889 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13153225 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10979397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129491426 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108820556 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100806493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108119985 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109163162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135836611 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147336308 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121336249 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098376172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119473386 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108607906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146527062 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111443378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10743926 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.260521042 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103511221 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13566431 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145472769 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141013165 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115235693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126390883 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130740603 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145545715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106270299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109089457 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207699321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119599337 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127944698 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108811069 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135037486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11399861 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.124697617 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116474731 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12785417 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117481325 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.110408184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155581283 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113277009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110609193 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116244676 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133888889 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146878593 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126553828 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198297333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106704857 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126838132 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116674822 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10323081 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117734138 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118863341 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142021876 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109382329 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106749417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108324349 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128203587 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130524471 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124130687 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127572662 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128633028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124647931 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098022403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125286596 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105469718 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125800519 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124005625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109704221 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12992129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107144326 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103294389 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128067423 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109923677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125546897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09917627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172140875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135450027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103412366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104357152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.412603744 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125615615 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202277228 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130214669 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107476144 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138236662 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115655158 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.125046573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129635662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098576781 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1051617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098802958 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.239483586 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125533999 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130050671 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148413391 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112523173 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200682677 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110763009 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251550806 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139623578 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129331582 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123500504 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102607077 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110582252 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10489835 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109679495 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174208702 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13158489 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128535459 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107955633 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101634393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.110826976 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10965071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142267844 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110809032 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12927902 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110864587 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.119129004 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10782956 seconds)
  done (took 79.313225453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149524755 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135816086 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149826658 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21990427 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166486087 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281398541 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236808851 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249464042 seconds)
  done (took 2.890092181 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104934309 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122956294 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.121812448 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.12256749 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.101837485 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.30683979 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.147101548 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099983385 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.146447083 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131010663 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.10516689 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.46144013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099899106 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.102638023 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.130226528 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.100843149 seconds)
  done (took 3.693346195 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.476035154 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.343492074 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.523284118 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201283771 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.415577701 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122843051 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.525448328 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102137633 seconds)
  done (took 10.015022618 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136215083 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129099824 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.217441435 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.229734025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136229432 seconds)
  done (took 2.154035048 seconds)
done (took 120.157938195 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105167588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.106828915 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109092906 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.107132132 seconds)
  done (took 1.720358144 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155664088 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100355435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101578502 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.105011607 seconds)
  done (took 1.773105797 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.423607477 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101090722 seconds)
  done (took 1.873672892 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132042979 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.123350179 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124825749 seconds)
  done (took 1.701067178 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113462435 seconds)
  done (took 1.429867442 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106065605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105925513 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.174973443 seconds)
  done (took 1.703035336 seconds)
done (took 11.514033738 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.205622406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.94441443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413031228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.157313617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70604547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.394946473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.407309076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10107089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11343793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107083367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107787572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686419782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.355387018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88537967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.384399942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.874780502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680251299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127121479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101396582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101003362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.349908902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101098283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102561134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10421539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682088548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399421924 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100879188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.880152719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100684354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13531791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386284892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100996005 seconds)
  done (took 20.59899864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133784395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123254903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108591583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105440591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104433394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.106390467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105798868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101381469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116837434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102841143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101481882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126082439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103842384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103975365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116796022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101748771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100677603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100197156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10066398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101163651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104472303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100393312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126803974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100891922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103455268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109552744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101468154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100944522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102096139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100774461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102050581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.103906157 seconds)
  done (took 4.745053926 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143187928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140316581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.110530115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135340129 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128648634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105404723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156450733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104224261 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143786227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101627809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1014435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101881726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116679494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104186064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119743896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101309075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101383968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100566286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101417199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127366074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105428821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101542955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100682595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101100752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100841455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114278338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10527888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102068525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104441632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126940046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104122376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102017583 seconds)
  done (took 4.940906938 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101069058 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.109832166 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134341157 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134215947 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103109238 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099867967 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103991812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099609582 seconds)
  done (took 2.213883475 seconds)
done (took 33.820527549 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.112120166 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107927271 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111274284 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.110831314 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.167021055 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099661953 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110841957 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.10176102 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107256067 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113520928 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128052272 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101744919 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112683303 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103516488 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.168586443 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109280236 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.169605665 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198213382 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104191427 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10907467 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100130391 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.173226282 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103440851 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10096543 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.193264182 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103740771 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104151376 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1031077 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103161161 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.105003421 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.168620727 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103544437 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101682734 seconds)
  done (took 5.32150942 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.171909501 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.099403326 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100739336 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100276736 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099620499 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099134122 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.173986909 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.101406491 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128866992 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099909332 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101547602 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.187694643 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.099200175 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.10011976 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.102140762 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.096283445 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.0990621 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.101653925 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204109162 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.102571621 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.103269137 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.103168816 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.098094519 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.099882043 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.192657884 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.095675855 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.09941522 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128250412 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.101420566 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.099509309 seconds)
  done (took 4.832984268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105895039 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.122600725 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119345032 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.123792949 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103253336 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.103291144 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.116103442 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111133036 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.104757885 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142603365 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103911714 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107299595 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131141797 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103337952 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.113181956 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.112398065 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.114969764 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099938684 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.11367193 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151403178 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111661796 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109200205 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.1103548 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105394957 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106627321 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.143244523 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121506367 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.102127031 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.101507821 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110382969 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.103916077 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102742739 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.124330996 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115353531 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104479877 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104272493 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.110977512 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101676815 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137477325 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113443044 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104696207 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.101773613 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122266842 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.101648421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.10376157 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100607793 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112089655 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115510857 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.113885529 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102087548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122815831 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130783233 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102247505 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105311568 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102043492 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10427294 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122276957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111150822 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105302347 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.103519994 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102199493 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102769328 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124856273 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.112824905 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132179271 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116976789 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.103935084 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.101061508 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105213562 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101686007 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.116498404 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101174671 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108262985 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103855727 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122941613 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.10097807 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.103275944 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.103498305 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128532074 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.107817243 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108471833 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108698523 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.101582864 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1023219 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.102379911 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102189139 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.099785816 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10244512 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.102654316 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.100374434 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.1012891 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099764294 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127886407 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102665525 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102349673 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10071479 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.105577337 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101505379 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101413057 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.10336923 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11047649 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.123195796 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.104234975 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107183647 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.106330543 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130931846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123078521 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100557761 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10237463 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.114754363 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.104737788 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.104076313 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110393608 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101914771 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.102095895 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100750279 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12872198 seconds)
  done (took 14.23336455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.176284484 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233331732 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.280792755 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245024567 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.18894492 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.162046612 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.255422221 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111275768 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.230010819 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108259181 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.154822032 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232326306 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.114581056 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290012932 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106667798 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.128203747 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.123590653 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.101433139 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111208785 seconds)
  done (took 4.713093962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.101486006 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121260481 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.102423616 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101582385 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.104531655 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.102689908 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.11220304 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.108403119 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101184822 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.103868778 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.113844493 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.113049852 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.108645633 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151155065 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.107394325 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10400372 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101383876 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111496486 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.108713619 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.127821138 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115515357 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110277056 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102148865 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101459348 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100380385 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.1006115 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.103112826 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130500577 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.101804852 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110743898 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.108652174 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.104188772 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.111420117 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.110742374 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10778567 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107250518 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102442674 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10668748 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.212941896 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102587094 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106370007 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.103562744 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10872078 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.106033481 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106413693 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114329473 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.103464835 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.10179092 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.111469027 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100996089 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101707652 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.110126085 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133294787 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102498575 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107365336 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.10200207 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104365249 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.115891419 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105868815 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.107503246 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.102866368 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.113916228 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.106855673 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106618406 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.106895738 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.105458377 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.134093867 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11177968 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.103820878 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10215446 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.100884645 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106957202 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.10058697 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100626929 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103920611 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107094008 seconds)
  done (took 9.697062009 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101663896 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114074265 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.120926449 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.112064061 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.115557434 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.105220631 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.113575981 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115300157 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116412067 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105054155 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.116565276 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10726795 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14209384 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10931907 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.115512656 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.113793567 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.115158086 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.106757376 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.107873927 seconds)
  done (took 3.531706254 seconds)
done (took 43.658473739 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.403062406 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.559964595 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.360204721 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.361015802 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.365372864 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.369767472 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.358536358 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.360391518 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.910024396 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.360063604 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.359572518 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.358551721 seconds)
done (took 30.478202667 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.389476599 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.363381923 seconds)
    (2/2) benchmarking "String"...
    done (took 1.364205631 seconds)
  done (took 4.367989747 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.363500052 seconds)
    (2/2) benchmarking "String"...
    done (took 1.364925918 seconds)
  done (took 4.080126449 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.359243378 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.35868429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.368885688 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.526799146 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.393768866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.357786308 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.371422002 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.357965085 seconds)
  done (took 18.086929701 seconds)
done (took 32.638122222 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.391823879 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.531290663 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.616409062 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.359102625 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.359901778 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.361527028 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.360341058 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.364564983 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.364196593 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.357578684 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.703144225 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.619715033 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.359910539 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.864393234 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.358018546 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.365803751 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.35940333 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.578883516 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.358802694 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.367854019 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.366685584 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.359893679 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.367221868 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.383861578 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.460415262 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.358240352 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.35901508 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.366806846 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.52153255 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.392737732 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.36581895 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.360579394 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.426829286 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.360541859 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.357858829 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.366180532 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.536977719 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.461795973 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.367038873 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.365012768 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.532289207 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.375816839 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.357437721 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.361448779 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.359410494 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.376708514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.588278452 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.456317243 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.358758132 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.365058947 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.368279441 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.867374887 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.363804633 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.36679235 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.372726869 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.570750425 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.361222368 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.38869822 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.382721352 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.368117511 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.361277961 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.365335232 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.375928216 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.371907525 seconds)
  done (took 154.278190511 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.357300001 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.359772203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.359154128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.363330296 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.358884941 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.36045058 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357663844 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.357924839 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.358668092 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.382391877 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.358395133 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.357641214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.359229845 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.290220875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.359257145 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.371736015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.359243928 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.359020034 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.359200438 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357668671 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.364918232 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.35901242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.357868534 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.358218839 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.384433157 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.414114357 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.387816722 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.390720784 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.359382984 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.357904042 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.381898207 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.365469281 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.854139478 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.217794887 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.360720682 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.371731402 seconds)
  done (took 85.786215967 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.358845314 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.356993986 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.357795392 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.383433147 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.35748368 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826552479 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828113027 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.321538407 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.501117329 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.777359378 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.402920943 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464205532 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.358129104 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442793876 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.369570993 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.358361107 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.400486061 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.383726381 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.358119651 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.35763984 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827120318 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.370137249 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.450073425 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.513916383 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.357276384 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383182958 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.789425741 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.358244692 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383407789 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.735457627 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.359123271 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.384239938 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.357831979 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583575102 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.264167625 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.464055244 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.358913146 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383520807 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.357598943 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.625159536 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.35771215 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.357950522 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.358550243 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.361132073 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889772646 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.359003101 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825806179 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.358806746 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208282413 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.358290128 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.358600151 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.466413426 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.80954734 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.358336897 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.357451203 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.357553404 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.360342025 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.357418862 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357410979 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.383324125 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.593478171 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.502057772 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.358464159 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.360765049 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383628037 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.357677715 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.35769756 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.553824236 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.412186783 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.122351877 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826900728 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.358561525 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.524296709 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.447633275 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.471920414 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.357779183 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.357058841 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.357300983 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.357731376 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.461614161 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.357605939 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.695974989 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.514439658 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.358454295 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.409900279 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.449033987 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.357448349 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596426511 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.358175963 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.357603625 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959311408 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445772802 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.359606447 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.3576122 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.357867147 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.697265604 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826747181 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494964922 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.359111501 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.402945355 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.360652843 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.357726127 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.692198948 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.810142623 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90167142 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.359562338 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.462703801 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.514063507 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.358642268 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.357625258 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.40673539 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.358792775 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.415174034 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.357586496 seconds)
  done (took 383.18350106 seconds)
done (took 624.600010013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.240909741 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.16149332 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.222032058 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.113895051 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.093892039 seconds)
  done (took 12.183280571 seconds)
done (took 13.535165305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571403932 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573207495 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41109273 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.381811898 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.47509052 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.524801405 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388095896 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.572648693 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572643979 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524262955 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.374694098 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.394743597 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473916972 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.476668196 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.572467397 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.41841939 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.572596465 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.573331123 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473674615 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.420937423 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.391943438 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.571858942 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.375427842 seconds)
  done (took 35.438340181 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.719513802 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.710722806 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.408033994 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.702325318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.390091819 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.747713578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576943543 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.574833261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.574327734 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.42054474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.369490834 seconds)
  done (took 18.547458018 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.657692898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.685557991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405169403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.650633117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388647374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.660393611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.555096514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.575321976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.537314757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379516182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.368363459 seconds)
  done (took 18.215887787 seconds)
done (took 73.554161449 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.381711251 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42922806 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.364913818 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.366193581 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.365192659 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.364952739 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.367326122 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.364497209 seconds)
  done (took 12.355209377 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.363583053 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.363846202 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.363688241 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.364082413 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.363865109 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.364314457 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.364605319 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.363780346 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.36425744 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.363952572 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.364130251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.366149066 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.364074451 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.364584817 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.364371686 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.363868985 seconds)
  done (took 23.179585299 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.366512668 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.364150369 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.363902216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.363793916 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.363920581 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.36438463 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.364757966 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.364435783 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.364241706 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.363611107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.364955748 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.364200131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.364127763 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.364356506 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.363888799 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.367886428 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.363990463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.363599219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.368914814 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.364270267 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.364635418 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.364360077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.36351736 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.364617768 seconds)
  done (took 34.103812399 seconds)
done (took 70.991197424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.358300758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.358597701 seconds)
  done (took 6.06857876 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.765782157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.814623696 seconds)
  done (took 4.932862658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.364646813 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.364602274 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.364949867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.364606975 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.36389817 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.364107685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.365070232 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.36387376 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.36364624 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.363859913 seconds)
  done (took 14.996093701 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.363792139 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.364244238 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.364112457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.364143354 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.364207827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.364039836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.364164775 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.364144303 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.364528009 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.363922576 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.363890218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.364097657 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.36408741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.364373606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.364314402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.364487769 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.363830387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.364162136 seconds)
  done (took 25.907150962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.380792283 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.387153005 seconds)
  done (took 4.119653975 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.498727359 seconds)
    (2/7) benchmarking "second"...
    done (took 1.40867231 seconds)
    (3/7) benchmarking "month"...
    done (took 1.472487118 seconds)
    (4/7) benchmarking "year"...
    done (took 1.462413513 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.408462784 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.393093754 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.408289757 seconds)
  done (took 11.404004238 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.364135603 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.606100887 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.748126345 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.103113047 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.365169348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.368324424 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.138119372 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.368615109 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.370766176 seconds)
  done (took 15.784738799 seconds)
done (took 84.565795783 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.359637518 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.36001805 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.378828136 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.366326555 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.764430701 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.376733318 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.360836595 seconds)
done (took 17.319976029 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.364599158 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.359924704 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.370892523 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359235176 seconds)
  done (took 10.806688893 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.313525559 seconds)
    (2/2) benchmarking "read"...
    done (took 1.618897988 seconds)
  done (took 5.284889143 seconds)
done (took 17.44483721 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365895359 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.364218528 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.364261682 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.363920634 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.363871339 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.36425483 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.364270616 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.364666096 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.364357817 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.363640838 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.364669927 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.364118759 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.364298627 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.364617889 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364382445 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364091976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363889256 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364073345 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.36398498 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364274615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364193595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364195306 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.363835219 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.364151329 seconds)
  done (took 34.094962752 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.364105196 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.364368499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.36431317 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.364180072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.364605336 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.364437864 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.366285529 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.36419881 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.364268628 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.364287447 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364506592 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.364641434 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.364550416 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.364354778 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364090232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.364688415 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.364558144 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364396417 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364315277 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.364974748 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.364721844 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365031268 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.364754159 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364559401 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.364836357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364267745 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.364331524 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.365201323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36420999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.36520761 seconds)
  done (took 42.29061737 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.368538578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.369510484 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.36450345 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.364701987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.364520666 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.364254352 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.364019423 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.366098681 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.364446987 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.364455212 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.364621431 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.364323732 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.364401243 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.364065096 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.364201137 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.364470529 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.364211698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.364259998 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.364568618 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.364206919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.364449867 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.364268519 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.364480025 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.3643469 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.364512691 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.364596681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.364508759 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.364223031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.364568435 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.364463705 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.364335478 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.364356189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.364930742 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.364460165 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.364515518 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.364139647 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.368445208 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.371201899 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.364228874 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.36465518 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.364819799 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.364413755 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.364439582 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.364348776 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.364620848 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.364576531 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.364587071 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.364772908 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.36454307 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.364607431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.364802336 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.364108553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.364628621 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.364423186 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.364577846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.364607843 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.364584607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.364394575 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.364423226 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.364925682 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.364571859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.364570434 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.36510238 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.364050863 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.364733661 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.364542172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.364432352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.364402308 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.366937596 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.365075552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.365336303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.365041663 seconds)
  done (took 99.623457703 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.364720204 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.365593129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.365335843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364926504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364865493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.365439927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.364836743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364582979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364750972 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.364624174 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365118693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.365356138 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364583868 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365530324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364824599 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365071856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364782849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364447188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.364954695 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.364550141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365174041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.364798328 seconds)
  done (took 31.38231831 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36466044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366044465 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.364293597 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365645175 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368255382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.365479674 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.364477231 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365914787 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36444489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364599583 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364756336 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364561651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366014299 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364450717 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365069304 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.365984177 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364533532 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367084516 seconds)
  done (took 25.929115912 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.365079678 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.365356035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.364593275 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364663302 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.365127331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365084126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364786828 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365089253 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.364373768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.365326011 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.365221893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364203004 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.365098077 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364718054 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364716632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365401459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.36486723 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366743154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365202007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365580351 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.365895273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364775452 seconds)
  done (took 31.385374334 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365734249 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.364784692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365563205 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365797394 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.365201361 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.365034256 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.365049089 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.364693357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.366453084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.364845152 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365010378 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36521487 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.366731109 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.364988963 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.366285892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364567416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.364534181 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365080907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364578138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364854148 seconds)
  done (took 28.658570136 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366268679 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364595956 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364206922 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364103686 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363933042 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.365858977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364135703 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.36413959 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364856431 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.365123475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363876893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.363550987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364205598 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363568502 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363948945 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364801485 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363099769 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363448787 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36308387 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363130569 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365106761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.363456261 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363926178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363257359 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362639211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363231829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363253592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363416706 seconds)
  done (took 39.546137691 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362709369 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363119723 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.362559459 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.363251539 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.36278143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.362609666 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.363229568 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.363579402 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364995379 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36255387 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.363000444 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.362546747 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363115588 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.363164488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362752343 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.363110039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36265796 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.36281603 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36305926 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362796862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.362715981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362503636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.363324204 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.36282114 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362852912 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.363599377 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362683417 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.363084538 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363525458 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.362687451 seconds)
  done (took 42.241454349 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.42700938 seconds)
    (2/2) benchmarking "in"...
    done (took 1.431493388 seconds)
  done (took 4.210517575 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361381959 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362134619 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.361073029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.36195527 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.361895274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.36095879 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.363404742 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361033166 seconds)
  done (took 12.243868438 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.363497382 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.362193707 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.362249275 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.3603513 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.360694029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.360961987 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368859951 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.365567653 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.362148154 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.361618944 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.363413602 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.363727013 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.363003249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361654009 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.361080987 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365543348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.362850152 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.36004164 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.359430678 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.358805138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.359815587 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362052802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364185964 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.361781371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.359668879 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.367744439 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366913778 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361963377 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358863713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.365798424 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.361081919 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.360460055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.358890038 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.359246211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358231163 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.359435783 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368079807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365195262 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.367166812 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363239487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358169189 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.358372918 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.361920933 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.361998815 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361822072 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361752693 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.358771008 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.358580659 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.358510464 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.362166505 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.361844461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35831933 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.359146987 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365063725 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.362741002 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368451531 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.364954438 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.361464151 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.363292698 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.368349798 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.378083356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.370585826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.365004875 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.361605403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367876771 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.370773486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368325821 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.364282348 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.35999792 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.358591663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366669768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380172822 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376708021 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.361634593 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359502914 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.359145472 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.359436344 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360322909 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367759197 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.367130357 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.361565322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35931151 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36756721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368781703 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.358979021 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.360368149 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.359266498 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.359098702 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.358973328 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367109199 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.367154347 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.358528896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.359005254 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.359741282 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.362148214 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.360083786 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.359456553 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361502176 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.359729236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.35885785 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35904952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361977799 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.36432131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361217233 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359649462 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.368197819 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.362092772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359380901 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.367990833 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362571211 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359165056 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.361142004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.364152555 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.359891925 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362059624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.363254482 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.361203271 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.360932635 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360926254 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.358926756 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367513592 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.374854274 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.361496696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.358547291 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.363841588 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.36508896 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359565261 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.362716464 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.361635741 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.358593168 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.358973424 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361711347 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.361012547 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.361281055 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360908563 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36120889 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360308194 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.358957817 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.359748967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.360607402 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.362461603 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.362957464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.363310963 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.363978972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.361726324 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.361325459 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.370098872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.363518911 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.361201352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.363006946 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.360310291 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360520845 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.361742651 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.360097739 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.359733898 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360221926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.359724881 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.360652407 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358633175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.358683404 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35911162 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.359330239 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36164326 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.361987528 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.362870322 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.361231592 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.359975561 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.358274455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.358868457 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.35920823 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.359324832 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.368565707 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.362366525 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.362441661 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.358163967 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.358994292 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.361555663 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361377136 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361395032 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359127646 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.361796664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.362601212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362748666 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.365908174 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.362367844 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360081009 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.358186174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.35926936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.359486876 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35967614 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.361573365 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.362957652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376266292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.377605681 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.359319486 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.358610615 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.358648979 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.360016872 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.363240034 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.361731375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.358745033 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359227267 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359141833 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36015623 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.360610424 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.36079615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.358569893 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.359481713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.360201545 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.359377796 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358484476 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.359568628 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363418892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.359950106 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358674839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359394275 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.358717006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.35932617 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.358211488 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.359474263 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.359388022 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.358971753 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.366163154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.361464562 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36089653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363548774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.362223159 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.359551665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.35905727 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361510919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.361978678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367402813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.36441541 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.360847646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368517442 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.363891224 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.35918422 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.362851359 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.360944999 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.358269283 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.36151042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.363201461 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.359009991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.361234154 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.358640765 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359097585 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360140623 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.36566425 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.362358184 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.359208903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.359523988 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.360400427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.359603731 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.361100333 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.36230493 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.361390093 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362712165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361312707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.359097632 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360756716 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.360420324 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.359076877 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.359481969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361483494 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.363892152 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.364949604 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.362612667 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.361854091 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360225791 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.359038481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.360089097 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.359977295 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.36098347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380354112 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.375863231 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373929759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.373121842 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.360659887 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365696109 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.363031944 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.360498391 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36051006 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36122466 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.361323533 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.360437038 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.360612126 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361042426 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.360154183 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361491195 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.361935494 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.359706185 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.359083125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.359202243 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.361002802 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.3599898 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.358709967 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.359144585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.359929235 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.362110328 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363133641 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.362285294 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.360420051 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368226625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364684496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.363723529 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.362140586 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.360387527 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.35960448 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.361096221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.361322972 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.361803608 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.362671317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.36170843 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.364569972 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.360429225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365915494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.362433365 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.362238003 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.362868022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.358795341 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.358253373 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.360100662 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.36021012 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367314214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.364576741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.360131751 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.361769617 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358902609 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.359366451 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.358932246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359095932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358879819 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.359148259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368635388 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.366345202 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.359748958 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362895767 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.361328884 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.359089656 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.358665838 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.358422428 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36519059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.362142221 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.360950475 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.362473708 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.361086884 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.359710404 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.359412117 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.359516006 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.360134339 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.35867603 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36742545 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.366589314 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361972459 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.359139258 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.368726093 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363484254 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367572878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.364619744 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.360193037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.361500916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.359129935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.360828413 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.360666615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.362047025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.363288964 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.359253364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.361184731 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.359801581 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.361384834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.362427237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361835394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.359137893 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368980953 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36950852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.359234463 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359768503 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.358665986 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.359014615 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.36022324 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.35947014 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.358367138 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.362656749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367254662 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362459699 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.360298847 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.361326568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360571456 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360917286 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.358583044 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.35907719 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.359425461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.359018969 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.36012867 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.36007735 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366663846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.361392906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.360272079 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362302542 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.360432233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.366598209 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.363656269 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.360555907 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361429187 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.360284819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.360524346 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.361259477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.360869187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361175475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360269009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.359314357 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362992285 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.362187171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.36336587 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.363942957 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360934411 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.360037447 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.360928073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360405875 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.35952912 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359980978 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.361560423 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361700172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.360542686 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.359631096 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.359821143 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.36255183 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360533005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362094474 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.363970859 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361019496 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.360375371 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.358844333 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358752703 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.360208111 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.36089292 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.368845227 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366365857 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.365715085 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.362589676 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360048465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.360148102 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363919951 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.364360209 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.36104212 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.361502316 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.361419685 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.362306188 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.361808517 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.361502147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360204012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.367201712 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363679287 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.360753639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369981772 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.367017765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363903491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.359071088 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.36096197 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.361595439 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.359947246 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.359562661 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.359323423 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368705839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.366541684 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360816814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362491628 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.362872773 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.359283296 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360501932 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359190509 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.360963665 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.361596952 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.360836644 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36263285 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358844635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.359106061 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.359297546 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.360897668 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.363305875 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.362760846 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.359908367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362138244 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.362450173 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.36175294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361356733 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359302524 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360925588 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.358866514 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.359879301 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360684918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.360604376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.363795551 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.361491594 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.3598924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.360317994 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359938258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362767391 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.365694254 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.363888003 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.358940652 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.360064205 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.361944849 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.364346824 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362818294 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.359730929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.360253782 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.363665504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.360815481 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360370806 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.359376649 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.362523212 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373655457 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.364873803 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36094547 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.362248261 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366476484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.363833109 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.359991973 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.359230667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.361733838 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.36483657 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.363558294 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.360108841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367608406 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365267098 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.360924623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.360095298 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.363079453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.363671452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.363819747 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362781572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.359791318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.363915797 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.372893658 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362980657 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368266846 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377527943 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.365184267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.363028109 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.361467399 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359282496 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.360591008 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.361580486 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.361348978 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.359066001 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359646611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.359958493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.3609131 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363148338 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.364631363 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.367456077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.363684238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.360232902 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.361956617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.360565126 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360142485 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360656129 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.359843856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359785542 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.35995876 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.360672536 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378007087 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.378091631 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.360559947 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.359836875 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.359251655 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.363442369 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.365381053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365961118 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.362574563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.360032758 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.360389499 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.36140889 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362257317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.360647465 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361074738 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.360830627 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361532813 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.362442128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.373371579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37240456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.3650226 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.364620064 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361296898 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.359504492 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362214524 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361650736 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360748353 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.362528177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.363026193 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362506538 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.360253331 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.359021653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.362568284 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.362454229 seconds)
  done (took 813.168596626 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361248227 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359145324 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359178819 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.359130294 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36039688 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35918522 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359256887 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359264302 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359429861 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360704332 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.359179431 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360111992 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.360864295 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.363071176 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360868682 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36059807 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358846137 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359214395 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359452263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359002371 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3606192 seconds)
  done (took 29.90674075 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.359190893 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.359266913 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35986498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.359896706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359016367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35954231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.359527589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358827263 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359507979 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359777292 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.359975268 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359072953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.359533249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.359476474 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359057856 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358886121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358874161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.359436884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.359372171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.359442889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359623841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35970122 seconds)
  done (took 31.254850495 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.359858345 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.361213786 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.360085853 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.360456052 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.359328768 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.359461444 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.359526322 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.359295065 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.35992897 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.360510196 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.360419735 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.360791174 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.363599761 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.363425635 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.362124643 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.361028882 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.360366231 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.36005581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360010261 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.359741762 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.366488609 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.364043155 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.360030753 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.359044681 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.361121317 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.359607001 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.359598566 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.359855122 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.360022714 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.360825402 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.35992154 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.361685112 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.363477659 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.362405461 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.360388005 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.360065481 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.360450756 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.359155266 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.359418186 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.367901136 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.369158613 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.360198212 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.374661916 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.371552866 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.359592232 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362686929 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.363854541 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.3593507 seconds)
  done (took 66.706910666 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359682326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.359383127 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.359252383 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.359746505 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.359590001 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.359284891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.358835306 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359453526 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360306125 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.35956638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.359245145 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.360000204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.359593782 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.359362251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.361654499 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.359489436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.359247934 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359845424 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.359507487 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.359739415 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.359212289 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.359363362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.359552724 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.359499412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.35920949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359950413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.359604682 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.359803576 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.36073691 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.359326579 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.35976779 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360281586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.35997504 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.359924208 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361568272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.359576458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.359845296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.360014141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.359569595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.359944233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.359835073 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359579544 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.360106048 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.360060675 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361756994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.360195068 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35947903 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.359340844 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.36008034 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.359567022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.361552452 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.360337467 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.360148176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.359915512 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.359674892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.359908081 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.359353561 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.359541542 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.359304826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.359760416 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.359383183 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.359760338 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.360246445 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.359206492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.359432555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.360235368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359428386 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.35950987 seconds)
  done (took 93.81638252 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359595448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.359913245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.359659588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.35974682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359626309 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.360146678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.359581311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.361067222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.359866697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.359524261 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360339816 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359797824 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360802929 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360462384 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359555511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360902878 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35963937 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.359816939 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360143664 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359705476 seconds)
  done (took 28.548149847 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.359635034 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.359521985 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359580855 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.360307254 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.359420784 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.360042255 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.359568438 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359702052 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359642286 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359680004 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36016352 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360043312 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359835018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360593363 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.360104138 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360465186 seconds)
  done (took 23.106236014 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.36024667 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362212492 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.360753137 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.360645225 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.359960982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.360332606 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.359895431 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.360259967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.361126725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.360015305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.359853886 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.360501697 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.35986477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.360277606 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.359783489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.360253225 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.359618427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.359657015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.360404109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.360502414 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.361004892 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.359889684 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.360579648 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.359600302 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.359981319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.359962351 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.359719633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.36074546 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.359574994 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.360089159 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.359593729 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.359492824 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.361556525 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.359550739 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.360577613 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.35991895 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359548771 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.359625641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.359654125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.36004785 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.359908176 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.360147671 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.359783778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.359575276 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.359779935 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.359813214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.360026188 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.360431877 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.35955194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.360635164 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.359508592 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.360705329 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.359952782 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.360006809 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.359545586 seconds)
  done (took 76.156438394 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359693153 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360010946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.359739076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.359537732 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.359880877 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.361707787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.359670196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.363709756 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359735433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.360062169 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36011409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361022896 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360141637 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.359991293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.360136811 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360430654 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.359724917 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360665366 seconds)
  done (took 25.834264752 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.361222963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.36069853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.360370763 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360262753 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.359941899 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.360824374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359903714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.360002219 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360221609 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.360292339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359914351 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.360325693 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359738669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.360102898 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360793301 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359864862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.360599164 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359995779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360382817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35978921 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.362111681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359934018 seconds)
  done (took 31.276325416 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.359993401 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.359229849 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.359580363 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.369490412 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.362179454 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.359440733 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.360302506 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.359858765 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.371710758 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.37746326 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.374223539 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.362842724 seconds)
  done (took 17.724916634 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359912254 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360049869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359630499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359961937 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359869526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359823948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360323236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35998632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360196847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361280886 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359927729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359907711 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360124777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360502097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360096695 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359917602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3617687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359929118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360091365 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360166855 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360031858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359687363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359981172 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360162712 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360092766 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360244143 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360112821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360867817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360207586 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360258186 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359897301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360210897 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360323955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361891705 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36046759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360310521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360626257 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359976763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360392907 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360423269 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359792069 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36057653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360378687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36003771 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360419121 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360196858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360154004 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362528531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360203612 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36115953 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360241255 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360539907 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360634225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360226534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360418525 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36220635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361819384 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360479453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360143892 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361214013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360330225 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359850114 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360394952 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361210829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359997914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360380241 seconds)
  done (took 91.136113788 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360105866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360088835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360158116 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361332598 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36032656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360563289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360426036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36046767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360187264 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360183345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360349066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361878825 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360542987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360439317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360265501 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360511758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360478555 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360314045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36034803 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360822996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360145529 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360720646 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360235353 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360053269 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3616189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360135141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360278494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359973242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360637911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360241271 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360270064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360120232 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360376134 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360090114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360695793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360346119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360574899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361002016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36094634 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360457508 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360711544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360510294 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362045572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360682301 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362108049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359921387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360519872 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36030433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360398482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360612645 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361418285 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361568845 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361450827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360468543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359928531 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360145146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360025583 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360776154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360154753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360503207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360492527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360544035 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36110769 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360207555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360367515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360554058 seconds)
  done (took 91.147420525 seconds)
done (took 1812.742556906 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.521891265 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.704324899 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.396613897 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.371208726 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.411988744 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.371795611 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.857712795 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.555766858 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.811277023 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.020007315 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.683151079 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.478375574 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.369102729 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.431268089 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.757024714 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.35831656 seconds)
  done (took 34.448321695 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.385243818 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.366484128 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.457893118 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.364192474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.385982974 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.516358905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.41057572 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.370672325 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.355095226 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.388206711 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.362078155 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.383315311 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.363105684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.246393333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.702920997 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517995593 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.579153105 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.362787695 seconds)
  done (took 30.867662027 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.706018386 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.594167955 seconds)
  done (took 5.649153918 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.379255893 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.365918164 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.365218783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.362297075 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.354808132 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.356202014 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.361116434 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.355152337 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.355391456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462561228 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.364407684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.373377251 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362831452 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.363505968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.362240505 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.403645882 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.494663746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.36161888 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.36064966 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368114393 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.361885335 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.453413239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.397618044 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.360806747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461801891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354795036 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.365161325 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.36986548 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.486171423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.361730552 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.36044014 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.365497081 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.365265188 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.116286441 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.822194213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.356492449 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.372026358 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.37312684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.360945937 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.508969055 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.362923389 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.368333866 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.363002116 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.801638781 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.483188841 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.470320813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.354640143 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.363415473 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.364664579 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.428261457 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.362570219 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.364342868 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.397853751 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.173044004 seconds)
  done (took 86.527600121 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.428826496 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.354678043 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.555348836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3613918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.355218218 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.354531399 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.354668723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578249718 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.421648119 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354867093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618200978 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833683012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.365267514 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.423161057 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.407829432 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.408341631 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.355329643 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.354810221 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.356775297 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.354957289 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832560687 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355855642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.362778753 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.551628743 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.389471532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.859880572 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.354525264 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.355616975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.356540815 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.354608903 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816728722 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.357247673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.415022511 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355386578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605126501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688947894 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660981751 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.354834955 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35727049 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.361337382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.361240188 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847079731 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685073177 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.361034277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.35573822 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848964893 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354704835 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.363387552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.365210782 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.618861785 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.355598557 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.354805289 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.355301765 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.356001533 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.354362826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.426716953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.431821935 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.859911922 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355960304 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.355043992 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.436857537 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357819149 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3650652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.364871395 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.358380489 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694009479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.262645718 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.35969935 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685247647 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807395636 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.355822516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878055409 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.355663461 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.370952512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.509733341 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354432286 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.355092993 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85973595 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368471378 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.354482619 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661410541 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.355113981 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619444698 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.356102004 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354600876 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850576128 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.366305481 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.414824225 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.354301118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.355617763 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.35482707 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.359925279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.606271289 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.408080446 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.356091863 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.354958928 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.391881247 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355275031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.356890997 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355323671 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881926044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.366008851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.354785147 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.359601503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355039759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.356400354 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.356653358 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.356467687 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634064434 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355619053 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.361553935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.359302114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.354970043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.35859578 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.551147566 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.36110254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60302258 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.359667561 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355114103 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.359820279 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.354778403 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367181434 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35612943 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.361288427 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.355367148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.674688049 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.356182629 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.354823386 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357298758 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.355158164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.356599629 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358844762 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.410214462 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.362571496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039109049 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.404885391 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.408710681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.354403803 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.365938484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36165784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.362032943 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.356258558 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717995274 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604539883 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.288030549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.357882449 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.355686077 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.10850413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412928287 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554082856 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.360436847 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354720841 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.658839252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.2648099 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.354752095 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.35487845 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.356791868 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.627838806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.355048233 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718851067 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834988627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357943815 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357421765 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.10083843 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.355745219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.356645069 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.357490076 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615458459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.356195243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.354527817 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.355426318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.355457229 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.355293794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.354989663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.359689277 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.35522955 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.354709588 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.903437101 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5610238 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.355272856 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359377032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.86052648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362302008 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35525989 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.35953904 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.356364747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.355311418 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40874131 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.356731694 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.408441551 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.357675894 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.369064076 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877053577 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355568222 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.356839755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.561445802 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954620308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.356431691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.355512604 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.355613995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.412635522 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887751359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.423040538 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.60323343 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.357365698 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.389781287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.355484211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.370241129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887735284 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358650868 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354378449 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035878494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.355337314 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.123648836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.355055927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354664123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948828132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.355617991 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.359144496 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.354856775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355466561 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658584012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.357346562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.393514864 seconds)
  done (took 507.203290944 seconds)
done (took 666.044680119 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.355886233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.356947721 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.356741241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.357490529 seconds)
  done (took 10.776234017 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.361954963 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.362193554 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.360868575 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.361086685 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.360885705 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.361423052 seconds)
  done (took 9.518238818 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.356619442 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.356262871 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.356797688 seconds)
  done (took 8.419268591 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.524450598 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.365322295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655503189 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.363745159 seconds)
  done (took 9.259423623 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.361596862 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3603019 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.360553246 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.360921897 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.362123594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.362461448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.361371591 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.360894594 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.362009446 seconds)
  done (took 13.601015319 seconds)
done (took 52.923982454 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.292238469 seconds)
    (2/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.070001783 seconds)
    (3/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.586470774 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.363735633 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.054523634 seconds)
    (6/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.771099354 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.357093161 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.59134211 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.356582715 seconds)
    (10/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.362402097 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.749579551 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.3575469 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.360267152 seconds)
    (14/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.613300561 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.357221326 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37287145 seconds)
    (17/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.365702278 seconds)
    (18/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.36861515 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.693614659 seconds)
    (20/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.757702669 seconds)
    (21/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.359369605 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.355472739 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.476009511 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.900654859 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.357121372 seconds)
    (26/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.596734785 seconds)
    (27/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.907920429 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.669549942 seconds)
    (29/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371391235 seconds)
    (30/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372125322 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.056801344 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.358199928 seconds)
    (33/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.589319205 seconds)
    (34/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.372216322 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.657138433 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.356718943 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.356031139 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.360760325 seconds)
    (39/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.357223898 seconds)
    (40/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.825296749 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.357419737 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.243171415 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.670996088 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.370846015 seconds)
    (45/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.931132645 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.447051127 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.363005274 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.356376145 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.818553687 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.570769021 seconds)
    (51/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.355665666 seconds)
    (52/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.483963458 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.356643997 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.374466933 seconds)
    (55/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.768997253 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.630688888 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.354420298 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.357375419 seconds)
    (59/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.374929851 seconds)
    (60/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.478797996 seconds)
    (61/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.621565418 seconds)
    (62/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.077221766 seconds)
    (63/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.370414546 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.12611059 seconds)
    (65/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.474861808 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.822838649 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450832749 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.041757571 seconds)
    (69/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.74132183 seconds)
    (70/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.357197994 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.35589435 seconds)
    (72/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.360419571 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.357621376 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.35988299 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.356073791 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.445288962 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.011671552 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.359322789 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.499426639 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.715747852 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.357738078 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.446046747 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.371524447 seconds)
    (84/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.355719776 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.835491545 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36986659 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.355837951 seconds)
    (88/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.355886078 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.70833918 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.371850066 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369626566 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713135269 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.06426511 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.37402648 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.288636146 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.357480332 seconds)
    (97/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.497126397 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.37058445 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.158424517 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.859545883 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.356049157 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.192844688 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127807992 seconds)
    (104/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.769920991 seconds)
    (105/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.804441544 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.371132604 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.356114128 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.367382482 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.30943749 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.357743956 seconds)
    (111/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.358409995 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.35864215 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.364249754 seconds)
    (114/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.357102543 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.357660451 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372376416 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.360537078 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.686318035 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.237885376 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.571366177 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.355901104 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.69596492 seconds)
    (123/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.340352893 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.359336159 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.359176205 seconds)
    (126/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.151991316 seconds)
    (127/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.370458463 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.071917014 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.359639654 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.10312816 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.357953767 seconds)
    (132/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.878550916 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.356493306 seconds)
    (134/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.052801693 seconds)
    (135/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.357534963 seconds)
    (136/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.593700312 seconds)
    (137/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.357532839 seconds)
    (138/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.048657413 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.333493416 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.45152057 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.3691318 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.510912154 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.077280572 seconds)
    (144/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.918280976 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.190368215 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.022505924 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.801045293 seconds)
    (148/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.641115451 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372637365 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356346253 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.355356696 seconds)
    (152/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.362262403 seconds)
    (153/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.856925816 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.695535587 seconds)
    (155/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.785620836 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.370821355 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.582108026 seconds)
    (158/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.357242614 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.696558073 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577456251 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.851722601 seconds)
    (162/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288094283 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371673987 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.462961844 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.698736599 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.598280256 seconds)
    (167/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.850894719 seconds)
    (168/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.285150933 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.633530912 seconds)
    (170/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.357640785 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.743061683 seconds)
    (172/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.195564284 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.79107787 seconds)
    (174/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.357734353 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.83527038 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.732261618 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.932316666 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.554881682 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.576634789 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.357870337 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.317618828 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.369112007 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.35614285 seconds)
    (184/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.367399066 seconds)
    (185/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.356148389 seconds)
    (186/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.627989727 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.898334318 seconds)
    (188/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.127770997 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.360215489 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.045554216 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.628288814 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370569068 seconds)
  done (took 383.164343786 seconds)
done (took 384.514334765 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385273468 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.006539052 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365042368 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364929757 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366320974 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357455646 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378271408 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36565457 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.369156351 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.369718238 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.357126922 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36569648 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.380085501 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366109318 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.381335735 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365406989 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364740578 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.364703866 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.370301201 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37511246 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36666516 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366425413 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.382805244 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365200225 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375187375 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37381413 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.371134989 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.357683661 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364998723 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.37013894 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357558369 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3731468 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372133444 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366334444 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366840948 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36523405 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366475648 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.00631985 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376026528 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365589709 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364007398 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371808734 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36990733 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.370694555 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366159556 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.383067116 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373572737 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.379778874 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.357650811 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359211062 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386978922 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369393903 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364179444 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358116518 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360376625 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382897217 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366063717 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385204953 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.363137977 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367029246 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381635059 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385843565 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.369387679 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373749998 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363015906 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381002961 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36534716 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375772399 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.363049448 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36704215 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366741472 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363858056 seconds)
done (took 109.23739441 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.362394964 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.3629835 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.493577478 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.362646483 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505346035 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.362802662 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.362582824 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371499334 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.364448139 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362280223 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.494809202 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362322652 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.494896275 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.507440346 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.494289314 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.362385064 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362384636 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.361827736 seconds)
  done (took 29.701215272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435479507 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433920934 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469282809 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.362465539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413216537 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.469543302 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362601896 seconds)
  done (took 11.296800576 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369187704 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.361960419 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.425338685 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425296511 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.3625641 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551028015 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375120499 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362168814 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425727604 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362304879 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362778231 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372034329 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.358778659 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.425017784 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.376027545 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481289398 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.365378671 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36302256 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532849922 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364140335 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372320499 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.420376676 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374847818 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.362367243 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368988355 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362383746 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.363028598 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362717985 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438889173 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.362535789 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.358633161 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362736396 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.363362205 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362111671 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362607003 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363482555 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362409519 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362763848 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.363126122 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362552353 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362467518 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386147345 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.362470305 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.362353455 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.362436544 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362287902 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420140281 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362191236 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.361985328 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364037289 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424120781 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371337436 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363097242 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362593225 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362159111 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362045212 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533667903 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4279571 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36225201 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425211737 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362475658 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362481392 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.362563755 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362358399 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436844296 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362250894 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425100898 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362114089 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.551686799 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385843434 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362928301 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367042739 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367009047 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.36353989 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.36906941 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.362232676 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365429346 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369795724 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36331479 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362651565 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.554860337 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.36301795 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.380567156 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371395423 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.362801618 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42604561 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362720469 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.362911547 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444876261 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481245022 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.4266261 seconds)
  done (took 131.652786327 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380444556 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36626052 seconds)
  done (took 4.096801542 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365670211 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363378231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362540532 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362644745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364008539 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362420098 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363304592 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366443218 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.364737954 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.362606167 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361998988 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363792756 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.362909117 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36361799 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363025545 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.362730433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363151718 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364463318 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362955704 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3634348 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.972033584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364289981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364631176 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36304121 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362819008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.362892532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388753078 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.362521486 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362736425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371214466 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.364767446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361599412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.363240744 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.366265883 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363826106 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362959485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363221465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363309363 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362691085 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361950185 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363368377 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363589141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362635444 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363370896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364230441 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363518111 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36394211 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388038471 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.364627886 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363083166 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363872427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362559052 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361812141 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363451879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364757603 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365156836 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.36424093 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363195104 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.363370612 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.362464624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363427882 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362172972 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364684316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364393758 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363226893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363390228 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363555242 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364180777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363647945 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363580031 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36337927 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362946193 seconds)
  done (took 100.190180939 seconds)
done (took 278.288586806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.265949219 seconds)
  done (took 4.615784097 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.729217758 seconds)
  done (took 4.080452511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.341172567 seconds)
  done (took 10.701906467 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.413578471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.380952768 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.369462825 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.367603582 seconds)
  done (took 10.882925625 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.023361792 seconds)
  done (took 4.374046508 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.356552965 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.363414946 seconds)
  done (took 6.072020769 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.59929227 seconds)
  done (took 3.949655174 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.590628252 seconds)
  done (took 3.950589953 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.37650077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.384944241 seconds)
  done (took 6.119905472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.356843871 seconds)
  done (took 3.707388185 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.021869666 seconds)
  done (took 9.373397589 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.380767103 seconds)
  done (took 3.732772429 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.41427337 seconds)
  done (took 3.764954562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.143639061 seconds)
  done (took 4.494207658 seconds)
done (took 81.171925283 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.356569207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.3578517 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.358393153 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.357419366 seconds)
  done (took 10.781130512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.429514286 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.421507759 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.438808963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415731405 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420860637 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42213855 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388687665 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388742102 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423466205 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418441219 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.425190683 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414025773 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431238948 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388681795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419724848 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.433589685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419293084 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427591247 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388507526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.414603838 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364246118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421795497 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415286656 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363684166 seconds)
  done (took 35.247189994 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.78258855 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.438637624 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544837167 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415621128 seconds)
  done (took 7.532087516 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.456666903 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.466538275 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.467954451 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.511304183 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.536949297 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.466741731 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.389788482 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.384566637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37080438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.466651716 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.543072064 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.362788758 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.640529382 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363163212 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.654038113 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362651948 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364500815 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.457705621 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.506751159 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523701696 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.363083162 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.452344836 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.465839555 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.363110848 seconds)
  done (took 36.292811961 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370997965 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.379678234 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.364762969 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.36456911 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.36526045 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.36583559 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.378686925 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.366013774 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370574868 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.363802989 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.363690612 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.364875455 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377742319 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363542411 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364504015 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370687524 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.36829884 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370921725 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.374204082 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.36537571 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36412619 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.371204873 seconds)
  done (took 31.461181458 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357922609 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358764878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708228101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.613792055 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.356516461 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.357859116 seconds)
  done (took 14.104233619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.416352318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.440820451 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364123301 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.633315579 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.694103656 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36400691 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364327794 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.470983514 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.693220502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.766911274 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.397303518 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.406141308 seconds)
  done (took 19.364321534 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.368316142 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.357737534 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.358740117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.373497983 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.404998202 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36618104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.370451029 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.357238208 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40605289 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.408785029 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.366106086 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406350912 seconds)
  done (took 21.895935602 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081021967 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248106948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368096153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485580611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357705929 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373655757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493114023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778006287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36320097 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633518454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369139536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978818879 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360338211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359296605 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36081413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357920292 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359888772 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080692248 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358312759 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365745109 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364131121 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358645347 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365915896 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535060342 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375777916 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358589032 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620359954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358182982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603205579 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571805081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574508305 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360981727 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635375934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716798669 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496794589 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533807745 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365124241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360379582 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.434388018 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.359556185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367381143 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36073585 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570931959 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359194849 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357865373 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362832205 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783687273 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.365965882 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.35818187 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359485998 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578223872 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970368849 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.364187446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357885346 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517059058 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358326362 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363317794 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551858202 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357828847 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369129209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361902402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.358909337 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361907659 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364633943 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958873156 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365319946 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.364496851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363360914 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363947169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36089285 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381692115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374859051 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378147991 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357946032 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032121679 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369451311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373187794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041434357 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364223603 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.358552865 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362523132 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360037705 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358002975 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.35722188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358059477 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139376427 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364215427 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.357807355 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374007166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778820196 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532847111 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191487161 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35964126 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361001427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.359966708 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360985295 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.36772912 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374778447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380621314 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.782061434 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365375864 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363349766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373476361 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568763004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359626644 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.357817511 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797817822 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358136406 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.383150297 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360994513 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527616175 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.870788535 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577705754 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361236753 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388905285 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358378586 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205509163 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358677942 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.364556657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368775148 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613131161 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.358177961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358791344 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481130096 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364042947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359461899 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357832675 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360692147 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358025332 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.598316685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359472492 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574253862 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.360941351 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358187087 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.359053131 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358100714 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.360890824 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366565725 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363505452 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633347892 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358240871 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37317714 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357890836 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.367924002 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359583605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.365069055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358518244 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360196764 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359553292 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576933918 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385846021 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502064607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385426278 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.364834902 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373653573 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365231636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363736018 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358452988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361006701 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370837192 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368065998 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365176466 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869946775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328545195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376327905 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24823683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.373768405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480054716 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366219624 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529405629 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366000983 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377323939 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.366187961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.358719214 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360544898 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574471238 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.359601719 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533893868 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.778144851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869556396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791697962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.359995792 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.358120724 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.358301136 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358194549 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359818896 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359434328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531702532 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58421516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367202386 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877168603 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361951272 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358068151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366903488 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576079434 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.367377528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359054044 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.360490221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358127509 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365611408 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575153597 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636547564 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.373652457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358711724 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920178548 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366674979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359142098 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358715465 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388962546 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359086661 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86190521 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365413444 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358578231 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579018181 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362999712 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.378261713 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.358239748 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369668704 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365667554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.372977695 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365942812 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.531342263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360513123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361608016 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358552216 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046608629 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835208289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369968989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.368106334 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359683097 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.783811563 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364699137 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358326204 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565710753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.781113316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358923964 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779589488 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.362464179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983334262 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576273327 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363305128 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364857598 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.359782636 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578097483 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569948643 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390351104 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366799053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363428997 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36816434 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862955974 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368232712 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537091239 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779723481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358576329 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361232759 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.42348134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37478488 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688832505 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35843623 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358933714 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363068785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370517825 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863188651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36259085 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359969385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958811769 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365224824 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.784520883 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358923294 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53367926 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576711619 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.645824763 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.360571228 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.36678802 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.372229215 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579390707 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36805074 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365445149 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828471578 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202909523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365635892 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359048203 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19842617 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363298562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599773416 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.368805637 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366971224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376663298 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358756914 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358138978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.359009005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379961566 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327890051 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942129913 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.362038079 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367660487 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370854114 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36471193 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36124706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375590505 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866362233 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367408626 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373239011 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38808346 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364150593 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358742854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.363267658 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361929636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377791145 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524906115 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369023462 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364439887 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.366867065 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507394257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569228787 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358834822 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359117525 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567498835 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.359186823 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.374238196 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06156117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360816919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368601684 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361213706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366804101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37687494 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482317737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530300314 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.576586837 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577982676 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688660808 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368956543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361712541 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.115392988 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088187427 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359183788 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371076363 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.361494517 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872304924 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043294718 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879639872 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580697199 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361576712 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369116934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358989175 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673121314 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358629051 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634652919 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364128121 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.361582492 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381547776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35851543 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362836303 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569603181 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632843188 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358891299 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366224683 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359478516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.3591977 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577851984 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.570286046 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081690978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041281299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359994598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359039132 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.786251711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635498641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358893238 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361728647 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358976573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.380060002 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360175867 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367354155 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359818062 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647031156 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573908622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72220348 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569659234 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.750665242 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234325233 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359670894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375006124 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359660672 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531108769 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863665189 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987452312 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368256962 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482886092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535021807 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.359751374 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670880598 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.367227284 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358856768 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359700259 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364009841 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.359005148 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569682026 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883373299 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364779012 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.366630093 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.3661405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364795181 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.52877262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363066363 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15486352 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369417008 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575868585 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382904299 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359492479 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869654066 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577873581 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360699529 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.364842992 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562352213 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362561657 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396902252 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.230557754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.358965475 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194748873 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.56885132 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196255762 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361869493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000376103 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875157457 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.36109794 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951369838 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359713721 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365021706 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635815929 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.368169043 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367143925 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647082402 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364337979 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358952084 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535569309 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.864020736 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988263778 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.381047864 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37082907 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.361898185 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358827832 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470906393 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359526331 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365111586 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.772823307 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359318691 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364708132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942425148 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.368325483 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367576361 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.359512346 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359416208 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.367550081 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.435723045 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.366639693 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369771405 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553462458 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859143397 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365562325 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982423466 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.69478952 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361702347 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36983129 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.363252198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.366629722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358786645 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359255501 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359015691 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369563782 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201157131 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.367894175 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.572173572 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365780803 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.569511567 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569479502 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359130284 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532456433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36084128 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37954751 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.358374883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360744921 seconds)
  done (took 1011.398195289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404326898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.388063876 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.373498168 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.435901195 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421930239 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.495283957 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423505768 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496681436 seconds)
  done (took 20.792138347 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.360897301 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.373969103 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.359789485 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.369875159 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.367467596 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.61647608 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.361567801 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.373951042 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.375076981 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.367139713 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.366735119 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.75688289 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.370679747 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.363626447 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.369038309 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.368673602 seconds)
  done (took 31.886924616 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.155484933 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.454582877 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.622803749 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.394606021 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.379283109 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.36103354 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.571845973 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.359562545 seconds)
  done (took 23.652408305 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.37666544 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376450078 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.376174161 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375629883 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.377115835 seconds)
  done (took 8.234554063 seconds)
done (took 1273.995884871 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.365368743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365236914 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367050565 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.367226775 seconds)
  done (took 6.816877715 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.358626965 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.360122832 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.360371203 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.78002487 seconds)
  done (took 10.211228633 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.695250481 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.853079917 seconds)
  done (took 4.90129694 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.749922321 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.415221477 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.548875886 seconds)
  done (took 6.066299658 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.768644073 seconds)
  done (took 3.122525142 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.837890351 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.794478179 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.523685163 seconds)
  done (took 6.509180784 seconds)
done (took 38.980236094 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361999171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.134102623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.517225198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.358420938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520305161 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.517905755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.605587811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359479006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.35854233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359788332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36819479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520490656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.58977781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.136037543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.589952246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.137355182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.520096188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358196351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36201429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359387222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.603020393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367729701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358128394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36249339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.520391796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504671404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358372498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.138358842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368071419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.368521865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504457858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.363593743 seconds)
  done (took 82.206539509 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358395965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358718052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359764608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366185996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358288866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.359913102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.360801888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359664107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.365104776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.35882696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.364522439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365820571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.359518632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.363749689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361845052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.366405704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.358464269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358561284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.360090053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.358702152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.359523979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358835661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358895469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358439817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366421436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.360119785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358665417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.358401553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360535548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.35849416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360425574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358738326 seconds)
  done (took 76.895016486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358350808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.359001784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.35885978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366848755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.358680036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.361092828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.366046365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361958029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358622195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.35856835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358594943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358485373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.372433991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.358902673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.361215664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.358701026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.368141784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360996944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358518192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359685826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.369225378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358729692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.358765503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.358620341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.359102148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359438409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.360430965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.359666662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366147845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367844234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.361837511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359242004 seconds)
  done (took 76.916725988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.592663067 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365206785 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.366771784 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359664109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.36705583 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.364886396 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.359750034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.596264191 seconds)
  done (took 14.725121146 seconds)
done (took 252.096646767 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.365244437 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.864795772 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386920353 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.367989102 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.389230376 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.389266492 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.530634844 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.387326035 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.513838437 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.363219263 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.385909276 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.362107304 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.119830086 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475722159 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.267631729 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.370108638 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.195036563 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.361218857 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.924353271 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.540780887 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.386838674 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.359054667 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273019892 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.199007801 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360447288 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.370889828 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.369444456 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.482682606 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.451506619 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.371426579 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.861897984 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.360379557 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.371389628 seconds)
  done (took 63.133635711 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.364244724 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.3651148 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.365384754 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.365361254 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.365816941 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.364972048 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.36445469 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.365278167 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.364915983 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.365192751 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.365590708 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.365774476 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.364936316 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.365227042 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.367422443 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.365025361 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.365608133 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.372523166 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.364382054 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.364750345 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.364095615 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.368556206 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.364964584 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.365100728 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.364527374 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.364814038 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.365014096 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.364545897 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.365204678 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.36492114 seconds)
  done (took 42.318654735 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364986614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.088372256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.366833513 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.369716673 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.699376533 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.695180002 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.219502364 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.581829605 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.370126336 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446541742 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.372442404 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.366155418 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365202969 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.08726657 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.398975515 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.006760671 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.436262994 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.753241063 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.517173897 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.363794285 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.506112215 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.491756844 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.369238417 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.373553098 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.397800174 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.371485506 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.780153237 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.370795831 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.372227745 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.372948128 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.370650098 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.683122363 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.359838097 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.360140081 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.780734591 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.365750413 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.981059005 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.366597961 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.559625462 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.371147943 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.365455504 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.371928969 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.359660006 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.37373762 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.774576004 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.368519454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.397986845 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.691203531 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.370107218 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.358595881 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.359466269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.772436509 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.370766262 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.359012716 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.371087162 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.767152669 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.370744984 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.221466097 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.69055949 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.371335443 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.370998404 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.359747733 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.366507898 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.43471523 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.370165899 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.359923043 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.360190122 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.371945804 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.377219934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.76708109 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.359189911 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.360348763 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.564904458 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.366580273 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.359308186 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.366804547 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.3721402 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.374511879 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.365098663 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.365653212 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.461824418 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.489102458 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.693321555 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.696682802 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.371581326 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495608555 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.369762525 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.684747614 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.365371082 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.369753197 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.368519705 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.364592374 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.181160952 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.368390795 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.36628851 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.366136634 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.508142663 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.785040197 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.374367649 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.373329452 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.517520514 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.368368089 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.360417325 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.692551706 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.367096284 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.358802869 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.361662867 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495394513 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.365287011 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.375145176 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.369154192 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.368928965 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.583371615 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.691681647 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.371689408 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.359868896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.726771589 seconds)
  done (took 198.698531723 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.366579578 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.359530017 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.360719594 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.35903212 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.3602911 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.361477975 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.360288265 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.359183067 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.359724117 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.35965698 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.359321127 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.360201971 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.359372386 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.360377968 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.360471586 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.359371318 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.370988158 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.364245136 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.360568371 seconds)
  done (took 44.215926075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.365401062 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.756739339 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.366675838 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366063686 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.408795706 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36591273 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.360118571 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.490902794 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.36706771 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.365604904 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.366397825 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.359482335 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.369865796 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.794232321 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.367594416 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.794553174 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367325087 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365953854 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.364752571 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.793853058 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.361277698 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.68550038 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.409905562 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.793398942 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.366753731 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.365508417 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.365778187 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.791286694 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.366958171 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.80135975 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.368586576 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.366793312 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409674786 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.409379089 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.359705166 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.687005467 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.388345632 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.47398658 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.366130993 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.367522782 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.787043205 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.367660458 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.36783605 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.371045928 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.761744847 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.762027912 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.36649976 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.365555304 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.785534883 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.759118411 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.758002701 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.489199402 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.366718121 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.364317065 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.683595572 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.366152254 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.788064137 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.368354976 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.36653437 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.365640917 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.365810768 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.369816356 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.492876155 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.786249629 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.686009491 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.369076952 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.360019452 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.360075264 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.366164167 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.411142313 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.366311832 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.359721996 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.367724859 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.409377956 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.678357701 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.361910548 seconds)
  done (took 121.740357776 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.457202541 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.810743976 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.361480784 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.360206773 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.473585624 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.458822521 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.567665368 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.427810058 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.417425481 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.45673625 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.475758813 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.804761156 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.359880905 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.44004487 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.967645288 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.600575316 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.180482778 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.361741691 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.498019997 seconds)
  done (took 34.83536233 seconds)
done (took 506.295855406 seconds)
SAVING RESULT...
DONE!
