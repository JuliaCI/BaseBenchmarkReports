cset: moving following pidspec: 28673
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.17133729 seconds)
loading group "string"... done (took 0.455475211 seconds)
loading group "linalg"... done (took 10.2536658 seconds)
loading group "parallel"... done (took 0.222232664 seconds)
loading group "find"... done (took 1.885354154 seconds)
loading group "tuple"... done (took 1.984770679 seconds)
loading group "dates"... done (took 1.333511509 seconds)
loading group "micro"... done (took 0.45221466 seconds)
loading group "io"... done (took 0.438864141 seconds)
loading group "scalar"... done (took 45.595294816 seconds)
loading group "sparse"... done (took 13.134390877 seconds)
loading group "broadcast"... done (took 1.095764191 seconds)
loading group "union"... done (took 8.441004144 seconds)
loading group "simd"... done (took 2.15524289 seconds)
loading group "random"... done (took 8.454285361 seconds)
loading group "problem"... done (took 2.402380463 seconds)
loading group "array"... done (took 25.383285615 seconds)
loading group "misc"... done (took 0.941655621 seconds)
loading group "sort"... done (took 3.638766688 seconds)
loading group "collection"... done (took 15.008005562 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.596451352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.109762167 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.174027812 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.176873571 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240117339 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136522822 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135223853 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097440258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.732749476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17693422 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124045244 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.356425495 seconds)
done (took 5.910349801 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.275379624 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.083243602 seconds)
    (2/2) benchmarking "String"...
    done (took 0.144228048 seconds)
  done (took 1.054417523 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.088421804 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080234781 seconds)
  done (took 0.998845832 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.081130192 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.327698587 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082075068 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.479049012 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.138643602 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082744605 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083356945 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082048449 seconds)
  done (took 2.104902162 seconds)
done (took 5.345243722 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.385498876 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878488047 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.47069819 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143198643 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.283237284 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.231186686 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.201708505 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.215743793 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.086778283 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084830952 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171441936 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.45434643 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.299696109 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.797302891 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099075112 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.101157611 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132822534 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777343793 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083965308 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133235975 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.367381387 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119719154 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105282357 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14715259 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190403633 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108225607 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16224141 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083516613 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682714391 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12317304 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.206456728 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089746343 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156046127 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.127722337 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177179506 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114961978 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679958685 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193178111 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.142625955 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.086202148 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.693881075 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.107031637 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.169386203 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.095201988 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085476628 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168397847 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120778736 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083704664 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109370193 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08388053 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163993628 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.502699405 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113472891 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.188575691 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0987712 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699868084 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104472047 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.254442978 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133062091 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110646254 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082877419 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.083505021 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.149024198 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088408556 seconds)
  done (took 19.446713604 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143370281 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136385543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084903237 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130287237 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10149042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084054074 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083767502 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084845842 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091231941 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144825217 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090286056 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153578498 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082623587 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083569144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148011018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200835793 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08909541 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094828701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085499183 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102585192 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113471486 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088474361 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083056965 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083578774 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.139681261 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.217605586 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116503574 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116586584 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083813722 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098304265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135834073 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133040777 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.085965897 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08251477 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122825748 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126762198 seconds)
  done (took 4.896270311 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19701434 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106841139 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16723943 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.139557261 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11539578 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152720371 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151313977 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229867701 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.682641415 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.163067036 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165574496 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13374738 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101373758 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09854415 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087533576 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083530397 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.550200292 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138375028 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110577405 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169370095 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084292244 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086085221 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381916662 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084498505 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084762738 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083798536 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085569845 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160783504 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082903931 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.587589744 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084417611 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081898988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146907104 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201173834 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088991227 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121456181 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097873052 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084910646 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.085614212 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085201034 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083862193 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092291881 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119841442 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.142407252 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084302595 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084647135 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185940147 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086694004 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091853115 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.823635719 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.172966034 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.187264252 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083035622 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.166782338 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103334479 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083776124 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08509561 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.161054997 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156475466 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09053438 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083503212 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085507535 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084383132 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083422429 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082712639 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083544996 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.192901678 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087444674 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.103285014 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085530676 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085510807 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.524120805 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091724873 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088336603 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103631588 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083257622 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083351579 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085011407 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085319662 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084716007 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10491568 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105165931 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085889132 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145267452 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085434242 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102894479 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111989184 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086219347 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085756569 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128870433 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083643044 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083614567 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154772014 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083627965 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083552225 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103580938 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101649105 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132941055 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087978034 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.179896781 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083311221 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084089958 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104185485 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089161985 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129092062 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084940242 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084361008 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088810374 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08504027 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085238981 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146319236 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08489094 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086063408 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084975766 seconds)
  done (took 21.357924582 seconds)
done (took 46.53401253 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.356484076 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083646095 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084097356 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084001897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084503271 seconds)
  done (took 1.598904855 seconds)
done (took 2.47960079 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1828596 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101769229 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097052746 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.099205272 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.106633904 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101052097 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08436244 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098429176 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121525964 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096519354 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100220373 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.08577625 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098753778 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100328812 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098820484 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083115025 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102041406 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099729172 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115026686 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.08367273 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083468151 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099783988 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085301435 seconds)
  done (took 3.232571779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094420528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101077126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093445973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094762889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084145073 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094065502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093929033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101460214 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094213633 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090346663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082851969 seconds)
  done (took 1.918248688 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094746361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097597816 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086832876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095124142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085525003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096068061 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095178933 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098946276 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094011234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09077984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082277485 seconds)
  done (took 1.910321642 seconds)
done (took 7.947801577 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.44393773 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.675442338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.150651499 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204077045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.253088567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.181081901 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281730929 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164391577 seconds)
  done (took 4.356740054 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.185109687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087435421 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090364026 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089160815 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088184146 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088682372 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085652565 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087443262 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087932632 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087836828 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090066755 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105878252 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085779977 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085975254 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085376483 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086254396 seconds)
  done (took 2.458258105 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137298527 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120693867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088949675 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089301792 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089850238 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092674233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092734768 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088569349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086650992 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087565613 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091467728 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107380117 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08859763 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086604128 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089775688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108379455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087479167 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089605043 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106852963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090474729 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090063997 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087645449 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088066999 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088271219 seconds)
  done (took 3.257320364 seconds)
done (took 10.966581675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101825486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084859325 seconds)
  done (took 1.081796594 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.159549984 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15494075 seconds)
  done (took 1.217086311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089813079 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082717906 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08763609 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086559222 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084004085 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083475038 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086964231 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083951817 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083949686 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08424006 seconds)
  done (took 1.760573499 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086079207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085024233 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0874985 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.152263817 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086589326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083803914 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085129794 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083809044 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08483397 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083310013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084753808 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110460689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084809127 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092131459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08587362 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086488073 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085819609 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085263366 seconds)
  done (took 2.540715267 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084463645 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083699444 seconds)
  done (took 1.07693503 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082679271 seconds)
    (2/7) benchmarking "second"...
    done (took 0.082463729 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086133317 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083635818 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083577424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083920624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083816076 seconds)
  done (took 1.493267218 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.44650193 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.205878607 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294268379 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103167389 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0856287 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304116276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084355094 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083740029 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089359056 seconds)
  done (took 2.640924161 seconds)
done (took 12.718006514 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094329069 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.160312056 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.484967312 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104647718 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084105442 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148696859 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.187311948 seconds)
done (took 2.182564221 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.247531228 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139110936 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.107717689 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084610361 seconds)
  done (took 1.486283085 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086298641 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092212314 seconds)
  done (took 1.094828808 seconds)
done (took 3.500641999 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083853486 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119425838 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084587524 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084228707 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084111369 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083708396 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.084494552 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084203335 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084646596 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084485708 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086649253 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08442409 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084119848 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103653738 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084867397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085478933 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083831925 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084434771 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0846699 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084394168 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084906463 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086545201 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084529772 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083768547 seconds)
  done (took 3.034358863 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083843349 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083954504 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082937856 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084649705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083321437 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.082957337 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082559708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083177438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085551587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084181605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084062942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084425064 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084081333 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083887857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101171438 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085671825 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084278718 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084689325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08471325 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085949761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08354852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084607219 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083629047 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083618059 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083688359 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083870129 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084152023 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083406749 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083735813 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102041917 seconds)
  done (took 3.479632716 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091280311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081283671 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084218064 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08766662 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084210969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084057257 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081677196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085090438 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084897084 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084172938 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084511947 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086717524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084529312 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085055406 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102184381 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086081435 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086730384 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086324394 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084711114 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08573762 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085841831 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08429712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086560518 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084582789 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084153547 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082309465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084619593 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083760765 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101912055 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086022614 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0856502 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085310014 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085634005 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09018508 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086193801 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084648007 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086069809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082231427 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085150523 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081788969 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081643245 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084252585 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084559425 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103915185 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088413746 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085157626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084775157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085283744 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085429111 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085889248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084579938 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084518206 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086175389 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085319517 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085756926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084491109 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085803333 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100136953 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08603972 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085217118 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086027397 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082904199 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086107424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084598078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088418956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086375745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087147477 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085596106 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084213532 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085419667 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086645125 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10652729 seconds)
  done (took 7.150330035 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083667098 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084575176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085024821 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08473957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085319068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08625903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084662537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084451309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084954927 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084756988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08444124 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084530444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084957104 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085203608 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103049146 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085870938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08701262 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084582364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084927786 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08500261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085021253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085034043 seconds)
  done (took 2.815093807 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086486755 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088297314 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.085674918 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087699852 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089366234 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089246855 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0851708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087286621 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084789944 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08552726 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085589695 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08648629 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087755715 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085412275 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104011181 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087873404 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08775516 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087709095 seconds)
  done (took 2.514272784 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084638904 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084698668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084846215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08506964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084880052 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084493737 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085181555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084896082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084963393 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087320754 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085015587 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084682685 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084337938 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08550196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103144778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085993281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084903989 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085419166 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086441622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084921039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085672248 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08671582 seconds)
  done (took 2.827746986 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085206916 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08456783 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086353368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085887038 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085494985 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085297169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085062831 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085522891 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088878999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085020218 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087280954 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085303767 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089340685 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085188998 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104201518 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08606782 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085648479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086815907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085688064 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086073779 seconds)
  done (took 2.674733284 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14302116 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088224298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086450738 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086269882 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086304411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086391835 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087404715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087690762 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087173896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087522339 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087237038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087079707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108321954 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088383857 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088231867 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087457166 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087566373 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087947466 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087553837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086143887 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086481749 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086916319 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086837172 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088404875 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086184506 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086245557 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104746143 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08711804 seconds)
  done (took 3.473076384 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085107644 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084913871 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084605505 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.084280705 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084557021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083951608 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08590058 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.084699391 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0836919 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083746288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083794804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083842561 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083840667 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084084604 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101137522 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08511592 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084577867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.086610579 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084874511 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084671825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083937355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085172016 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084237295 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084483535 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083903258 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084210697 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08361697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083622505 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086120925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101606405 seconds)
  done (took 3.510273538 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089073625 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087545043 seconds)
  done (took 1.118688662 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085596988 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085040345 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084439759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085114266 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084778511 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084131756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084542336 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086526077 seconds)
  done (took 1.621753356 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144628699 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159280513 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086256903 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.092721471 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158959517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156881013 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119086361 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095811286 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089518789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086962855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.143793285 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08626908 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089883364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089031792 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089141668 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11024149 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085805811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090142737 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087108505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086090245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088197371 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092147859 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091171981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09034924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089313181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105309613 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093086088 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089973147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090176856 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110533546 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089230896 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087339824 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089290717 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085928067 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084579785 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161484464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093367531 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08954239 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099203349 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086409965 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089621159 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.104423914 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090106091 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091884861 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091409222 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087377127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08683722 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085673829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08599941 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08778844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08506436 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087732941 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084915627 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090371693 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094469343 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112228084 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086143807 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088829596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08726449 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091432168 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089459074 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089740963 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092931531 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087948873 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092316478 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093407952 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090554493 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087083226 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088215324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104419072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093989704 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113797859 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09217478 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086528487 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086484928 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084902106 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091001209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086769783 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088380852 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0882855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088190354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089133516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111218708 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088325334 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089416022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089180893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086712595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089485166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08695728 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095843979 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088194677 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086600501 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088441085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092199529 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089390333 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088230224 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106683866 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091618127 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089448444 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088530709 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089812301 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091078263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094230023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089229712 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089509118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092237346 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157829457 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092922593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.114676711 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089886016 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08651295 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090878106 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089759634 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085688028 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088618074 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085901882 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085773689 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088469758 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085310724 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086235651 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091231076 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092692606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104573485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085270508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089676001 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087416382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086729567 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088703814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086370872 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085873022 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08530372 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091987946 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089952007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091666853 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088803888 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092111733 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106120569 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086156793 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087467594 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092116067 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090887284 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091411579 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093889639 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091702476 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089213678 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091197371 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090084283 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088745618 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091319124 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087810281 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08767041 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107320953 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090495571 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087117646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090881286 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087946685 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089385217 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086932561 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086398298 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087572996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086666246 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086629242 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086653283 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088013622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092725824 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107958586 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089458991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087189029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090666067 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089426982 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08928261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08954781 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092136487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08901363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088192328 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089345464 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095276025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096515877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093643713 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108429501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09208393 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093910514 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089555073 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093921087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087982841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087295291 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088187897 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093689599 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091158385 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090086405 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090655254 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089001837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093908836 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110768469 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08742563 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085788244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087562242 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088019679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092686768 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087945142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08678192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086282664 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089928477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08748103 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089725616 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086544722 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087180346 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106069513 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.090034796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091782174 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087881621 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09089418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089558048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085869224 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08743813 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087184503 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089867326 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085763243 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08698091 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089401288 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088932373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10569554 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095292576 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.085430771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092006598 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092725944 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089481287 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088364355 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086342066 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088576075 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088903827 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091506197 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088541592 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090079899 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091182463 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087130833 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106706199 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091510263 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087155155 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.086262998 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088948063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088299298 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.091491502 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087741776 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087297695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091710812 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090072578 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093525641 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088135815 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092540369 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10827012 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087356238 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.088464989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093887416 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093114147 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08879787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091548193 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090460298 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089581136 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092491988 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089102459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089959827 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090465921 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09208661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109696964 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09277613 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089959466 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08906382 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090189531 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088156146 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092673768 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090021813 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092994931 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091782695 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089887069 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090890364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092137912 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089660095 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089091243 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106271096 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089030919 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090178219 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090637927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089386035 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090381516 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08636284 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092677391 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086981865 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09265794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089032945 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086209195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088081109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090173149 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106642051 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087455431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087887043 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089702209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090280322 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090705176 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08941637 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087691416 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090545997 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090043363 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090427902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090172898 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09161742 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08939578 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107018508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090493342 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087824703 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091762908 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08905319 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09202619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092066227 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090908736 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093608747 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089999412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092868919 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091527383 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090338895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090165554 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108409257 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089086205 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092752462 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08994536 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093501481 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089801459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090498042 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089820689 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088821387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091894224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092762759 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090362168 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09145345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089539301 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111721446 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089295356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086564192 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087570371 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086818623 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088026503 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092406299 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089397341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092486947 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087984542 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089900944 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.088975025 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089872493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089633363 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110423388 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087464909 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091686556 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09366394 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091793681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090379285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094177564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090411395 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092546878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09100436 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089121439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089874198 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088716131 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089692222 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090879224 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114392346 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09100795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090865168 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093098446 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089847421 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089688646 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091796079 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090717768 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092036082 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09540065 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090349534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090780439 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088062766 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086147291 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10821868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089811817 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088382555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091602399 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093422753 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093885621 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092054344 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093160266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092253388 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094538838 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089670867 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085936147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087314717 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087417569 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106321236 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088911528 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089885771 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09338465 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086250217 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090524035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087554581 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087495714 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091875116 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088253214 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087101046 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089001547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090491088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090235534 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110718278 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0889863 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093220771 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087997374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08987802 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088898998 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0885015 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089212824 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091038492 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088585739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090125542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088677785 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088953941 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090507592 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087799315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115694496 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088427949 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08861938 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088514529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086931235 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087823144 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088994195 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089729011 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090856015 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093192751 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086723269 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087263027 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087719942 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088314791 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109084818 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09220803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089521736 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090748011 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088161325 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088716356 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093549967 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089419687 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091244594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089098944 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091792907 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087856298 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09093553 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089298764 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110661964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090298109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093176334 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093398522 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089821675 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090119018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091023154 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088802424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090326468 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090878447 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09012957 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086468702 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088325865 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088687564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094198401 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108733045 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089466734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090188784 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090451736 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089998546 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08889545 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088312815 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090950214 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088044399 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092600571 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090796475 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088098937 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086747124 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0885348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10930649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091432408 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089481182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.087557571 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090279386 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090845788 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087871573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091121381 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088012941 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08660156 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086957194 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088451042 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088544644 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090892126 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108477218 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089421716 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08928558 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087604001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092351575 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091671899 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090328719 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087175115 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087815164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091136191 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090754688 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092558435 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091240363 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091589208 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094782498 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11170894 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087656727 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090072904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087388987 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090540544 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090243976 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088887132 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09355423 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094751273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095945032 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090631343 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091674868 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091025302 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090871969 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113555705 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088866316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090265498 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093024375 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092886227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089426641 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089944066 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090521838 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091243834 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09032764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089803897 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088597537 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091017338 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092816992 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108193285 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093808683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091437536 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088221959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088353482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088903698 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092861063 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088244933 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088590666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091943533 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091234349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089731562 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09157035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09149614 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112385177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091798969 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092623671 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.089830208 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089293035 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089892504 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.088847203 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089870225 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09249209 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091664818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089201781 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088455527 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091612646 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092745694 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092662892 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110503759 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090333085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088162802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090691967 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091918239 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091777056 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087615773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088980669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089121558 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091865743 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092087904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.091903886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093417602 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093470665 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112992058 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088667128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092461547 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090138718 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094122151 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090106835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089489402 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092219119 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093554061 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09280993 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09070675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092785392 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092932082 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088712251 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090788187 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107136768 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09160454 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088825977 seconds)
  done (took 55.857304458 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104016161 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088266263 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087870734 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088427687 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088041194 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087610388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08744908 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08732315 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087888453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087734098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088351302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089317052 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088292166 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087863302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107429157 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087731146 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087905984 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087396295 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087463747 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087137735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087554225 seconds)
  done (took 2.891150626 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088030092 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090463161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087927398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087934665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08811457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087199699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087567962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087543746 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088447419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088265953 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088058313 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087842298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090259244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087541543 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106683783 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087931518 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088257883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089721619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087505046 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0875084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087026787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087542371 seconds)
  done (took 2.967303139 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089380386 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091923417 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089427037 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087955457 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089176244 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.087820558 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088621445 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087524014 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090337626 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090036645 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090055212 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090243112 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.091437277 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088599633 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108783907 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088336373 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091588166 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089715358 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090271333 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.0881231 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089145577 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.088802998 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08834979 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092271413 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089830602 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089584999 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088322396 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088973042 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109914306 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090260706 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088841241 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089462549 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089797796 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090382332 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092927834 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089226401 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088909633 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.0887364 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087444189 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089338031 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.088048983 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089667659 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109366732 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088478844 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088804003 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09169191 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.090296221 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089008442 seconds)
  done (took 5.367692162 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088551089 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.122226507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088445595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122034491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08796745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088106478 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087935767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12145489 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089849696 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087964097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087990825 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.088627071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110240551 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088911593 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089687722 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087991938 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088181751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088544962 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087921415 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090835899 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088096789 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087544208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087796314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087699249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088496055 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088021403 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088183013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109959622 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088626063 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088854925 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090236757 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088618462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088188855 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088872423 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088230637 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087840085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088184644 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088016994 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087912886 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088520183 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087703009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111541746 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089234504 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088958458 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089267611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.08864917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088626328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088702127 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.088723444 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088853141 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089454201 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.089238256 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090032389 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.115355889 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088762137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088875408 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109127768 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088748515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090273868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.088640881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088795445 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088312595 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088294622 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08860833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090275806 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089704304 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089140094 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088517353 seconds)
  done (took 7.360836973 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089447879 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088638673 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089361179 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089109422 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088959245 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089089249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088415995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.089853682 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088428447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088178549 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088300083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088258389 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088557486 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087835243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109333397 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089082739 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08858311 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088817416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090583451 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088632324 seconds)
  done (took 2.820514759 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089758532 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089417615 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089355836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089221451 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08947593 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089365649 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088874664 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089417873 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089593445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090782517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089185158 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088803305 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089100302 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089006792 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108912936 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090213133 seconds)
  done (took 2.474872175 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090900994 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090458319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168851646 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088934786 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090204985 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091366822 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088271358 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.088637565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089424094 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096008848 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088562432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109587734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102062342 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090038254 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.088665387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090355979 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08910512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089152469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088798219 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.16877569 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.088806393 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088629506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088899067 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113222185 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090547593 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089089246 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091475909 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088620317 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092253278 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089125388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089404384 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089035681 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089337777 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088666618 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089942536 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090586456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088608623 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090239182 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11075631 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089026904 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089004411 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089496283 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089106009 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088464138 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089064505 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088423739 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08897664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088702785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090523412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089172747 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088831771 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089422981 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110508543 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.08922914 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089084027 seconds)
  done (took 6.208773958 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090181559 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089641228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091174362 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089792079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091810431 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089603382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08927092 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093451144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089265543 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09004218 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089468915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093070383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089171255 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089916201 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109655444 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092040684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08962999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089695315 seconds)
  done (took 2.678517641 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089578686 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089077471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088935172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089161321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089224301 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088233542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089197764 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088701502 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090489612 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089676924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088982832 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088971832 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089147276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089143684 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108833374 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089156377 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089644524 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089535267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089178778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092986977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089040608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089244889 seconds)
  done (took 3.019732607 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1007295 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.158628115 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100877083 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.164700338 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.091415767 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091469022 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098005649 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091240565 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127468903 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.092203624 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09207193 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09184043 seconds)
  done (took 2.336009743 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09041265 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090487015 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089964255 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089949797 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090074111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089587711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090666958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091678541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089588637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090323701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089694789 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08942568 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089409972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089589782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110528761 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089454261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090377542 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09013491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091832583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089788702 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089618786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089398953 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090125012 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089964052 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09004652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090213337 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089337186 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089508911 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089650438 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113224749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090387224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089874781 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089910859 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090502879 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089984549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090102406 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090041263 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0900315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089759386 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091649532 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091746506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089718961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089725578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110261249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090597737 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08996606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090513433 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09020859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090367242 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090113285 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089582973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092799384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090210981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089672644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09019091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090001337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090527091 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090109475 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110899279 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090534782 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090724704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090399343 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091115639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092736888 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090189599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090056263 seconds)
  done (took 7.08030153 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091639189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090539679 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090391582 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090167554 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090005169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090969904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090263908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090151958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092719673 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090039877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08976368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089893823 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089732491 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090268618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110338622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090564388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090801674 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090857786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090178692 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092319288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090955719 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090365612 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089755087 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090370906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090316854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090091259 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091669905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090208604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089943822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111527719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092594406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090795155 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091047425 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090445576 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090958222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089796283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090566617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090319362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090676568 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090103293 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08980338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093459564 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090542244 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111584178 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091183291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09090124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090536893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091559079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090453854 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090503133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091410803 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090497897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094248857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090356669 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091033248 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090897436 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090451011 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091279445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112140332 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09145648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091179704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090825818 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091127648 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093204263 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091070071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091382154 seconds)
  done (took 7.123571117 seconds)
done (took 143.323335193 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164238237 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19381766 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.24188715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.15107379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.139503496 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12120482 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091242656 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.092721425 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.093465383 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.110036258 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09083406 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.091152023 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.141902732 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.211238821 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091948282 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.124675457 seconds)
  done (took 3.187828069 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181410427 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.263798755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10914328 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.095416912 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095580798 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09091971 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091022747 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.142773689 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094662018 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092095872 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091221978 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091210063 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091272056 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09062741 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093170094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090770275 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109183947 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091558453 seconds)
  done (took 3.057017613 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108672911 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.130782995 seconds)
  done (took 1.294527046 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114822874 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.12590425 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264677786 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119824692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10658116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098445117 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119409669 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12148368 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.166882761 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.091291835 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.091659219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.092558359 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108767323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090787522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099051633 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09256049 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111862152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089952964 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09114635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090539758 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133141111 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092411411 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.090986186 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091057349 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.157303917 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091472211 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092420971 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.093405456 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090879437 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.090599141 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09159202 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091768675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091014226 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11247739 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093985815 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093139242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09280103 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091833874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092864451 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091331464 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091694359 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091530502 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093829654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092851789 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.092167602 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092450501 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09194325 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113214573 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091521653 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096107493 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091721868 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092023537 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091300058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093522579 seconds)
  done (took 6.619656661 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.495836953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126064125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092714614 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.55095125 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095187607 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093980496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.482813954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114366566 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.19908903 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.516799224 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106916077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092149896 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106197163 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.199968946 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149648914 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224878027 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.413161519 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097536732 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118282567 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104018835 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091432472 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093290678 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09374798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.691763987 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091173475 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093093896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091260518 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091838771 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.12460417 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094387344 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091544958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108458796 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.211248526 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.101779251 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091936304 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092894386 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092539395 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.10216698 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176283898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.103201464 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169100802 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09202508 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113292705 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092181495 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094183421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091816514 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093629872 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107130404 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.104431963 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091227469 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09426686 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092515134 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091333453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093509589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.093083947 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226299446 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.248362452 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093586324 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093329033 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094867007 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175927795 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099436941 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10661015 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107974503 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.101724398 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092797345 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046827896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103016373 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092926735 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091049268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112894634 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092314401 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094490042 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152262504 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670908477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092161511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092671054 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092750305 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166616049 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093841652 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092762476 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101070734 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091972152 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094801952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113124338 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092288715 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.106274406 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.190526708 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091629943 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091806415 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092548518 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101940675 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092594918 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188698714 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095465892 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094025829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.180059118 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093096669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.115561363 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104129338 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091907491 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105310177 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092716389 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095599887 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092071054 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096463392 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.100891903 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098144937 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09162679 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091627295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.103665662 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097865687 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11322484 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.107372633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.693835341 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103849837 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094803819 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098679499 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09275021 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.103642793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092772277 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178050647 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093442043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101723213 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09225636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09183972 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114905466 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.095029102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098185451 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093139565 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092119049 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096122566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198998458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101556298 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092761015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.173880751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174535539 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092539245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108155436 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094584846 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106553728 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117400537 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092429176 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092893078 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.045697536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096025841 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093592957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092203572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174573214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093461463 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100902974 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09385483 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092029373 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047923151 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097057394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.114334151 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098846753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092807667 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092971733 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092005927 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092403224 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.096118218 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105748259 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091817121 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092638186 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092795355 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.101829431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092918356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093410772 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115032942 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094416226 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09510777 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094795699 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099312417 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106210759 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.09421541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.094740516 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867016879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0931162 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093925023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105994344 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093386782 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194530867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116022485 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10487834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.10170988 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094307389 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225905907 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102851539 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174327609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097489228 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106472096 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092569335 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092144864 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.095576156 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093040152 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091849654 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.093852681 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114195578 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093088819 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154114839 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093806296 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200208361 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092591421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.107064408 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095355939 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092401056 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195564466 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092995246 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096789122 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093428415 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091678059 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115682808 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.868796016 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094138471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096399305 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094777656 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094245832 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.10319068 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092490854 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092475242 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092440881 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095330215 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.179073519 seconds)
  done (took 40.540065004 seconds)
done (took 55.748533676 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170643498 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.145963202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185570903 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114477952 seconds)
  done (took 1.77072029 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178676881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110650355 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.172845449 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092298298 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.175260777 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.114352144 seconds)
  done (took 1.930814793 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.122347495 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112742662 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108751659 seconds)
  done (took 1.42287475 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.163017649 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.155761799 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416251142 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.340538741 seconds)
  done (took 2.255449806 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216854736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094671268 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094512555 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.17384414 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177945753 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.13014203 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096623294 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104020294 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099235958 seconds)
  done (took 2.315450997 seconds)
done (took 10.77852643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.507040271 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.310712782 seconds)
    (3/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16946922 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.208789185 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.263673794 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.202948605 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107108584 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.191409943 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097431059 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.201563347 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095434625 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.222991964 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228140276 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.173118693 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.299575898 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.24094063 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.175493777 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122356608 seconds)
    (19/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.202654461 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112637544 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.193806748 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114167811 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.177715528 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.132875133 seconds)
    (25/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.145321521 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.169459917 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095203506 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092603884 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096750277 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104201013 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11232476 seconds)
    (32/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.143472241 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116072513 seconds)
    (34/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097968949 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.120799251 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213328488 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.152515502 seconds)
    (38/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.143959043 seconds)
    (39/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.18632086 seconds)
    (40/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.13814668 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.203334177 seconds)
    (42/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.175873176 seconds)
    (43/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146987322 seconds)
    (44/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.168694952 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.094851381 seconds)
    (46/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102277265 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.237529202 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094521138 seconds)
    (49/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.14373941 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095167982 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095549491 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11020188 seconds)
    (53/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.094708107 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096487376 seconds)
    (55/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092007758 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09176074 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09968009 seconds)
    (58/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.129423405 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093252758 seconds)
    (60/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153299341 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.111460137 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216302313 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093432244 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095246862 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.094732896 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.24043983 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097503686 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10546069 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.148718125 seconds)
    (70/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1120419 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.140204998 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09566457 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097228218 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.093696921 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095226267 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.230319958 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.175568488 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.206050397 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.146260421 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091941004 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.201682608 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094530169 seconds)
    (83/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093698059 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101930704 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.106642586 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100236103 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104869702 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09328362 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096413043 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216408633 seconds)
    (91/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106394931 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.118466631 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098432971 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.096744585 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120654873 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101257353 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141837761 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.110692669 seconds)
    (99/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106186843 seconds)
    (100/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.147053922 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.150226821 seconds)
    (102/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.162182589 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.113015773 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096190943 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149435266 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158491317 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094112116 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.09492102 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.147024835 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.095846137 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092657197 seconds)
    (112/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093492537 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115918104 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.106431416 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093825575 seconds)
    (116/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102343782 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.191046831 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.092932225 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092992326 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107520632 seconds)
    (121/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.132719408 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095630957 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156048428 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094548821 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098495516 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104168982 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101970535 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100488336 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.146710959 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.093180006 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134779222 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092945999 seconds)
    (133/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.111649503 seconds)
    (134/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.09469104 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117983045 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.138608916 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092936127 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092861741 seconds)
    (139/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10365938 seconds)
    (140/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113005681 seconds)
    (141/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106639031 seconds)
    (142/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092771529 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221194194 seconds)
    (144/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153967326 seconds)
    (145/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121801256 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.121004999 seconds)
    (147/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093685772 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094496942 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092770767 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094513408 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096042991 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.096171412 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093170883 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094753339 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.117261223 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094070977 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09256295 seconds)
    (158/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.132463372 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.112982616 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093757538 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096450321 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092745905 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093027731 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094061829 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094204448 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.097870548 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104108174 seconds)
    (168/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092433263 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095210105 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093568278 seconds)
    (171/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.105956181 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.120395493 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097388437 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094106006 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095715339 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094179131 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095852773 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.093541086 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094112473 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.096096593 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093675796 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102077611 seconds)
    (183/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.106456363 seconds)
    (184/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093540855 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.13457342 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097619127 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108125967 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.096503575 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094444912 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094104626 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.103732411 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092701422 seconds)
  done (took 25.660389455 seconds)
done (took 26.75320685 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17243378 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12165531 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102442083 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101850802 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169234115 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120376575 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109957405 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126413649 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103373424 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094106718 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094494923 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106127892 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102603859 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.17399793 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104394622 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093941234 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093645865 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.104666067 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133235441 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108353571 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170134936 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098164959 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104238803 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094188222 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168503803 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09850264 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1264411 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111247807 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108690072 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094312922 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111203916 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094157582 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109037732 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108281871 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09676215 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092873069 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096126244 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.098990022 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094203524 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121809131 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108244146 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094374653 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.101819291 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093499713 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09395993 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093171782 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09655369 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107185887 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09417574 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112602774 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100638022 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.106877058 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120038234 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094127641 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094075025 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094903108 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103411543 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096707955 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106532885 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096570708 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094456105 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098618777 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09347359 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096236323 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092826525 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119346404 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094040363 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094254699 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094034316 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099277794 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096299889 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093021642 seconds)
done (took 8.8358833 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.096475924 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112221537 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094522752 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.169840401 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155243003 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.095641534 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.094649647 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094235516 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.100800328 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117863952 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094408959 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098220318 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094583361 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0945625 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094764353 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101362097 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.093274908 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093934858 seconds)
  done (took 3.022755933 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104752281 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.114938632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105581124 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104964502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.09764645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096994075 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094329133 seconds)
  done (took 1.864704518 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094891809 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181443513 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.168514385 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.166826049 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.197370599 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.171766797 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094860525 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105045426 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096245899 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.177827861 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209240124 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094507512 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097538708 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.167233961 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094360909 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.160606665 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094834549 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119054425 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.164357888 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096832501 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.106876401 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102465407 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094768621 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.175664977 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094442546 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096045187 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121148983 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097365811 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121115707 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176808172 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100174233 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094887803 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.17100454 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095670361 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.19916363 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09718599 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.173222344 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097802401 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098871571 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094132784 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096270851 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.183004445 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094987495 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098245219 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095905239 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184190601 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094559375 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.177019505 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095593671 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11986467 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099071164 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095998528 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097590902 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093974856 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.182638087 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097003068 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162732291 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186994107 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.175530485 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162381788 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095706772 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.201739324 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.171060051 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097544143 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094942359 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094158601 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.162953896 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.09320108 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09782682 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.183574825 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095210949 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.166605524 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167224342 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098685927 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094394219 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122681722 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094821597 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.167139851 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094764409 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095673863 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164171029 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092803847 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095057853 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094639916 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119949566 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.098530605 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097021633 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094105026 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164415074 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.163865711 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094512915 seconds)
  done (took 12.672226381 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094870134 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095271424 seconds)
  done (took 1.362705541 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102652375 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094485612 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103034763 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09472461 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101908129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.177664417 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.177307555 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094051215 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.123274463 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.101698553 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.179291372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.180545101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.17923127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119290718 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.180832587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096892106 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.182184436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094389777 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.100403871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096691573 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.098803875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095698402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120065742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.161638945 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095606015 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094256859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096781573 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101032608 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100670134 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095169853 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095422417 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094219044 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094642358 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119600455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.181164967 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094968915 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094258932 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096766549 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094419618 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094849942 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.18129046 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09438029 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.11998758 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095794638 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094764232 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095072504 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09446036 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095727648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.182334401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095211318 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095023421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09390246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094897023 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094546534 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121342272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095442616 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095535343 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.180721343 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094847203 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096956821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093992217 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095139206 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094915518 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095420501 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094341986 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119747161 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095512203 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095810631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095564258 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094567592 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097761104 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094435472 seconds)
  done (took 9.250651015 seconds)
done (took 29.315095869 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.096173669 seconds)
  done (took 2.261402973 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.658437192 seconds)
  done (took 1.816960082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.51559035 seconds)
  done (took 8.703648577 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.360809476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.283540434 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.867354764 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143291605 seconds)
  done (took 2.80829676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.09615453 seconds)
  done (took 2.280287294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234711681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193331893 seconds)
  done (took 1.596116044 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.748106493 seconds)
  done (took 1.93269914 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.320070373 seconds)
  done (took 2.489507649 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.192749227 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159842577 seconds)
  done (took 1.533780357 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.524856268 seconds)
  done (took 1.706431598 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.54822931 seconds)
  done (took 8.735273718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227956848 seconds)
  done (took 1.399955215 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.258574519 seconds)
  done (took 1.437566572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.99528797 seconds)
  done (took 3.17464515 seconds)
done (took 43.059539068 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102491249 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.108319815 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106318685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.103643729 seconds)
  done (took 1.586188566 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101984641 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.099706497 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10170754 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.099880287 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101359058 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100365776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097974424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099159712 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101306966 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099727198 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099704919 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099053048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100533763 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121175317 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09713524 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.099840336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100741731 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099418999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098059657 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10197228 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.094647323 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099011773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.098548627 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101260552 seconds)
  done (took 3.59645351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102536907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101022284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100291184 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.10027494 seconds)
  done (took 1.589438937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103579059 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107095076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107297778 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.1033601 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106669119 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105242197 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.097803267 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095028793 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097402108 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103085433 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.107166022 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100693622 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129161489 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105742532 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1057929 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094474014 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102850116 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106042793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103470319 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103418137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101249098 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102910443 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095093997 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098509768 seconds)
  done (took 3.667350863 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168017367 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.106942349 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.119192276 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.121007971 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.095536348 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.120934771 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.118032376 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.094519197 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.102396857 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.094768088 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.094907057 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.121550318 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.121995022 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105464905 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095610136 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096108634 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.09547151 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102446128 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.149208005 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095134941 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.10429191 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.107756058 seconds)
  done (took 3.620489255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105719844 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.099908304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095755337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095683344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105915666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101573709 seconds)
  done (took 1.797051325 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101366906 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.097093194 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097648957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09595312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100635848 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097433301 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.095186081 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097018046 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097457039 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0965761 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096149421 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095864163 seconds)
  done (took 2.358432253 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208886808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11578365 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119444149 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096390011 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101493603 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09634258 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108651383 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097642501 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096849902 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0957075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096397216 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096458346 seconds)
  done (took 2.522245812 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147691395 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101776228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179557534 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.452766909 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112235005 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15459122 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.392434624 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144155433 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130102602 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109827318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133585445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112633705 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145890937 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138875711 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111662905 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.375371951 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149661693 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145448331 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114256843 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142544001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125493748 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161813716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13399306 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115678707 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138639961 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1133274 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099416947 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103562717 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118726434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121951759 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143359133 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115485861 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106818348 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133943515 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113851457 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119479686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212276 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10433824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231218882 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131627079 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146935041 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133212881 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128730983 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117466935 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105939956 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138391178 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108848517 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12643887 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107620499 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136710869 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129164123 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124731146 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.118178176 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110134738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.431985915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105114315 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113166228 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144335281 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138337072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135803818 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129664801 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100408589 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169244489 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130886788 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12640749 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109999548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114293292 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119906313 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156569774 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138710995 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12417552 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154904567 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.137326389 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10879484 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124450323 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12115189 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145820189 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126489512 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123880146 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09950701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142368456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105069079 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106015432 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167836906 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125427033 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141659869 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105230566 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.310328776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135056884 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1182807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116186242 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145704465 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129793352 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119195273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.138891231 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114226009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113854863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144882122 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100881748 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11666772 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138305848 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099544725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141392117 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104251746 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123567718 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131450435 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117842095 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128781222 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110164321 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132874108 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138388349 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124106427 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125591774 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132003649 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104704191 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105825475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132388676 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128261613 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107369194 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149555112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132295942 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.139997824 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10472944 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105270845 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179072568 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133551323 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133614143 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107112334 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104928317 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.126955097 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12971356 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115294659 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123725632 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104330137 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.143614392 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130431589 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103436218 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110949796 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157104432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101300117 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103212181 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134870332 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106089166 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114731975 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.121066872 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131712914 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118937092 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127726058 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148558106 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109356353 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108590206 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112846585 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104869165 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12903433 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142647606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099390823 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125797468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131570919 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103366908 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171868242 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.141910343 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150395592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124950206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104932582 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192648671 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102018667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101360297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103488255 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120384887 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116942302 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127170364 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169436983 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116168887 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120472636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115324062 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142117999 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12866198 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11535109 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106053428 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127313214 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123390299 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100268243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096116873 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.101621899 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111426402 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126161183 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108669762 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120827678 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119838601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14438178 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126441036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132146791 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132633528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099305939 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117809935 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124809584 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109583228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.124231126 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132325096 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130839224 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13013849 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109447002 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101116072 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10094042 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102006622 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11936026 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108661927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10404603 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105245006 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134581066 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147336939 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113820128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173175324 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119964757 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139564482 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101723746 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141702888 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114962601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12913409 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.173306572 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104966474 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.116644876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129903921 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108063422 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13800221 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147876157 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125667211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130943393 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127594387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103486782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108230782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15412064 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103919151 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111358816 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106308453 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104364533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132534267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107605721 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098638431 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125387757 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112267342 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137909756 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111809504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112543421 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103876271 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105896995 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130387446 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136827137 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.120175328 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122347913 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13923424 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111974145 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109397552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117454031 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102719571 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.439372276 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1250524 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123598164 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128800993 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10567442 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132811442 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112329552 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112534642 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173513209 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107324426 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151450059 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129961649 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106141877 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105726576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115070467 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114182302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128496792 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097877371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119187225 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138690366 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126610873 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137100824 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129371456 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124195754 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122277498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14443998 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108780327 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137923364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12473832 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120857739 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127147047 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111467874 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194687053 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104205326 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102181437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097628166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173953522 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105847409 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123903348 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.1708716 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149666956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129523947 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155600552 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137103482 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101088776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124729254 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136776664 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148081396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105706915 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.129727868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129357918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161816478 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103714948 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153596511 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.412262778 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139925844 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116979356 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118752627 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.429714029 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103257486 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103295764 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113227039 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117522376 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102143119 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.173824446 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128350923 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107767383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112744299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103660623 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169006362 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137595058 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106837496 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122841373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10509038 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115778273 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111921892 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143405488 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114180319 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116268302 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113672701 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130947985 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120339851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.101094172 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124112539 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12450146 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150821205 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113024862 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111239087 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173654172 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103260483 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112212241 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103430337 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096399453 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147084125 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.171449392 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105163581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117991461 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122970749 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104874059 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096665427 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106892381 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123577486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106460677 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128066119 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126060639 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106524878 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125956468 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127652028 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105333921 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126518818 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10585125 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097307211 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105467732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132605347 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10545979 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14465919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119419592 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09760002 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118307414 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107497775 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142345893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111501679 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106741514 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.26002471 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103093153 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131971965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1451561 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140196627 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113826427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126416973 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125988031 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140482788 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106013063 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107636045 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205212527 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111223016 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120892829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104064909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132853853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137954754 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097865099 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115103116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125109766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111552354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105552404 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14880038 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111786726 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106449175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113422636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133173443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146796064 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126304947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196532021 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106889527 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126453225 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115167547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10266811 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116621667 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118430685 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139492372 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108017349 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105024736 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107596096 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152222186 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104132487 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122985807 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125566039 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1258983 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124726499 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.097586052 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12460319 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105278356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125921395 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123281939 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108784262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128699473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105832482 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102192354 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128066053 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109734403 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124845106 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09875356 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165558913 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134179883 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103762204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104877031 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.415569677 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147563079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178214468 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130239394 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108317986 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137766599 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11573523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124814599 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129206411 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.09873872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105169328 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.09806306 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.237267224 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124623403 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12980464 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147985589 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112717983 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198218787 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110686122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251444455 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138744054 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129269407 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123128991 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102777766 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110213739 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104405569 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109264198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172038414 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131223762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127232172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108000155 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098957571 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10586772 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107154928 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139528449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110298003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128679164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110166664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.118629901 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107654899 seconds)
  done (took 78.772230236 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171578847 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133263563 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147825487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21817788 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165054249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.279828579 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2357379 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246890018 seconds)
  done (took 2.891254455 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.102999481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122042767 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.120210365 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121112446 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.100960208 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.306022155 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141245383 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099482502 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.142159921 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.124784099 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.103900704 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.458224921 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100053903 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.100424576 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125562701 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.100788403 seconds)
  done (took 3.649629128 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.378336318 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.329984724 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.353627644 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198918537 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.411940127 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121334137 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.500973025 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.101810271 seconds)
  done (took 9.690147742 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135867258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129236051 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.218157156 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.229604269 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136142644 seconds)
  done (took 2.143106157 seconds)
done (took 119.050164577 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104854815 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.105332659 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108595733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.106665189 seconds)
  done (took 1.706122768 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155880732 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.099579084 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101277172 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.103791932 seconds)
  done (took 1.758393866 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432141366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.100570302 seconds)
  done (took 1.868179078 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130827349 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.122774705 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.12314456 seconds)
  done (took 1.684874186 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112728517 seconds)
  done (took 1.416354833 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10591376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105799781 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176006271 seconds)
  done (took 1.690943305 seconds)
done (took 11.425488665 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.205662599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.945235672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410428236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152024337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700303395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388710535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.378897076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100173661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11016372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100033507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11309427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680345424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.328654844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876403097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.361832413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897491236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680422868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100590042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100247925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100288201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.322084593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100988106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100772407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102008949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681208997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399813485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100258411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.899449772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100568521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101009375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386965498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100838111 seconds)
  done (took 20.415387546 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132841495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122329039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107004219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101121086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100298252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102123682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103497826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100121894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115917997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100100172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12515804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101176443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103941186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104376868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116091804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105297509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100925085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100847622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100395016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100865582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103314363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100000248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127493384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100647597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102202054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10934255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099952262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100141564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101226606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101321057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101997497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10366758 seconds)
  done (took 4.705616775 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143333088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142467949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108546198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135869687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130923313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103723964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156083037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100842614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142183676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101037033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101096541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100546861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116498933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101559707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118948807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101369791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10112376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100004525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101015216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125536391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104579941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103021259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100744974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100320243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100949323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1151577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102784226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10168505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10091736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125429114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103751434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101179995 seconds)
  done (took 4.906617896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100210581 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110024043 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133156329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133644232 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101810517 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099397055 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100185838 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099928059 seconds)
  done (took 2.192673348 seconds)
done (took 33.528740556 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.112013168 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111185031 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114640999 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.113363305 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.169943316 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.102424388 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110276165 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100748316 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108326758 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.112781428 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126776174 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101313222 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11216069 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102984354 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.168513221 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.108980411 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.168561779 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198075885 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103265343 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109560742 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099354597 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.169808529 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102827385 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10065513 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192360314 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103794597 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104058342 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103489317 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102790309 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104513322 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.169070707 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103532269 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101889472 seconds)
  done (took 5.311986497 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.17204034 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100111282 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099564398 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.099174071 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099310197 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099247194 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.17487788 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.101082081 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125464612 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099350116 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.099846613 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.18751204 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.09962959 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.099703618 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.101734014 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.095571536 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099128874 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.101719334 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.202697778 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.102005347 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102030525 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.101597348 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.099968096 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102419989 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.197375971 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.095839069 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.101626002 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.129571912 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.101135486 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.10210311 seconds)
  done (took 4.820296239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10655637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.121522008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119856916 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.123658019 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100740425 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100323711 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.116619788 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111823448 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.105396814 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136765621 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100888517 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.106630842 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129147516 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101597472 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.11286865 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.11195729 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.114503101 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099606039 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.111349091 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151185362 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107473011 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108222669 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.108916284 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105100669 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106025983 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.139453374 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121354959 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.100885468 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.101053286 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.109942649 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101761779 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102219401 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.124873812 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114831216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100451167 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104079123 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11109264 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101713794 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.133978486 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113311109 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104740667 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.101802379 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12179584 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.101733752 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.103497411 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.099757656 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.111617199 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115364395 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.110996102 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.10149373 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.12245559 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127272908 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.101279404 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106391472 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.101682971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102803334 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.121870316 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.112455234 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104786221 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.101979957 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.10186102 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101543145 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120923363 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.112795531 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128134747 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115904645 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.103369349 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.100490311 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105092731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102724858 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.115907521 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101032154 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108645725 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103552809 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122464556 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.100300734 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.101695752 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.102482447 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126404409 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.107702592 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108517797 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108687929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.102824565 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101980547 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.101546835 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101397075 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.10039587 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101866406 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.101301884 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.100843465 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.10096115 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099566672 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129633552 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10248603 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101695226 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100277249 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106289058 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103240544 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101494729 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.102646848 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110428417 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.123287297 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.102215927 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.108363551 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.108821046 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128999044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123157002 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100366642 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10176095 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.11451563 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.104327494 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.105105896 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112916851 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103429057 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.101117146 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10117506 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127969189 seconds)
  done (took 14.147079585 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.17634002 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233268088 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.280103782 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.244975057 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.188855666 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.161220698 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.255051659 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111072696 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.230334446 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108136337 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.151730127 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23253497 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.114431265 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286865611 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.105591544 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127394796 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124256698 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.100921856 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.11150898 seconds)
  done (took 4.687306507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.101313323 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.120230397 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.102560517 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.100909253 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101768229 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.102432165 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.112657882 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.108280664 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101143859 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.105794123 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114117634 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.112594399 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.105526652 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148541954 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108048726 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10126944 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100130315 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.108704326 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.104155416 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125986077 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115037676 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105381186 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10165938 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101001722 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.099748102 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099991425 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.10020279 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13066765 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.101750739 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109100382 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10750354 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.09996709 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1065104 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.105548102 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103656954 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106731075 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100944933 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106015409 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.210051788 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10204167 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102282472 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.102273502 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104233564 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103360515 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.102212014 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.109226661 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.100546883 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100611829 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109726195 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100452274 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.100948066 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103110515 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.130862065 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101064761 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102841705 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.100245642 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.100197334 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.112756227 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.101018924 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100894596 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.102351379 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.108341887 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102429126 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.102700248 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103124096 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.105548269 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.131114631 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111080755 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.100786457 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101593844 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.100150544 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106357414 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.100508199 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101064738 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102756508 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105992601 seconds)
  done (took 9.527159271 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102626007 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111247783 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.114003999 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104545593 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.110424396 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101598317 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.111402794 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115676814 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114216956 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103397506 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.113857754 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103598708 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140596959 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.109653394 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.111316329 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.111512501 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.111923782 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.103895214 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108528609 seconds)
  done (took 3.460560259 seconds)
done (took 43.272342323 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.374093438 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.531178903 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.33867646 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.339197482 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.354950551 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.36954604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337748701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.340974451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.782501926 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.34070561 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.338217783 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.344717021 seconds)
done (took 30.123117868 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.397301396 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.341871101 seconds)
    (2/2) benchmarking "String"...
    done (took 1.342133397 seconds)
  done (took 4.30265342 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.341373383 seconds)
    (2/2) benchmarking "String"...
    done (took 1.341246419 seconds)
  done (took 4.013211321 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.33721461 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.367426328 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.335550037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.504218762 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.3713634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.337116791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.335843732 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.341258319 seconds)
  done (took 17.923819934 seconds)
done (took 32.306385648 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.35935298 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.537711526 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.60346366 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.337296537 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.336322184 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.335947626 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.338737302 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.347835124 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.339416304 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.335255697 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.660094611 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.608151022 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.335507143 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.740831978 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.335741522 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.337379553 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.342941197 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.570991234 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.336681512 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.381879021 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.342189905 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.34520469 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.350329099 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.355297402 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.43543339 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.354633133 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.39121201 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.337043637 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.520335983 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.367629254 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.378513463 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.338762283 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.394410163 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.33962474 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.341572739 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.335876575 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.517164935 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.435672165 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.335763562 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.339405665 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.51166813 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.343811944 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.335651599 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.337382964 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.34355867 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.404306205 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.5211105 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.429461054 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.343889379 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.34234072 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.403999009 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.728337774 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.338250976 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.338250996 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.346896407 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.544743588 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.3347417 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.352021425 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.354713623 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.356744572 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.334642424 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.334479425 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.371674309 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.345907904 seconds)
  done (took 152.810159841 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.334710606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.334884592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.334730252 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.378130128 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.334402348 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.33634184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334564024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.334085243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.33466542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.36166873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.33479582 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.334834071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.339314253 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.2642661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.335033432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.35326194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.335208867 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.335302876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.33549455 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.334761305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.338341817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.334237829 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.33456185 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.334892244 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.349872716 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.392942461 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.338595968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.351296345 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.334993997 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335157308 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.341888538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.379617206 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.775690688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.193413311 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.340212059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.355836908 seconds)
  done (took 84.88296939 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.336171584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.334613077 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.334988905 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.358041447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.334423496 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.748573815 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75010266 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.280388114 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.49172699 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.74735017 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.193207513 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.405799764 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.335089536 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417448877 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.347262535 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.335476457 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.374127168 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.361584968 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334738916 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.334487072 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750604746 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.345864996 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.483813703 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.475817799 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.32781646 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350914459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.754407749 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.32884788 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351282394 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.689120455 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353744152 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328577078 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.515605549 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.957971128 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.430805781 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329348532 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350925484 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.32826923 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.590124731 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.32827585 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328364892 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.330973629 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.811345851 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.327684517 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.741605145 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.329205003 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.122304768 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.327518103 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328863129 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.323425411 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.686766927 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.327840147 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.327764765 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.330759324 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.327818971 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.3276763 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.351600802 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.315058344 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.327309372 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.463917795 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.327953603 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.332826981 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351230502 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.328289325 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.32829021 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.328213893 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.457318014 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.385171392 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.089578404 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.743679782 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.327549699 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.586733893 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.413481121 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440127517 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.328315839 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328231858 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.328626776 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.328680579 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.429322647 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.328828695 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64827646 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.476198447 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.328887491 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.199883225 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.414630011 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.328041248 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5089377 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.327696756 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.327633252 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872819248 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413479215 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.327855471 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.329543736 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328761525 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.327690916 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649360864 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739475473 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.400798633 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.317672819 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.281628984 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.31424623 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314557752 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629128565 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.712470408 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.803981794 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.30866218 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.411281464 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.449808188 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.302692115 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.301840595 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.171101211 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299782274 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.3588683 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.300052686 seconds)
  done (took 380.360493657 seconds)
done (took 619.384629357 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.174950938 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.091546216 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.152930728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.046157573 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.024772165 seconds)
  done (took 11.784926947 seconds)
done (took 13.079315376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.493132962 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.492097433 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346335788 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.321138003 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.406432247 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.448960086 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325696098 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487426525 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486770925 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443876122 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.308966207 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.327925371 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.398005685 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.39879245 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.480990976 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.344020739 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.481465723 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.483113454 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392971989 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.346070646 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321755021 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.478173733 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299698314 seconds)
  done (took 33.610083128 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.609102732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602821525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.332807307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629475918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311006799 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.628345167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500711085 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.517788669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.494411717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343187646 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293023216 seconds)
  done (took 17.542622849 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549718723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571749427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324986789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573241732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307396616 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.564506656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456605877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.463298961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453654279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.295269808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286157037 seconds)
  done (took 17.11968308 seconds)
done (took 69.568338885 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.295482621 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.34352616 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.279847438 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281229043 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.279688582 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.279740208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.282072965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.280968016 seconds)
  done (took 11.594722833 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.278824281 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.278143015 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279200858 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.278785829 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.278070146 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.278649878 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.278297355 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278509861 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.278294843 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278335806 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.27867957 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.27992708 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.277947158 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.278118884 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.278431631 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.27798468 seconds)
  done (took 21.72455755 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.280762201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.278166518 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278494556 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.27815801 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.278079646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278651535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279334658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.27841153 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.27833042 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.278081775 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.279048369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277425933 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.278936574 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27824689 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.278060144 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.282131291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.278098712 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.278028844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.282326606 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278212809 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.278606565 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27811948 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.277859688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278011598 seconds)
  done (took 31.957795125 seconds)
done (took 66.547553885 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.274737364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.283478541 seconds)
  done (took 5.825126211 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.647848815 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.706514821 seconds)
  done (took 4.62203945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278652043 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.278216712 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.279659468 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.278862263 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.278650869 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278002085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279239623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2781999 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.278332941 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.278550238 seconds)
  done (took 14.054105566 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.278219735 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278315956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.278296684 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.278062265 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278499383 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.278288134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.278223664 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278587365 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.278331143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.278420021 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.27893669 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.278558435 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.278634102 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.27808811 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278358166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.279320871 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.278167278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278317374 seconds)
  done (took 24.279841976 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.29519149 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.302004824 seconds)
  done (took 3.864817848 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.413866198 seconds)
    (2/7) benchmarking "second"...
    done (took 1.317223928 seconds)
    (3/7) benchmarking "month"...
    done (took 1.384338184 seconds)
    (4/7) benchmarking "year"...
    done (took 1.373744183 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.317346495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.304977364 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.31735364 seconds)
  done (took 10.696393532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.27513884 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.520635388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.651762928 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.986175348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.276232948 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.278212607 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037971338 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.279162371 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.280399095 seconds)
  done (took 14.85200736 seconds)
done (took 79.461339224 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.268975203 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.269029229 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.287406264 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.275261734 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.674397774 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.310791885 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.270579109 seconds)
done (took 16.620166164 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.269308414 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.270166389 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.273919122 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269579391 seconds)
  done (took 10.346047632 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.144331869 seconds)
    (2/2) benchmarking "read"...
    done (took 1.53107217 seconds)
  done (took 4.938855305 seconds)
done (took 16.548886958 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276224898 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.274788073 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.274051271 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.275386185 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.274437278 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.274628552 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.274443014 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.274475784 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.274874629 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.27464832 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.274487461 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.274684336 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274259543 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.274484845 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274706277 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274362566 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274259859 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.271020388 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270936972 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.270999745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271046026 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271417105 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.270998951 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273732807 seconds)
  done (took 31.83341581 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.269061272 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.269293076 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.268892605 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.269664564 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.269685916 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.268903615 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.272493202 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.268361118 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.268577932 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.268105629 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268034668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.268593478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.268272786 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.268371195 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267920584 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.268426934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.268156454 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268451928 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268310132 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.268282083 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.268577785 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268284466 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.268592285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268200254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.268252155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268291824 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.268319985 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.268301058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267792536 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.268576825 seconds)
  done (took 39.317826849 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.271428423 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.272190755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.26829454 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.268809782 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.268396956 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.268106337 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.268283818 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.269670311 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.268141097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.267926534 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.268533917 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.267868987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.268013315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.268064374 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.268388031 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.268269688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.26824096 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.268966589 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.268264175 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.268188462 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.268581927 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.268375568 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.268124686 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.268253589 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.26793321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.26866418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.26822459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.268629112 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.268292462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.268626565 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268637458 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.268509829 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.268741208 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.268692524 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.268652656 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.26851933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.272587665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.274016675 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.268803099 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.268279843 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.268693834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.268657736 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.268562543 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.26875114 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.268317462 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.268218317 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.267934198 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.26865275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.268662894 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.268285201 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.268320459 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.268732174 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.26879932 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.268024168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.268583608 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.269023865 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.268100752 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.268317824 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268796646 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26822375 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.268356651 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.268833146 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.268681114 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.268240983 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.268900733 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268225289 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.268536579 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268442292 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.269881233 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.26886113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.268378856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.268309566 seconds)
  done (took 92.606509584 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268058172 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268909033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268287327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268357716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268432225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268232932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268655598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268246703 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268398302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268439913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26867489 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268788623 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268496208 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268647 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26821201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268330279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268408882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26848738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.26860095 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268770907 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268450143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26861273 seconds)
  done (took 29.164891073 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268309694 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269441652 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.268398704 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269466536 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271659542 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269670879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268340258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269591166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268953958 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268965844 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268706649 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269265096 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270066557 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268573279 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268728639 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270805145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268848275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270112919 seconds)
  done (took 24.105537311 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.26940153 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269209056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269377222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268984834 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.268857712 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269010319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268784769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269175602 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.268487977 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.268765274 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.269697156 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268115188 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.268330906 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268214172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268523225 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268450443 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.267871237 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269691308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267893891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267763097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267710589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267929068 seconds)
  done (took 29.168855817 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267383465 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267448719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267940977 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268184384 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.267346399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266591506 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.267385298 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.267126415 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.268439668 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267153231 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267295571 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267650456 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.268401958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266934145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.266929767 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26673526 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266895737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266918854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267039335 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266914411 seconds)
  done (took 26.604259482 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267203504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266850004 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266602442 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266813289 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266781495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268071313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268147286 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26629418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267268974 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267748099 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26702666 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266551158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266467727 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267149997 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26660077 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266530818 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266873871 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266646299 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266403946 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267128101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267567502 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267146076 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267061357 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266556803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266901002 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266455489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266770096 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267414882 seconds)
  done (took 36.730787022 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266819461 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266557753 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.265694497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.266242043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.266411623 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.265939784 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.266430766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.266050022 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268530501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265766057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266108783 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.265817768 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266041969 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.265727085 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265655899 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.26568947 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265918865 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266296964 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265901813 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265732492 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265868607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265534908 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.266161104 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265922882 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26566524 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266205501 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265735384 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266125677 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265879438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265955483 seconds)
  done (took 39.238413141 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.331321539 seconds)
    (2/2) benchmarking "in"...
    done (took 1.330971513 seconds)
  done (took 3.917070383 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.265693808 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266073101 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.26585598 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266433125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266440734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26605351 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267709978 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265870802 seconds)
  done (took 11.385337189 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.268878597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.266537038 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265842501 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266152306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.266209661 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.267947076 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275192778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270509714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.268425416 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.267822774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.270461283 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270386657 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.270709397 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268802445 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.268166774 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272495865 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268434608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266824245 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266337852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.265881239 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266284779 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269273116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271507044 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.269291502 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266840474 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.276343101 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.275652428 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.269358364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266961627 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.274299723 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269109778 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.267356949 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.266207244 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.266488806 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.266049101 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.266321775 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276705335 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27340341 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275163967 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270065176 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266193317 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.265962983 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.268350455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.269954525 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269885041 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268605104 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.265817505 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266326734 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.26655928 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270107776 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.269101499 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266610835 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.266523489 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272493943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.271006911 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27680907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.271711218 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.269220613 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.271612935 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.275026407 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284992675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277712468 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273172172 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.268751848 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275589958 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.277729998 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276309426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.270683513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267437915 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.265979194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274514066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287509543 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283520144 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.268464884 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266373148 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266209432 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267336487 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26717356 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275122207 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275438862 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269034356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266847069 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275230046 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275830562 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.267771094 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267529433 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266498361 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.267115689 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.26666518 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275136168 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273508205 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.266365594 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.267453941 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.267560863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.269800913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.267656385 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.267714932 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269370767 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.267549899 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.2661266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266377944 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269804742 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.272075803 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268514028 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266766063 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.275681929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270048048 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26710847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.275571502 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.270471981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266681076 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269620375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.272335304 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.267451838 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270477044 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.271175359 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.267917673 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26900364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26902617 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266581748 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275033792 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281511759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269435981 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.266640706 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.271305024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272195525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266386189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.271211048 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.269271419 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.266831181 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26627648 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269081045 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268766519 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.268794457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268152879 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269061705 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.267502593 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.266115276 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266628909 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268512665 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.27035126 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269125347 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.269668114 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.271227249 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.268887057 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.269448202 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.278187785 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271355644 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269495981 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.270490718 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.267859761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267846777 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.269041092 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267799329 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.268048028 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26737998 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267138302 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.267999792 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266441303 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266530558 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266660208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267792238 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269880203 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267672122 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.271898869 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269564787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.267271205 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266180848 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266453105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.267610125 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267823393 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26666669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270481202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269848722 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266112541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266742409 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269921156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268834866 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266651094 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266792818 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26998181 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270831075 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269763046 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27495324 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270471399 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266823791 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266301271 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267655016 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.269157153 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267758699 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.269985727 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270734031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285127091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284551368 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268410084 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267689109 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.267359387 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267121093 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272658834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269438557 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266064679 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266664725 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267264546 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268168577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268784328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.267632339 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266581962 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267375213 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267279866 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266863067 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266518365 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268405884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272003783 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267399932 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266469821 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267189375 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267767602 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267576327 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267478574 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.267709275 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267654589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266929747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.274509379 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.269592327 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269618019 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272006536 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270888739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268061764 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267143657 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270616489 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270547243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276600429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273230746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.269599425 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27637978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272054542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.267799641 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.271428246 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269157912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266512132 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.26957938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270495247 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267434521 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26855405 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26692445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267748738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267812982 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.274779334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270624699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267234919 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267732088 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268757166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.267306328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269377195 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270615555 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27037678 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271663246 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268857717 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266654771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269264353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267975972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26678422 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267161684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269502238 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.271016206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272811567 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271253177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27031854 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268555568 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267567194 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268563612 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268031368 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.269378628 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287399518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281816975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282353232 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280253718 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.268641766 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274562336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271464381 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.268994947 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268631219 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270473133 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269210532 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26893643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268017545 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269014437 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.268098205 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269937566 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270501123 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267909656 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.266785525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26843925 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268815264 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.267367465 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267110423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267777246 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267879385 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271319055 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271894558 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272158828 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270525692 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278879721 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273836734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272403893 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270376638 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268732594 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268157484 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269683985 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.268741629 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.27055096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270302835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270240597 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272819052 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268951075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27441007 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27037796 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270572465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270074533 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266744514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.266961917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269140345 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267710514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276104971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.272022449 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26912216 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269116276 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267274092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266945276 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266983836 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267216438 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266883472 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26713856 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276947104 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274829666 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.2687763 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271476899 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269351521 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267006161 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266444056 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26731917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27348013 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269820787 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269345753 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271453396 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.269309087 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267694117 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267329792 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266958179 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268243056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26698741 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276554838 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27441426 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269255173 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267287667 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.277114992 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271537872 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276435108 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272082064 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269314781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.269192959 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266853338 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269432744 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268922563 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270941198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27032024 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268277762 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269268635 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267172221 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270790495 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270625794 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269079456 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268409567 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276607978 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276267778 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.267583585 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267692754 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.266747521 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267650057 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267828496 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267872108 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267207569 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270369458 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275243732 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270141454 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268519222 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268152097 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268871337 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268374633 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266878381 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266895245 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267283677 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266867202 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268696495 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.268190551 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274916843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269537001 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26886164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270587174 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269084373 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276074882 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271162786 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269549734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268831582 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26840638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268857242 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27022677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26944334 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269306988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268074283 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268238356 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271684584 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270280305 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271950304 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272502841 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268730383 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268638967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269117604 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268165158 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267235435 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267359624 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269944658 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.269576294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268813845 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267975156 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267708087 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270659958 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268808381 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270404302 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272419785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269647427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268270444 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267235051 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266927837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268614051 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269406519 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27754601 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274812194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.274051672 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271235302 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.268723135 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268720501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272127645 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.272179586 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270305474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270077563 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.268641493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271167212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.269977561 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270647714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268022309 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275469418 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.272499054 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269290592 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278251711 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275589177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271370732 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268281993 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269506599 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269795013 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.268094037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267097138 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.26824506 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277188283 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.2754027 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268967045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270685737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.2716418 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268133445 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268172439 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267880632 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26937113 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269241538 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.269393451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269164414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267312518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267441357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.26797937 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269719585 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271643461 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27062289 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268294922 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270829117 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271073079 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270632847 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269196945 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26730785 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268837507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267031112 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268219432 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268337079 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269076886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272410447 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270636991 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268824401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267700917 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267455387 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270964377 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273288021 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271429332 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267488458 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268339839 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270079983 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.273124258 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269942159 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.267602199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268940502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271434506 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268483416 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267360284 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267370642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27113333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280614988 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273777303 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269845362 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270809871 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274722454 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272001897 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267074069 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26788722 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271016962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273032461 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271214901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267789125 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276192898 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273945265 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269799777 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268597501 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27150497 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.272545022 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272738306 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270299471 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267940065 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272679211 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281205336 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27094609 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276665997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285231787 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274062562 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271542378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268893664 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267895115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268419468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27056494 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269426355 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267273051 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267656503 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268063173 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269792109 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271947815 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272871629 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27527455 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271815099 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268631395 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270728645 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268001702 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.267968618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268857978 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26794151 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267858432 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268163985 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26928454 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287237954 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285719488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269131353 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267711022 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.267794934 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272205539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273704628 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274806542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.270418056 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267905009 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.267438255 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270707254 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270120485 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.268647952 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26917911 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270280261 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269202843 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270642803 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28145599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278506685 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274039583 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271934296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26871655 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267678331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270390445 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269378216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268796141 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271363722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271903958 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270599985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268565163 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267889142 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271197516 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270834576 seconds)
  done (took 758.225446546 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26959809 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267867155 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267879549 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267597933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268789004 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267589952 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268257408 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267517804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267716168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268775872 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267426232 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267392097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268497649 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27117053 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26859412 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268596341 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267796957 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267763374 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267304947 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267446847 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268472694 seconds)
  done (took 27.889705838 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267563722 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267632087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267964161 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267770126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267349554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267255773 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267796016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267797614 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267923125 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267136313 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26787 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267583412 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267648094 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267763286 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267848435 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267526548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268033963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267574474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267829817 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267878332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267540611 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267876335 seconds)
  done (took 29.146542395 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267944865 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269977028 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268797239 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.269060137 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267625215 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.267840444 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268029186 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.267651715 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267576542 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.269274498 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.268543723 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.269082586 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271857768 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.270796815 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.270472769 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.269562737 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267970898 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.268089772 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268060722 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.267457077 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.275543063 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.271724378 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.267724474 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.267952203 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.269293012 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.26748762 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.267448988 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.267930915 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.268694625 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268974269 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.267880782 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270683404 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272671412 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27140227 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.269174141 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.2685126 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268605399 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.267671345 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.268072716 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276807275 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.276413082 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268641754 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.283310119 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.278661384 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.267862945 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271493381 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27146733 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.267972326 seconds)
  done (took 62.214095951 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267780867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.269042722 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26808002 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268163841 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268525093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267969775 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.268435658 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267867026 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267888484 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26787222 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267986586 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268011727 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267843234 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267700129 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.269517748 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267705848 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267559304 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267663494 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.267819684 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267885395 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.267810665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267761474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.268107571 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268246096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26779437 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267866678 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267581288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.268127163 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268543687 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.267690714 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.267458046 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267969851 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267681053 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.267929748 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268289622 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267854831 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26824743 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.267867405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267989239 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267880616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267795563 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267757146 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267964804 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268167973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26987714 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.268185094 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267850607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.267677259 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.268051377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267832941 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.267986385 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268227084 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267885658 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267966201 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267943028 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268154274 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.2678905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.268304263 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268278955 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.268534885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26849484 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268246991 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.268564759 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26799305 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268429338 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268678902 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268289826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268148175 seconds)
  done (took 87.488718486 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268796069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268394198 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268514804 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26846811 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268189797 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268476624 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268522071 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.270083621 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268399701 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268403875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268915771 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26893646 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269491886 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269027775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268933469 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269435536 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268472407 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268235936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268471621 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268568729 seconds)
  done (took 26.632629389 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26798274 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268398859 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268007756 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268478665 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.267969484 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268631552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268230273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267908824 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267782419 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268464978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268444566 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268244547 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268013696 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268253893 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268253091 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268308451 seconds)
  done (took 21.54886916 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.268558281 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270596225 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268497399 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268358337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267980928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26781137 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268582148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268043064 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268781783 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269073778 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267874251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.26889026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268141263 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.268879908 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.267702044 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.26870232 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267987361 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.268029645 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.268605846 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.268410723 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269379797 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268425007 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.268922458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267879892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268188118 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268777246 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.26779214 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268729154 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267955764 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268158896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268096841 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268752111 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.271063531 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268454612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.268716916 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268142323 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269142931 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268845251 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.268491302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.26859062 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268706794 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.26869006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.269249409 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267866071 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26854298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.26821641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268453453 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268645615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268437996 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.26886233 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268328953 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.268324068 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268108337 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268472638 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268017722 seconds)
  done (took 71.028032049 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26875606 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268082435 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268217818 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268243063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268923574 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268539478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268284065 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271477485 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268292484 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26839558 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268509063 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269908938 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26840168 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268334409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268243368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268484293 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268234478 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268232705 seconds)
  done (took 24.093386847 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268572756 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268796113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.26823249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268451708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268209297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268628504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268281769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268085408 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268610778 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268752762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268278066 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268859047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268651469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.268144279 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268577071 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268074683 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268724747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268314125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268481926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268137201 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270513454 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268453023 seconds)
  done (took 29.165594558 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.268883225 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.26854719 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.268331253 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.277374467 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.271477638 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.268451494 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.268567663 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.26862146 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.280750185 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.285681793 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.28282477 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.27144498 seconds)
  done (took 16.538842837 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268281028 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2686034 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26838668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268195865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268693814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268578236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268591486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269308247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268769393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2699524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268840372 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26882374 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268616123 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268638568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269038587 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268607324 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270401039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26837901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268918592 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268690814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2688022 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268432385 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268997276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268867622 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268445229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268402942 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268386475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269916523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268381744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268600434 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2681961 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2686368 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268541323 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269580194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268526388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268379955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268241602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268447079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268556357 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268424022 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26871118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268327826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268667649 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268656677 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268588717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268580557 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268782849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270715356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268530799 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269575298 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268470189 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268898092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268537051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268483402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268841706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269387049 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270248023 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268628653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268401191 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26977416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268700937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26841213 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268688411 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269655388 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268588004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268481388 seconds)
  done (took 85.000749303 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268789889 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26835244 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268521062 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269881334 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268750668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268506962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269211777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268890064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269014561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26830916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269020933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271324051 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269083929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26876139 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269170583 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268773657 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269161123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269290702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268482475 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269878376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268779919 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269158254 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269029764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26874998 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270446072 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269279644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269072796 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269001506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268755653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26900464 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269246247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268885405 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269202371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268764778 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268610608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269000607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269383729 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269178618 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268971018 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268757223 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268677347 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26881235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270280882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268474743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270053799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26882285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268573054 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268843954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26838536 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268512416 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269712386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270058226 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270019406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26848267 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268743993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268800931 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268876774 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268769806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269208692 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268384988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268764271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268833879 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269794813 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268750028 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269308694 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269208203 seconds)
  done (took 85.017655585 seconds)
done (took 1689.327084029 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.433341158 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.458817516 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.305447118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.276777719 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.292839632 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.278776809 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.742260693 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.456796485 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.696012425 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.895556555 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.575257411 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.38776744 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.290979648 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.417273915 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.36374308 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.266465324 seconds)
  done (took 32.395562047 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.295071965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.275209796 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.36185011 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.272909003 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.293381833 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.419630277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317919685 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.278857451 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.265602703 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.294949522 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.270830428 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.290932587 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.272494791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.106036643 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.612904196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.420431354 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.476757429 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.271059076 seconds)
  done (took 29.055515103 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.593405412 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.376722366 seconds)
  done (took 5.227573618 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.28675558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.274040192 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.273848447 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.271180026 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.263793298 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.264872858 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.269870166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.265999028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267003679 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365490105 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.272923766 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.281381094 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271344528 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.272145083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.269806928 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.311088127 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.407446733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.270130497 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.2692367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.277093524 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.271136937 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366806766 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304994947 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.269404074 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.365007501 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.263702763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.273738227 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.278337685 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.392845423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.270594974 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.269955844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.275120032 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.273956264 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.035743727 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.707927561 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.26395678 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.280838663 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.281787809 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.269592038 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.418399852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271816028 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.277455471 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.263859487 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.692124081 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.405958452 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.374013084 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.266929402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.271823961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.273436097 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.335870966 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.271093381 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.273663351 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306479675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.067074696 seconds)
  done (took 81.452294559 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337913758 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.264148578 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46124815 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.271605791 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264082453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.263917425 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264865977 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.471898484 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330093351 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263587847 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.522394999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.736899561 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.275497969 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.336232632 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.3205551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.322353782 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265465104 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.263839629 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.263358364 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.272229343 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733349389 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272445518 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.266252519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.461578665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.297736087 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752725657 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.267202634 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26856388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.263811497 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.264020678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.71452344 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.268936355 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.328659535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268244989 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.505563405 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.581419402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.555004973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.268128624 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.266464197 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.27141875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.265994508 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742770029 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579616008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.266720359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263841232 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741462775 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.264706005 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.276017471 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.265291692 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528245407 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.263744397 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264683346 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.267852951 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.263733816 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.264217785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.268875502 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344459761 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753027216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264677767 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.263588478 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.34597429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.265040789 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.274713423 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.271017711 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.265899543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.580804136 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.172170004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.273848522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579042136 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.70360569 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264257764 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779911141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.264233168 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.279053893 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.42011183 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263273428 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.263715637 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752959259 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.279798925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264177745 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.554538929 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.268331044 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.528912183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264384399 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263505679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75178468 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.265627522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.333684067 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.263634012 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.264600395 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.264434404 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.26527562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.508950783 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.315851737 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.264105525 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.265010705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313574491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263699279 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264306843 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.266093185 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779995859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.268107548 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.263402985 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.267508977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.26390412 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.264504289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.269199942 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.267478816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542777493 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.264172255 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.272045738 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265328913 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264039128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.272060669 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463879438 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.273296116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.496964073 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.265512313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266137896 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.26950421 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.263868303 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.275044769 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264558121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.263896014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.263569557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.58357013 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.265332153 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.264826635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.265947853 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263974394 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.265921763 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.265247209 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323424957 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.263629857 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936385709 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316378081 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.320676244 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.264355815 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.264480806 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263994149 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.269333392 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.266323119 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618625713 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.503795841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.168755826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.267913743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.264354546 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006245979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33305068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459880041 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265692703 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264084334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.617564155 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.174014156 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.266171351 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.264243579 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.265544309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543179311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264764551 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620214872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.732107247 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.265815968 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269952254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99683731 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.264638048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.26480026 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.269444688 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.51735799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.264109861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.264125724 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.264104714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.263810904 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263844664 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.268608073 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.266457296 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.264130689 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.264536445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.81159634 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471710929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.264901337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269006192 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753082103 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.275399511 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.264099119 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.26851542 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.267853721 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.264551497 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.32172363 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.264793998 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.320952563 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.265057783 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.270595726 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768733681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.264022508 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.265240722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471666696 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853144241 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.265475255 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.264097201 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.264255592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.324607933 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783447501 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.331784961 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.4963991 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.270596322 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.298103837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264129008 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.281303308 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782439022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265752167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264381308 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932877455 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.264550118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.039050154 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.26441046 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.266030287 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845849635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.264405566 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.267482762 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.264123996 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264135332 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566521755 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.265858992 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.303376688 seconds)
  done (took 486.272707822 seconds)
done (took 635.661559947 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.264443505 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.265338124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.265361395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.264979383 seconds)
  done (took 10.31855062 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.271569897 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.270464641 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.270043305 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.26981783 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.270255302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.270568558 seconds)
  done (took 8.881602624 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.266107752 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.264847693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.264858082 seconds)
  done (took 8.054636646 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.428857608 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.271892682 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.55195989 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.268549757 seconds)
  done (took 8.780240467 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.269763103 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.26943888 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.269410938 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.270201733 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.270959793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.272092027 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.270676195 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.270658781 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.271325277 seconds)
  done (took 12.692752649 seconds)
done (took 49.986412867 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.655438488 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.194747759 seconds)
    (3/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.684102359 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.277339228 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.797332388 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48927924 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.295934644 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.694050511 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.279247933 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.264541312 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.149755387 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.736402147 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.279653546 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.265004727 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.273499976 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.272738991 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.940767527 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.27965954 seconds)
    (19/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.278977525 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.559749602 seconds)
    (21/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.265195823 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.496412329 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.957447039 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.266028431 seconds)
    (25/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.528906206 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.587797182 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.278375454 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.953598325 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.278697722 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.35398471 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.067134645 seconds)
    (32/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.535553231 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.481684932 seconds)
    (34/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.282339354 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.267227466 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.233485447 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.704178802 seconds)
    (38/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.386485659 seconds)
    (39/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266209625 seconds)
    (40/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.52200287 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.4792371 seconds)
    (42/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.275500973 seconds)
    (43/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.268032769 seconds)
    (44/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.646707858 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.692155844 seconds)
    (46/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.505479626 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.264841753 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270237385 seconds)
    (49/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.52608463 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.15489869 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.944089356 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.88918677 seconds)
    (53/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.650061587 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.280334839 seconds)
    (55/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.081205726 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.278261352 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.728659341 seconds)
    (58/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.936594202 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.265371401 seconds)
    (60/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.265229586 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.789572501 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.265387203 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.265087086 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.27213337 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.282691065 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.265784998 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.277927555 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.358445423 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.787552737 seconds)
    (70/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.7089608 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.533526704 seconds)
    (72/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.265624201 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.280306582 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.264895145 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.274801835 seconds)
    (76/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.266102745 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.590940359 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.278663393 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.265983834 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.280390903 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.269110355 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.26654787 seconds)
    (83/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.266675386 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.353718372 seconds)
    (85/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.658534984 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.60991908 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.35479739 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.405484396 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.265271459 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.832126246 seconds)
    (91/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.272366285 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.607545625 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.279456298 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.265682649 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.268912129 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.606512334 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.267572939 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.041993526 seconds)
    (99/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.973210066 seconds)
    (100/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.265816908 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.655550489 seconds)
    (102/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.523126051 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.265578332 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.834946807 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.203107219 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.24567089 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.265010356 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.140677372 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.803398956 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.271719959 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.280446652 seconds)
    (112/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.26501263 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.280892063 seconds)
    (114/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.964328955 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.283251881 seconds)
    (116/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.487053178 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.109700412 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.717713673 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590977445 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.265966003 seconds)
    (121/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.102024033 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.601143094 seconds)
    (123/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.159956923 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.610390739 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.267814634 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.406580803 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.357226992 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.488162266 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.265102816 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.378198558 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.402641906 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.888613668 seconds)
    (133/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.236499253 seconds)
    (134/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.879079091 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.076147856 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.383137595 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497603268 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.477716236 seconds)
    (139/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.672868255 seconds)
    (140/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.991822152 seconds)
    (141/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.654827054 seconds)
    (142/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.752743259 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.266316714 seconds)
    (144/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.032822639 seconds)
    (145/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.489583422 seconds)
    (146/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.949152745 seconds)
    (147/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.265520569 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.265180433 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.596700094 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.265874929 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.273241791 seconds)
    (152/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.270286404 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.986387633 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.281386582 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.26618518 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.267515799 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.284692722 seconds)
    (158/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.264984475 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17687311 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.477579476 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.684369805 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.993888338 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.279974307 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.93289168 seconds)
    (165/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266299337 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.272883515 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.371797968 seconds)
    (168/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.278998864 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.283205085 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.000450576 seconds)
    (171/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.929683017 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.727618209 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.747870764 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.494817369 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.81225014 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.571688878 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.570974572 seconds)
    (178/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.381636181 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.266553586 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.265908736 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.601095206 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.488143291 seconds)
    (183/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.939129363 seconds)
    (184/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.269512509 seconds)
    (185/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.184702712 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.268759493 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.265791175 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.266132555 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.275258807 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.265687058 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.265643091 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.285018389 seconds)
  done (took 363.951213163 seconds)
done (took 365.210077354 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293240996 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.95583787 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.273385981 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.273922096 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274854225 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265114847 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.285548554 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274967144 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.277791088 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.277748229 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.273030641 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272982375 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.289521857 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.274441625 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289837924 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.274626777 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.273696654 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.273193533 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.278274456 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.283786408 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274572113 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274719855 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.290617717 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274254252 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283107993 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281994991 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.280377425 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.265254842 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271590673 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.278231639 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267551102 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.280369013 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.280555991 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.274573665 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275034291 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273099929 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274793758 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.955761891 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.284606395 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.27366895 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272032545 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.280380531 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.278338904 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278626014 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.274515826 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290676147 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281947525 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.287468453 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267394875 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265632172 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29417111 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.277079684 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.271761251 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.264828237 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.271088381 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.290104912 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.273205173 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293773491 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.270738001 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275175366 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.290754794 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293172223 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.276994262 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282124944 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.271175023 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28917721 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272930455 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.283550788 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.271850432 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275277136 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275315135 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.272171031 seconds)
done (took 102.626301619 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.270785512 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.271154079 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404145904 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.271414505 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.41482509 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.270898747 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.270829676 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.280369146 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.272534916 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.271055023 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404834425 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.27141487 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.404601177 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.417022039 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403952693 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.270562532 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.270624784 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.27059278 seconds)
  done (took 27.971619012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.343928241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.345606278 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.374769337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.27116429 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321837144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.375426383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.271170685 seconds)
  done (took 10.56358108 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279192848 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270731553 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334190936 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33419944 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.270827908 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.462199396 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.284063107 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270779646 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.334204962 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.271240482 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.270810098 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.279841682 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.266682009 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.334420669 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.284011034 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389345268 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.274206756 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.270889854 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.441929825 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272449937 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.279726118 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.328872687 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.284270164 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.271698147 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278311865 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270480845 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.270921956 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270801854 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.347635191 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.270278103 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.2676251 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27056832 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.2713995 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270695793 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.270999477 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.273448853 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.271284595 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.2706019 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.270974303 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.270579407 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.270526904 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.295080912 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.270894989 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.270880437 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.270655578 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.270331081 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329164496 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.270896219 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.27046702 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.272400787 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333656231 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279957727 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.271272239 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.271062237 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.271142343 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270576736 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.442166559 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334431223 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.270494864 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334596156 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.27082917 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.270506396 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.270508346 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.270734775 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346147938 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.270610407 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336650846 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.270691734 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.461947739 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.295619454 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270857262 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.276236943 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.276327041 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.271721843 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.278099116 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.270749578 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.274197582 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.278476979 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270574991 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270473304 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468719984 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.270566404 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289633007 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.27990802 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.270530541 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.33033705 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.271125713 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.27055157 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354194659 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389861675 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334352698 seconds)
  done (took 123.242777215 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289626483 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.274893563 seconds)
  done (took 3.824504671 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.27457034 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.27168176 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.270878949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.27077634 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.271449765 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.271064135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.271414297 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.27252277 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.27241541 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.270865748 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.270855441 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.272134466 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.271421267 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.271622306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.27139852 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.271346867 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.271685993 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.272884119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.271092683 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271253023 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.881404019 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.271795915 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271757885 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.271427712 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.271270646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.271133318 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296988525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.270842634 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.270834895 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.278212565 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.273132244 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.270909252 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.271575475 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.275020852 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.272164175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.272038007 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.272148775 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.272554029 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.271314147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.271156452 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.272157241 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271637673 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.270964237 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.272369017 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.272917848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.272156013 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.272636525 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29723384 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.273036779 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.272359767 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.272650342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.270886723 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.270541791 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.272148876 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.273904928 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274442325 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.273318337 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.271675205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.271866979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.271572582 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.271505309 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.270993365 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.273148538 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.271558661 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.270865233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.272069502 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.271881544 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.271875501 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271546089 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.270988835 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.27194736 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.270664235 seconds)
  done (took 93.503254457 seconds)
done (took 260.365280217 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.063273148 seconds)
  done (took 4.322367331 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.530006712 seconds)
  done (took 3.79003774 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.854161235 seconds)
  done (took 10.116286845 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31291245 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.288479705 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.28614205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.270468926 seconds)
  done (took 10.418274418 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.894604872 seconds)
  done (took 4.154428898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.271570224 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.265932424 seconds)
  done (took 5.797907049 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.426448877 seconds)
  done (took 3.686117749 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.383364254 seconds)
  done (took 3.644158487 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.28867637 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.266216717 seconds)
  done (took 5.823358384 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.266020626 seconds)
  done (took 3.526569601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.963905361 seconds)
  done (took 9.225253608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.288165724 seconds)
  done (took 3.550514261 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.30717841 seconds)
  done (took 3.566715064 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.965920217 seconds)
  done (took 4.225841378 seconds)
done (took 77.107927498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.265396834 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.267299532 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.267671094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.2661156 seconds)
  done (took 10.326132514 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.336928941 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.329179608 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346339576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.323656673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.329031739 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.330744546 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.297169254 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.296784387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.331721888 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326993157 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.332275734 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322193092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339326281 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.296837579 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.328313959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.341242945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.326925872 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.332766235 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.296875521 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.322736288 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.272065041 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.32976267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.32315814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.27224536 seconds)
  done (took 32.946244114 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.665094246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.342101563 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.452766935 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.32292836 seconds)
  done (took 7.04325292 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.364655824 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.37432499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.375068798 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.417933615 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.44838871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.374775935 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.297916126 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.292449671 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.278930697 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.37479735 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.450865511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.271719841 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.545912079 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.271245386 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.561208247 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.27184972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.272806439 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.366414884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.415263985 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.429338096 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271762652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.361005169 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367858011 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.27121681 seconds)
  done (took 33.989078195 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.279373463 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.287967819 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.272822161 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.272690338 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.272702158 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.273800693 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.287175809 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.273679206 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.278655062 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.271957152 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.271689503 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.272628916 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.28602183 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.272124397 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.272259093 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.279067 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.275955284 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.278909646 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.282389772 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.272724313 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.271947765 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.278849372 seconds)
  done (took 29.346202459 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.265969892 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.267622157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.617023902 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.522091546 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.267188294 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.266587236 seconds)
  done (took 13.467138965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.321251921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.345021908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.272124947 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.520357099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.581361838 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.272503036 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.272779096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.374105787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.581698914 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.642466989 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.303360006 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.311896217 seconds)
  done (took 18.05981156 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.272820577 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.26856935 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.270403102 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.282830401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.311270097 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.275539408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.278567643 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.266312365 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.310846786 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.315208927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.274829508 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.31204084 seconds)
  done (took 20.700121488 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966628327 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156228927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272344435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411983585 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266759028 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266413094 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415814972 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679701772 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.271372779 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542141444 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269401623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846426765 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275726077 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275766308 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266088703 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.265715637 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277282137 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942206571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265871688 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266732427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272145474 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268285685 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266052917 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.428897623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267423795 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266498718 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.527875718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266093232 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496890743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468065963 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470642929 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26797662 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543470734 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606281078 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409521048 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43051271 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269114058 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266942948 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.280778894 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.266652868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277540808 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268453288 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467639762 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267913458 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266270224 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272862305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682332308 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.274440742 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.266227354 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265739189 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471886697 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848458937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.272046982 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266088231 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448498061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266384292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.270778802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464107288 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265712478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271945767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273901936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.265738568 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278939927 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277063342 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865316777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.273354445 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.27071984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271024382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270527457 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274552956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290529085 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28355037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.286833957 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265324092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903761927 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272564206 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268696542 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91092344 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266882428 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.266358821 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276907803 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266745977 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265519752 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.265552016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265610635 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007250897 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272431668 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.272048758 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281829639 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678816655 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428574184 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051483819 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268614943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278279354 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.267469629 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267562337 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.268241604 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275388568 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28813569 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68018322 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271804211 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.271306929 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271089677 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.477582466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273223411 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.266143852 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682066131 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266106916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.291533879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273837792 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423443111 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.749090807 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471030244 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267105999 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295952256 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26576567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054466661 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266079716 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.272251781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265476244 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511879647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.266280047 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266096552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388431229 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297302106 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266459462 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266127748 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268409094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265915311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.494513569 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276646034 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468235364 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.269027116 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265495432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.273673514 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274438216 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.268121959 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266695131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266915486 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540079831 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265685566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279287759 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266874805 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.269829528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.267175043 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.271733344 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271583306 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275185495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274886731 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470130166 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294151822 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409934954 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293564406 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.269549923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274495076 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.272041497 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.272167812 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266037166 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268370532 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300156988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.274636396 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274300972 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754913356 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241609717 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293619296 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154176258 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.280979104 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386674143 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273879504 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.424974406 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.268367003 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283547491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.273169662 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.269203668 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276388194 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469479562 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.271641264 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440215462 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.678020671 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.755677762 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677100354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.267102295 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.26600809 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.265966861 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265804688 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267474259 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267195165 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427831449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476212416 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275750765 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.755494964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26907498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267358093 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.273614465 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46971392 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.274978339 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266437817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.266064405 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266230753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276024292 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.468608515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546484425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.281411455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265815408 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.784650248 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27397891 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268125666 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266113088 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296231822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273871324 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760240484 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268012841 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282961933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471526786 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267537658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.285428954 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.266075762 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271994567 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277149036 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.267997434 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272844041 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.426375804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267014254 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268563323 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272992563 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914369227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710980698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270622515 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.272241431 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266441792 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681305267 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27381135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266457831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463120625 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678599593 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266368553 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678035555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.266756093 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860307954 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470051932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267530311 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273437629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.275129887 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473060628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477283228 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297941823 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273307031 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268714471 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.275070469 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763525222 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265990972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444170302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679432633 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272255172 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267804429 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.360299871 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275694668 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573023416 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.266603689 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265894788 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269118924 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270457316 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764074607 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295317984 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266857523 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841756538 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267795846 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.681318523 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266512492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.427205966 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.469532977 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.536296721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.27484319 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.268345796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.271237734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473068612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277158236 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272023863 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709999686 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.115769308 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273351309 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266604484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062566193 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269706106 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497199111 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.267250556 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.26762351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293596177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267085678 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26598771 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.266081182 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.292069579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240727225 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813846537 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.271615165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275269293 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276117457 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274368691 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277841924 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.283029023 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.753051323 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280979967 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268087503 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295729896 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.271596047 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27641496 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.271120791 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268872282 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269166003 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453676536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267473136 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273219767 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.277841261 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418854164 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477120521 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26648174 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270366575 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462189366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.267031178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.269832392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925253449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275780392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268858092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268432452 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268231648 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28322972 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390084137 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425994333 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.470565992 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472705508 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575062558 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271161402 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268645721 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.998424954 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969465878 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267169087 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.270191342 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.267915706 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75820274 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914278568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760894195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473896376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267393734 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298800208 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267572607 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579635323 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265784276 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542155751 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278696471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.285548125 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289262068 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265934047 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268295695 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478353302 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540393953 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267199616 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276412519 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266757184 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.266356224 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470655094 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.477473668 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94291545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922722371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266035527 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275369924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6831598 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542574396 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265823038 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269126433 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266504238 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.274253169 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280249005 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.274539532 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266177977 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548759933 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466777684 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609019579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.465719676 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.658457844 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.140076966 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270755836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27457345 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276178929 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425702618 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746204149 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859814757 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2817907 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390956823 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429112084 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.26738077 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58124039 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.268193612 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266442597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265810538 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274655079 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.266807202 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465466208 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762575725 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277331996 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.273561277 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.267901083 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276402801 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.425064357 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278018047 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994961889 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267818852 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469593317 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294083468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267706306 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748762932 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472513151 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267889589 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.271690038 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457726112 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274350208 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301022187 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.139584369 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.266536878 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062162286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.476863146 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057416352 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274633872 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.859030606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755726128 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.273282371 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815181388 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266620193 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269323129 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542319453 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.275572565 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266411122 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554686484 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.271553345 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276368932 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428872974 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.747624966 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856479824 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.274951371 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266989152 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.268667203 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266869899 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41580098 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280970591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269048059 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.653879712 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267280579 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276026488 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820202694 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.272080745 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266023655 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.267800399 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266502938 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.274578412 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.282639355 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.268793225 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268490641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464911488 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76002093 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284691701 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.897530193 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.601206076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275435021 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276441045 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.269600017 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.273472089 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266598915 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266481456 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266190869 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272324268 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06140035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.274916823 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.467391346 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273070772 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.476275994 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476395855 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273077974 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426841804 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276583036 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285614355 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.266749724 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267357559 seconds)
  done (took 964.524396888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.288781462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.2676024 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.273252687 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.292726938 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.295505638 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.301877053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.314925452 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.286422185 seconds)
  done (took 19.582171889 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.266301156 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.277859369 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.267174176 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.277033536 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.267351229 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.513399005 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.268887259 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.277110936 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.282624247 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.272023957 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.270274554 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.649808054 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.277363059 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.268739163 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.267840021 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.277293792 seconds)
  done (took 30.243344834 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.951557118 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.298620761 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.309795526 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.307718603 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.285942205 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.273438459 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.400211717 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.276290271 seconds)
  done (took 22.367527444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.282713483 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282946166 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.283505605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.28335742 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.283857217 seconds)
  done (took 7.67743573 seconds)
done (took 1211.534118347 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.27264662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.272997599 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.274227313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.274584569 seconds)
  done (took 6.35467454 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.266507727 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.267732293 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.26791057 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.68642223 seconds)
  done (took 9.749816321 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.582221051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.710160671 seconds)
  done (took 4.553433321 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.635924991 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.323323008 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.44611047 seconds)
  done (took 5.666802558 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.66499714 seconds)
  done (took 2.927435857 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.745953495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.733184595 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.426671147 seconds)
  done (took 6.167700614 seconds)
done (took 36.680818727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.27141534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.038714228 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421426316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.266134276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425659464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422301975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.493674755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266572466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.273797566 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.274631226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.266125756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.427575176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.482727885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.040486982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.478959728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.039976372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.429581931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.266927633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268714247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.270418908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.489788208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.274125056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.275361939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.2677493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428001365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41230047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.268952952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.039645955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.266339989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.266537481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.411772174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.266187031 seconds)
  done (took 79.054026831 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.266432421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.266624633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.265964608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.266145158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.267004893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.267217105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.267198638 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266298618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.266141752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.266418652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.266889191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.268653623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.266511388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.267289507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.269019513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.268298178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.27487228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.266753173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.267129935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.275597334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.269797178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.266644752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.266503623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.266958057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.266576105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.268133722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.266400172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.267673374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.266439279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.266816753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.267735256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.266989992 seconds)
  done (took 73.82539483 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.266616212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.266676512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.265910363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.26669425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.266970876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.268685041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.270170044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.266946569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.273700145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.266603894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.266662849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.266805921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.26853987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.268542499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.267079668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.267137228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.267052184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.274499956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.26661679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.266307417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.268955059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.266771313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.27518377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.266307352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.266916771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.267405949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.272226399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.275839037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.267806549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276580204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.269441599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.275702481 seconds)
  done (took 73.869427182 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.49868457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.272222491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.274293228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.267180727 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.274153626 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.27207948 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.266791539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.501259551 seconds)
  done (took 13.888232354 seconds)
done (took 241.89850455 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.266542293 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.752260265 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.293290027 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.266740496 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.298037657 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.296734886 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.428291146 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.294264691 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.412987789 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.275837126 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.293469689 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.274955887 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.980708412 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.377348905 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.153922778 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.267383765 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.056172697 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.266902627 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.809712595 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.436207998 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.293779029 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.266885509 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.158461434 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.054221573 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.267549382 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.278336709 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.278227773 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.385591847 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.354848648 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.277810789 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.750055946 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.266945271 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.267016142 seconds)
  done (took 59.663039355 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.271834833 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.273759738 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.272389001 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.272421186 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.271902407 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.272073067 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.272351134 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.2724932 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.272020402 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.272174501 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.272064949 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.272225664 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.272615037 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.272473355 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.272901801 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.271956523 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.27269054 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.276853733 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.272457401 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.272912957 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.272274549 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.276839979 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.272194248 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.272387778 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.272729827 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.272479358 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.272491382 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.272420059 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.272606183 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.272536758 seconds)
  done (took 39.44398012 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.272402093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.961946653 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.269756457 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.276773024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.583736993 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.597734775 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.098496775 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498365766 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.277901099 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.349602599 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.276338564 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.272756087 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.27240588 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.963555274 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.305713365 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 1.868997594 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.346536927 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.64166253 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419077093 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.268056075 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414208408 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.398402124 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.276504918 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.281645986 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.304273301 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.278895197 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.66235684 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.278512588 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.278995902 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.280648977 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.277174099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.586378658 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.26925489 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.278071006 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.662482731 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.27347174 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.846844693 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.273122117 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.4699299 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.279142107 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.272870901 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.27952958 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.267791213 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.281210982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.650505687 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.273448553 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.306335102 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.591601029 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.276779116 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.267227852 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.268016284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65068404 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.278044924 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.267843574 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.278740586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.650000729 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.278677538 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.100335939 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.589378964 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.279432414 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.279293699 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.268925842 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.272995666 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.344041426 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.267740341 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.267040753 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.26747449 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.277909075 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.28552321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.650278971 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.279383612 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.267538456 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471628057 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.273900787 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.267798946 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.273208426 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.278304958 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.282646203 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.272896441 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.272622436 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374629352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.393038057 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.595417111 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.596304637 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.278748124 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.406003902 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.276965889 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.585645588 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.273223522 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.276953539 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.275678026 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.272250203 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.060052587 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.267641234 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.274542854 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.272907145 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.40688231 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.661956055 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.281708467 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.280724607 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415556419 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.275789136 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.268401108 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.591415037 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.272789648 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.267143316 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.267425979 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.40543206 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.272670136 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.283540536 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.277217874 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.276859255 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.496012085 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.58993646 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.279925985 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.273566045 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633562701 seconds)
  done (took 187.246242084 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.274704373 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.274019053 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.26931882 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.266745835 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.268357732 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.267474234 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.267838105 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.268711232 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.266913121 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.266797851 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.26846918 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.275233796 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.266971772 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.267705019 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.268236209 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.270446969 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.267015369 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.27221333 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.267909426 seconds)
  done (took 42.377560091 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.272583818 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.632561034 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.272970258 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.272936591 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.312580369 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.272667853 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.267215451 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.390564318 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.272846096 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.272571319 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.272895736 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.266902005 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.276273495 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.660182676 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.273930062 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.659736707 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.272708921 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.272517039 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.272473456 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.661774337 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.267441403 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.583658812 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.31416842 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.660120121 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.273068003 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.27264647 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.272618477 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.660268413 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.273076042 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.667787672 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.274301167 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.272929326 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.313834096 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.31450785 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.26731389 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586489761 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.293047451 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.37730199 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.273060026 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.2750433 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.661878184 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.275160484 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.275484276 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.278354151 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.634193746 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.635233163 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.273273102 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.273261201 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.659918628 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.636311359 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.632935359 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.389699047 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.27263566 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.272381447 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.58352995 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.273392215 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.661747683 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.275800853 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.273029116 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.273710208 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.272638842 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.275914442 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.39103474 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.659283613 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.585222684 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.276127356 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.268203325 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.26797805 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.273224159 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.314555214 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.272111796 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.266300295 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.272385037 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.312631319 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.57015556 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.269022726 seconds)
  done (took 113.944995652 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.36062326 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.726043258 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.267264084 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.267734851 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.380175779 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.362348492 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.467453284 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.330806349 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.322173053 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.361090865 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.38965082 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.701418341 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267238952 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.342358317 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.831704876 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.497693277 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.049184615 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.26814356 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.406903883 seconds)
  done (took 32.862480769 seconds)
done (took 476.799712587 seconds)
SAVING RESULT...
DONE!
