cset: moving following pidspec: 4926
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.212244937 seconds)
loading group "string"... done (took 0.542157351 seconds)
loading group "linalg"... done (took 8.793356195 seconds)
loading group "parallel"... done (took 0.169055437 seconds)
loading group "find"... done (took 2.502541838 seconds)
loading group "tuple"... done (took 2.114642581 seconds)
loading group "dates"... done (took 1.423915709 seconds)
loading group "micro"... done (took 0.195165601 seconds)
loading group "io"... done (took 0.515568565 seconds)
loading group "scalar"... done (took 51.255158147 seconds)
loading group "sparse"... done (took 14.771850247 seconds)
loading group "broadcast"... done (took 1.264546839 seconds)
loading group "union"... done (took 9.952532442 seconds)
loading group "simd"... done (took 3.346231319 seconds)
loading group "random"... done (took 12.363312821 seconds)
loading group "problem"... done (took 2.442819789 seconds)
loading group "array"... done (took 26.506883313 seconds)
loading group "misc"... done (took 1.189847466 seconds)
loading group "sort"... done (took 4.199619588 seconds)
loading group "collection"... done (took 19.99886494 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760501528 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127720222 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.209796791 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.230889207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.26580524 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.174896892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.17137263 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169618427 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.652236922 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211278194 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144304663 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.393664865 seconds)
done (took 6.227718553 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.321120514 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.067100921 seconds)
    (2/2) benchmarking "String"...
    done (took 0.202593361 seconds)
  done (took 0.935458413 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.085448785 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170022319 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115943095 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.103028046 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100370655 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.118059986 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.100892788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11684761 seconds)
  done (took 1.484483118 seconds)
done (took 3.486878185 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.507996023 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.982542542 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545584183 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.196091906 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314494252 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.381530501 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.283453433 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.239920524 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.098583206 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091857141 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.205356491 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.461477678 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.443174164 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.011874625 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.075985431 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.101856737 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.168924903 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.845790237 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087562182 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129727041 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517791124 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.228478007 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124298139 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113210625 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194787968 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136191131 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.149236016 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109542492 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.746517137 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139766377 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217632773 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.091098945 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.147189667 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.178550639 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.22973529 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.119752589 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.760457179 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.207900251 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104666312 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.110124828 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.755942149 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.13502555 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.218289561 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.114061293 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.075635386 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181659972 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121907262 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086066042 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102899678 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.110170714 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.18177968 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.517405391 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112573324 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.208535597 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099539543 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.764744944 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102910782 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284123142 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130447454 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.116696334 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.085342556 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.096459892 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.178001965 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099840699 seconds)
  done (took 21.366021686 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.20150635 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.218072634 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.105400274 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153812436 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.149672106 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090617529 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097062832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.105234542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124572545 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.206834333 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136465468 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.226711511 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084272727 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.116835807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.194314724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246863096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117064398 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.132669315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099600934 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.121049611 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136585036 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102279836 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.119761179 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105000224 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.181902182 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213763147 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118772646 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.132819474 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098878565 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.107508853 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.151684233 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158657816 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100271899 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097196369 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.203306789 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115505331 seconds)
  done (took 5.753395456 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.250352018 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.111680822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25827621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199529214 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115790143 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.157908208 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.192927746 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.193280654 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.322035714 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.281890037 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189405859 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137155431 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104032294 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088607077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088129922 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103821512 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.871392934 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162010896 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168149595 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.196971836 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105622021 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10775253 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.731403414 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110377514 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09399638 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119198537 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071198369 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.204364325 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.23524004 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102564718 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.491986656 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090120538 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121948818 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124586653 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220041529 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132242794 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130390813 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119216976 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09456447 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222110996 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108135259 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.105275957 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08923935 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141066612 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129469187 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.117114124 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.114487185 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.143349374 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095853391 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117995801 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.107014098 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203556332 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.170800631 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.112071794 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289842165 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116574811 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108617025 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.119036366 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092554577 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.817400104 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129853664 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.106230967 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.089510754 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103466928 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.105772109 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.829148944 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112981755 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.422922217 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.104677627 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.149411667 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121836652 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127283574 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096652654 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094518025 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.134982109 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094484361 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087056042 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.113015279 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.089215047 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.115618613 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121462513 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092024412 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.105407468 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157927275 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108054244 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.132081042 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119029103 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.114891495 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095378749 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135979373 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09182271 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095923581 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.215837153 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123191573 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122030672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122679567 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.153223814 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096840736 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.30580474 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092440177 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093007568 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.149820309 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093127974 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13620042 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.123066836 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092089434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093694038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.104036134 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091650341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157108386 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.109928504 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.090703713 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094236704 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.117514805 seconds)
  done (took 29.274369877 seconds)
done (took 57.051850869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.824070435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082425495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106776567 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084633318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082633064 seconds)
  done (took 1.907836115 seconds)
done (took 2.616620452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.200209188 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.278512232 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214767744 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.137177221 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.16266426 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.182104163 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.164465677 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.177817724 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.161463619 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.181865166 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179471915 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.115803273 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.207308904 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181793508 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.131080706 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19994931 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.112876295 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.160420749 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.113040213 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190560755 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.111490156 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095135422 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097285277 seconds)
  done (took 4.48591689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114973699 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109634193 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.112232498 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.132738249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095591765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112474638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130839544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118438385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111811425 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.124899682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096721378 seconds)
  done (took 1.977387767 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110886867 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107745545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102021982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127977098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096244502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108963786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128620825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119358614 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109742587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.125935986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097328299 seconds)
  done (took 1.951102092 seconds)
done (took 9.122925688 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222040107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.022872811 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192146082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.261080896 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343609687 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.311009591 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.621135272 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.213064106 seconds)
  done (took 16.014933953 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.125197974 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.215800137 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105454122 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103949042 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.121157376 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101244299 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104500161 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.126999111 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108165361 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.104857817 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.118645884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101658458 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101827125 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.118404791 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102856445 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10666943 seconds)
  done (took 2.639618139 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.148163464 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126022031 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.126477466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109509456 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105562586 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.128376242 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.1119854 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106548814 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.125171295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105546453 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.128280837 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110270237 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108168225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.120661154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111610981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.128541066 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.121126087 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109482777 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.126714856 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.127339937 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110356981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.107552783 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.124256653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10962246 seconds)
  done (took 3.623026503 seconds)
done (took 22.993743828 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162799474 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110924511 seconds)
  done (took 0.996995288 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.179776213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.196044763 seconds)
  done (took 1.104425779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.123916666 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100357525 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.148320956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114373203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.102329074 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.119445426 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126961397 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.118825794 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.102539296 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101589665 seconds)
  done (took 1.892778264 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.105891189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105674332 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.133159182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.173696878 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.129517378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104424522 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105476961 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.123965136 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108092377 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100711062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.125057802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119522252 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106494827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.139967939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106168319 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.124560672 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11095524 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104525024 seconds)
  done (took 2.861250233 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.102826973 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103407773 seconds)
  done (took 0.939068997 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.104950707 seconds)
    (2/7) benchmarking "second"...
    done (took 0.10058849 seconds)
    (3/7) benchmarking "month"...
    done (took 0.102492224 seconds)
    (4/7) benchmarking "year"...
    done (took 0.120904551 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101274959 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.100079556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.118127382 seconds)
  done (took 1.480815612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.551013436 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.251564882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.394830097 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081091457 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131001435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346296271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.113411349 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.080314473 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099575092 seconds)
  done (took 2.809536603 seconds)
done (took 12.816487278 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.102711874 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221049548 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628727647 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.146791013 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.104401125 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162360311 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.362343005 seconds)
done (took 2.465464429 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357621385 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.190262044 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09302866 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.103432007 seconds)
  done (took 1.477913218 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.093639212 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110337495 seconds)
  done (took 0.945549571 seconds)
done (took 3.164138541 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127466629 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104761577 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.165463849 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.113677444 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.099952375 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.118112716 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.113337737 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.246044696 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.105282522 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124022475 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.132157937 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106186129 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108288841 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120498563 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105220364 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104442542 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.130310775 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102384109 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099004 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127340145 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10542856 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112245 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.120191401 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.11235067 seconds)
  done (took 3.669651357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121991491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102262515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.12144205 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104809208 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104304954 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.122571243 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105704504 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102327817 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.12233497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103807684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105071811 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.12192584 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102877817 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104681958 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119081972 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105291253 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104246636 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119325649 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104235043 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104412719 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.123672361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103775138 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104805577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122639688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105422694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106408224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.120703059 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.103874732 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104217163 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.123391599 seconds)
  done (took 4.064085454 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.107209233 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097602356 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.099911518 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.127763873 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.098382972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100555035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.115207877 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.10181148 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.10134948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.117942932 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103795672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.101694007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.099012172 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.119595376 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103887372 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104367252 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.127053657 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101923366 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099921575 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.1196905 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105124122 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.100757784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099579423 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.11958015 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.100857449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097302318 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.120500798 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101727741 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101513467 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.119442773 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104259277 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103902598 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100022007 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12807753 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104146903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.101174318 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.125152508 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098951271 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101869518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.116838461 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099279315 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100515646 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.099884629 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.126668622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101709163 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100559715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.119564156 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103998211 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.101084992 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.121663795 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.099553233 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100638985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.122458939 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.104313335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.104218839 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097517638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.120309364 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099208496 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101973652 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.119041256 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.100245569 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098169327 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.123811764 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103015125 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116849077 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.124934812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.102411486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.102822014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101561379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.126363276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103930954 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110241882 seconds)
  done (took 8.503384893 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102613118 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101575138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100506217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.120896868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101824331 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102102858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11928591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1024279 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101562776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101514794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12041196 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101779982 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10099762 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118231585 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10237063 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102255252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100601131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119955687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.101412407 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100981486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120143002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102179334 seconds)
  done (took 3.097628686 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.249916138 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109169888 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15165029 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136472103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119866011 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.135669906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106061183 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10735583 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126215492 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11220575 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110281342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12693332 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120027414 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12995682 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112170479 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111916257 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125687003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114323267 seconds)
  done (took 3.060169104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102843245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102606972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100749474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1212833 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102003614 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102183385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120070646 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10242308 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103865513 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099995887 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.121475154 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102428738 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101771741 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119308677 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102979925 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101874128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101574998 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120282893 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102531264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100824553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12148137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102351213 seconds)
  done (took 3.11294041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117786278 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10372583 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.14126545 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109564351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10363804 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.122114551 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110953425 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.104597868 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.13091574 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103639576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104305512 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120868583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120414335 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103729462 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.128863315 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105092693 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105068109 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104230224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122476748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104622592 seconds)
  done (took 3.026118894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1998787 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140846542 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121711288 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127580749 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142042505 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122619783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148254048 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121187547 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120440875 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151696594 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121515732 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139282167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130478533 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12548544 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139962491 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129290743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14850408 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130519111 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120151243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1405926 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131250001 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138733913 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133598483 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119831649 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.140697571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121543878 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120228138 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.144975908 seconds)
  done (took 4.531804778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103959938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103267601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.101627169 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.12312264 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.103823049 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.103007932 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.121611624 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103830941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103034541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10270461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.122623834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104788954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10264783 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.123000418 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104345043 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103636433 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103515049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.123711193 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104777431 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103405538 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.123532818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104330655 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.104132725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101832083 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123606291 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103694611 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10225574 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123408151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104740764 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102836052 seconds)
  done (took 4.019591178 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.115981858 seconds)
    (2/2) benchmarking "in"...
    done (took 0.113256232 seconds)
  done (took 0.992765071 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.106402008 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107180669 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.105149754 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.125654876 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106360523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106441399 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12499697 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106723209 seconds)
  done (took 1.651563094 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.200425627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.225508076 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.13077082 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116476544 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.224877898 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.203074917 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142890307 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.109471323 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.123648615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09736301 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.216831553 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094980584 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.124885644 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102113195 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102873138 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132251594 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106389787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112115653 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.129979588 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109058701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109325914 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128504749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10845632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116300822 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.120013096 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106936573 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106208478 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.136014852 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101247023 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105801443 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122551338 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.106007056 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107780046 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.129753582 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.107024713 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.226299587 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11185298 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121779592 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10676665 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110073425 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.157851428 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.106903399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10530103 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.124053764 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109123793 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109699215 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.130130305 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106905983 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097014432 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099697035 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.124585885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100144439 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103977538 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.125002837 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105356065 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11134733 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.127136349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102396471 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101477289 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.120864532 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103865653 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099612458 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128108679 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108155653 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105172802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.125283389 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104710103 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.104943792 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.127349155 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107222993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104474389 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14026218 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105901316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109751247 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13167261 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107365398 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102085817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132138521 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104678535 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105097303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.130941581 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.133564401 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105702827 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121722532 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101804008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111880778 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.129438528 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110030053 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09723967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.133474445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.109123653 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106557125 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.11731855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106477228 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100013836 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.129469886 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098219892 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105522776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104678674 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.131749715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111303609 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102729195 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.12822741 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110443024 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112182073 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.12528751 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158105092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.12333852 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102181919 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.106547209 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.133026413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10080849 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.103702992 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.126788469 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103075887 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100896769 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.13150122 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106858002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107424345 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.130963232 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107732485 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106152395 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.127799701 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106499088 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.1025423 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11002733 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.136943741 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107821323 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108302949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.12911132 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.108298548 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104818567 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.131300706 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102879913 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110962086 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124224037 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106548047 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.106974567 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.132638864 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107545379 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101018991 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124897377 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107627443 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104893367 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.130042096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107553411 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101627938 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.120113738 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107260707 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100221613 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.129363099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116459921 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101344033 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.129491327 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103082731 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114461064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.12230403 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113456607 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109791824 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.132757874 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113164181 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097740711 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123404659 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110271565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107139951 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102084141 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.129705321 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107062498 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113059 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.120439897 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112137095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09923727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.124454234 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.113000752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109844834 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.129419809 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103167519 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.145235718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.139670065 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113644829 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106128859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.12722393 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.111533876 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105499729 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.131745664 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113848835 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.112069349 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.12315798 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10630891 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112250797 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.121883166 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.109599203 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101668027 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123521364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096710203 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.1055255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093035714 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.128703238 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109177291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109822066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.131698102 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11028686 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104733291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137107868 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103191334 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.110589132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.120236379 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113268245 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.118011655 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.135470579 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114151877 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107738281 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125088113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.108982364 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117039954 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.129380558 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108296872 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.109135806 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.12016563 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101706229 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113093642 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111007762 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.124766634 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.10747491 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107806307 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130430483 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105250814 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099648356 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.133324286 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110759895 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102671785 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128807161 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104089634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104694459 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135274744 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099518731 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106255271 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.129969042 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.112780333 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.106611811 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.127996863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110503997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.113499838 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.130842965 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.110296708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105591919 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.136976078 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107152173 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107409189 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.123009358 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.111068943 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101624585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108463863 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.128837752 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104854535 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101614947 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.132315359 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114276194 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113587838 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.126778971 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.113448994 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113478816 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.135225157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1064495 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.113829559 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.124158945 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101386286 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103927392 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.121377377 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.110549812 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102654674 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.133645557 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10641402 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117764627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.131807823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109801952 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104741741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.133647861 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118840671 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100785931 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.121523065 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106636256 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106013132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.122416265 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104866058 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.108809577 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128831606 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113628277 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109520561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.12376986 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.108882142 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115674067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103940452 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.137380459 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113383412 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11327893 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.124549847 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113052994 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103898129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132784553 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102831582 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105809265 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.128202755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107742611 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104018255 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.127036057 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104477322 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101628775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.125401282 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11413714 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10522644 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.134395372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107319303 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104349932 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.125903301 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105742078 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115389114 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.137523634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114582448 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10909439 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.1217101 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10222536 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.114129108 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107925875 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.138652198 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101726902 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112582892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135504801 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113970568 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.108584129 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.13908291 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117813795 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.114997096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.135192402 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102266567 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105090529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132966 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109413774 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.111540441 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.132757035 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103711513 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110983876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.134636186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109893165 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106218326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.122087103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.110038923 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11548801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.110956428 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.135737163 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112267908 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108034548 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.124039865 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113053133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115560506 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.130056692 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117470734 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108646428 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.133858712 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105742637 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.114522454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.129797232 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10338703 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101988738 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.125744132 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116282385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10221209 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113861826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.135854776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105779443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106463888 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.136049703 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105101912 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109837571 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.136795258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107223342 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118564589 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.133039684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107534903 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.113333546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.135861062 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103334788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107321259 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12889188 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117244658 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106126345 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.134226775 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109401692 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115468944 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.132953429 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.115461749 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.114835064 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.113594962 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.125097053 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117640519 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111512505 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.132906706 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106441468 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106147087 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.123702323 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108176047 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116368569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.128305562 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118675356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111367305 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.125944787 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106920929 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.112038549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122294742 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110474663 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097728001 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.12678854 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101397112 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110055406 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.127744038 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117576823 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105893214 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.122321701 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115509801 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115922353 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114146149 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.133026972 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117339503 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102668991 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.124236888 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113465825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105260034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.139876167 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113368956 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107157482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.130068356 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113247222 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106684656 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132621683 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098346445 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099502947 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126576711 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110196835 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108043418 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.122736139 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.113413724 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108225634 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130733524 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108986764 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104051988 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.129717474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117323649 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108057806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.124388583 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107846745 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117356404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103692655 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.127944832 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102767118 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112762663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.131490115 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117925471 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103811525 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.133461594 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107916098 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113049432 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.139886783 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109071412 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109914326 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.129954305 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117039325 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114254683 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.124072761 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107805469 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120352595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.13587922 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111979603 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113355406 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.130587975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117814354 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119168925 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.13411929 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104732872 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104837075 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.127908584 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104826948 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113348003 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13541764 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109092923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107802466 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.135994668 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117062162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.114937452 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.113496416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.121381707 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118062848 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106149671 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.133470115 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104915436 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099792998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.130351004 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111468505 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101024229 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.125579726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105388611 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106991678 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.118470862 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10152548 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107766428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107075068 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.129580864 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105686834 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106235088 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.134094357 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122380926 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.111940282 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.131748527 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11848916 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.112188498 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124905758 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.102576941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106038205 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.134128579 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106608529 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109932346 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.127290977 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110292307 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11856396 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.140006072 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120199084 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106271405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.124248202 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117124322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10766418 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.125581333 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114309019 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117342855 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.139591634 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110243838 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10759811 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.142371386 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11769709 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105713443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.124516672 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105239989 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107519399 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.12245412 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.112988949 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107234167 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.134362756 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.115977597 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1118094 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.134027868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099857251 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108466167 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.127352857 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113651743 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10644985 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097199442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.123109649 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.116827706 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11762194 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.137377106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118002296 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.111380644 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.13135127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10795018 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103430192 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.122588843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116553718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111745844 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10492291 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.132014553 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108613951 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.131050324 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114402467 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119132118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119735757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.131534813 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117879864 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.109537602 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.12477746 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101657341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10377402 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.130441797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113452137 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115011553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.124060538 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107070599 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112004396 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.131201042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103578675 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110804244 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.132804667 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102018978 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106375329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.134340757 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108834999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107621437 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.124778507 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108644054 seconds)
  done (took 70.248130997 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.165278211 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117083255 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134238858 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11611302 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127739568 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135030509 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10842559 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10703491 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.133377785 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122482824 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112857298 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134437626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130822502 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.157943548 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133719867 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123844659 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134371766 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115113381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107920568 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131412521 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127368291 seconds)
  done (took 3.494285063 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114435851 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114938638 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108525113 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13098202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114011356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106119221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128164832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112554466 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108639165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105072999 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131035238 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109136853 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10605357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127834342 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110539057 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106868478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10561776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.129832083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113761883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108765926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130644966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114660251 seconds)
  done (took 3.355975225 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.144083895 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117615585 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111469203 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.136550185 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.119817471 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.114288486 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.136255037 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.11514921 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.125117168 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.129971276 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104960624 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.109028529 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112414574 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.138684466 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110646263 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.114974956 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.147806575 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117903261 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.117712944 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.134699112 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10633489 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109228136 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.130068914 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10279736 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113275788 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111476536 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.136066115 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11210846 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095929098 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.135169563 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.112246885 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.100368839 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.120531179 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.105342516 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099423397 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109423062 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.137335342 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.109299654 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10608898 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.122114621 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.110802079 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110578866 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120982633 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.115790982 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.112790251 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.122427929 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.120089293 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.113315667 seconds)
  done (took 6.481129619 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.144844886 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174036796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.118256519 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140494263 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.147391578 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123073681 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109398548 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141992778 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110777425 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.389955175 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128394959 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119680373 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.136803011 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.121886379 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115315014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.137606466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11873123 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113595241 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.142771438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120689719 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121464678 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.145278879 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127120216 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.150209744 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122529828 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119216557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.140322174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123304088 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127812622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.146936911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122504684 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.143189647 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130069264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.117524163 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.137685385 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120562678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128021238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.140972326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122893212 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.115564696 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.139263799 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12090057 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115577268 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.149043394 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120189376 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.139140808 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118962264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.11103046 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.141856726 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119531821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120719681 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.145589255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120236519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.11321286 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.139709107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126641733 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110357051 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.133600858 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112408498 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.141042447 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.109676377 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113559483 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.14608827 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120895402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125630222 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.150380995 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123309186 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11904349 seconds)
  done (took 9.93609355 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.154097947 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117496366 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147206848 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131469651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120120792 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.139124744 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113412537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.135221245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116661064 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119427407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138651361 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.247842969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.111900193 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119838284 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136611157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116430099 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115120016 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142023158 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119793096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114378372 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.14035025 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131141607 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.145299972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133482337 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134313029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.139944682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124502145 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119602221 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15029083 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11828215 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150104703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119360779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115404759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.147475178 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126239378 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.13821604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11180933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113885851 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.138600097 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119665706 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111006294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.149033128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118791223 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11162872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.141042237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124931879 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.148475375 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130397308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11986643 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.148154594 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120048855 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146566683 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117954595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115043261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.147632461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.135432865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145291591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125137142 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116566988 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147333749 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129004464 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.154005269 seconds)
  done (took 9.009548561 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118043293 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116883299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111113641 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.131846236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115102766 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109935279 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.131687696 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115269477 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109621552 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107814967 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132969912 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114588803 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108875228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.130467709 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108974262 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108237996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108505209 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.129449772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109171843 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10668696 seconds)
  done (took 3.156200659 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.122586538 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118747084 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.109074136 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.136125062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115398333 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110490866 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.132958668 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112379375 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110475641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109161716 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.136949259 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111544981 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109976695 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135261056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115349165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110637742 seconds)
  done (took 2.731305986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.139609863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132615956 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.218709237 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.121856418 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.140406053 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.127294609 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113655724 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.135986845 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112101756 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11589246 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.136384452 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113172772 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.124915816 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.137198732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113219496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112449775 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.135038471 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.115406785 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110099685 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217290271 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113337387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.139635425 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112934892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114476079 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.138807316 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116313744 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115269197 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.137800135 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.114770181 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109856567 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.138324503 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.126815848 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.110309768 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.13983112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.115164855 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110855857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.134649106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.119027706 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.116038499 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.134939226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.118051674 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111561953 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.132569722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.114603191 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109836244 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111102606 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.134130045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.121673713 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.113093083 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.137147329 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11540448 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115665406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.140872104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121309421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117228734 seconds)
  done (took 7.784911965 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.132489963 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11532954 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144819184 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111680403 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112333907 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112372809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.135625208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11199413 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111904314 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.134041347 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112911216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113017375 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.136297918 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112451032 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111481006 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.138782243 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11171651 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11149672 seconds)
  done (took 3.013886543 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119068913 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111096739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109217938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.134766509 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.112020321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10947698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131024972 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109181482 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110480251 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109099419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131547524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.11016366 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109075323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.130649505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109896098 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108649571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108042371 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134980782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112934473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107433844 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.132765976 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110799634 seconds)
  done (took 3.403619762 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.132804458 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.248513096 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.121666729 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.25156984 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129341936 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.106509494 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118002086 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.132472293 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128430298 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105580744 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.133114832 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.11035698 seconds)
  done (took 2.562278416 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150115179 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148784074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134179773 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112616416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118129827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139954041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117021865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114897991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149320734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12567918 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138504065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123393903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121603173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14791455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118973719 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142677152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116178671 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114679876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135652027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130387531 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137270948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123342152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115447083 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138147805 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117247452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121993306 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144469908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125577072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137611005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124238076 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117765534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140192757 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123094425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149612322 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112856739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122045268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139869742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132424103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140170827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124361345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11115813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143437514 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126601853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142241552 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125120659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114534886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144248372 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116007979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114636156 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163203296 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12048676 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14684053 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121255992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144560004 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124776063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134820078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149532004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123653852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14536653 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133426324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149365992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126350146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122273999 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151798702 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125891707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150428975 seconds)
  done (took 9.508910875 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162027936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117269033 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143913133 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134049518 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150003363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124053136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117675579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13936423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118450677 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112417438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184185223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117856258 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148722893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125898971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114592994 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142904695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11724822 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145860238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11608655 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13458136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141863711 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127026838 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146445509 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124539161 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126198939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144062244 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116494074 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136608154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117234741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114452543 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14267834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116721128 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123204983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.136776541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124103282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115127698 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141500536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123409828 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139846555 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122547148 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122447904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153729395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116031934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137106541 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127766248 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114614296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141453742 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116395318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116238804 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137934719 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129210285 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150444969 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129273492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123382869 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139286847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116648214 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137431862 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116928556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116881273 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145481908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126780298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114338074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163528057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11643429 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14188997 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128972197 seconds)
  done (took 9.480298717 seconds)
done (took 184.637182847 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.194545968 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.227821568 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.208087913 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.189794806 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100665036 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.163080585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135999836 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.206542816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101503131 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100140807 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.126808584 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105896427 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.208650905 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.123920087 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.1022739 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103984662 seconds)
  done (took 3.24597255 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.214418467 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.363883703 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151643865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105826167 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107398294 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.129171454 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105735163 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108833113 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106027659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.134570255 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106911221 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101785499 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.134866801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103314884 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.127491491 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108221723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113036023 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.1279544 seconds)
  done (took 3.312147097 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.138920599 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160558685 seconds)
  done (took 1.157207491 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.149689286 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.224430146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302573183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.183119097 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.129016266 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.148405254 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15656118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.143884498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19621741 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.145423311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120091249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.128370654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134729633 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112028073 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.147444518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106680605 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13441842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.148291204 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.123747091 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10729018 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.156539599 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111095342 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.135626675 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126698095 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187131618 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.144408867 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112215177 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.133735303 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.110090117 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.121086138 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13916211 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124889275 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.14134451 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167061328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.132901048 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15847525 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.1386295 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107866301 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120536347 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.133076489 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112954936 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.131658083 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.119999896 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.104571329 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.132408737 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113862803 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.110214295 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.133426325 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114848195 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.113726683 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.142081824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118188632 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.182033344 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113206505 seconds)
  done (took 8.349851891 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.944734453 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165234839 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106687868 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.089727681 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164258388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130623105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.959567554 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135904503 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259011638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.950929375 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124023732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137775271 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250568106 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287863002 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.261284064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366078954 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.773479784 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118401369 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160878349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150248855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135358414 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124410025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14288067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430169577 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.106156027 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12894454 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112581215 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137500795 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163043359 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130728844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111770987 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206891044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300112256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220325783 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108195742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105865836 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129282851 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171675881 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.305447152 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.23475604 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176788333 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125663885 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106638002 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111157851 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143176237 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104377659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191929714 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.199644382 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177916899 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13423362 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11547034 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13577802 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115896162 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186966094 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105738446 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365088326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.391539036 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107681919 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112721108 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141824251 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275120321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108922859 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248379071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152553478 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223132704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107311831 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81606844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.197061721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106772097 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13381122 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112560194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112553699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132685099 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166982547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.431042592 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113370212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135295556 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106707215 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247169769 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108330326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128697092 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167059582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132197887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113860848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114857413 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135922871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.199373398 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258459194 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137161716 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114755025 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112570531 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140104059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10823597 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.239905647 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240075012 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.190700019 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23745359 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112019203 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192644121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19620435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113159292 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.198983264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111871139 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140893545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111896352 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237308949 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.167703588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110537311 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111731876 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13884971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146797369 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.13431736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113687991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.199787208 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.492322871 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194350832 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105247602 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112798282 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135384185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167115455 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139771754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274180327 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114591178 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.198988084 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112421 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.126206831 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113704333 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190597701 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115498975 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113769425 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134610553 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116585915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.290412558 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23196148 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140817069 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259130857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184575986 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135049785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179929933 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136492986 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194765759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118280195 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110208079 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129765175 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804127886 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119605084 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111871558 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13734477 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191287873 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129625003 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111216796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106903259 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126909994 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815856542 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111048689 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105069158 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131793994 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114275635 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112722924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135709226 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112835299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190915828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255214647 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13971204 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11222712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108109139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.191678076 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110284625 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.130996896 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111199266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108900301 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.136709843 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112474219 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111042961 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198368801 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.191128145 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.241648257 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.591819672 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107204555 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.131795531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255123015 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108043698 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336552993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14043853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.245042963 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192457923 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106103437 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367907259 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193698723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21209366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.112721667 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203753284 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10621197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136423284 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166772884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.131075746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116106664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.187728412 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117546442 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13700136 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266326255 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108184777 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258898216 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106038065 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.201484211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109671698 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135798763 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.339764365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108604802 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142095654 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167639894 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136049284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108764739 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.901057391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108946396 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141114313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113827254 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.244796772 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.194292794 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11557587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140477222 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117730055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189142628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237526085 seconds)
  done (took 48.614940141 seconds)
done (took 65.537515072 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272738593 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174979374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.366981304 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.155333999 seconds)
  done (took 1.901822361 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.280987408 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.176262149 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.250281827 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105024738 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.254578463 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10527875 seconds)
  done (took 2.061699117 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.189420526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173041907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149312284 seconds)
  done (took 1.403189261 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.230959887 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215886322 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354720806 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.244470474 seconds)
  done (took 1.998852299 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287567504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124164672 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135409328 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237842885 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247758531 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214826062 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131326128 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184205548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.138487303 seconds)
  done (took 2.625896072 seconds)
done (took 10.876823443 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.457971506 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.369180326 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.275694975 seconds)
    (4/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.321649143 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.277607439 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.185367007 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.148515743 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137211792 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215377528 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.261767645 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125468469 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.262870509 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.437158524 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.170663742 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.122173776 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124177104 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.140494472 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.272003235 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.43242559 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.326167245 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223454742 seconds)
    (22/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157212311 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.145158752 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200789291 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136456318 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.152219287 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.348134145 seconds)
    (28/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.189239288 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.156170069 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115104791 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.14116439 seconds)
    (32/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.102128141 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.118627097 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.210260397 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130456673 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.232287291 seconds)
    (37/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.290674883 seconds)
    (38/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199723093 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.147381871 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.147463445 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.296601055 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148272137 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106998802 seconds)
    (44/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156872393 seconds)
    (45/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180969312 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09898242 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.149356004 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.359843036 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126140552 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117361992 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.298487747 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124820831 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.117149255 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14541919 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.150199338 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.224456546 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.144144168 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.319469606 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083407394 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.115394283 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118414918 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109979419 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089986373 seconds)
    (64/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.20137009 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.087186925 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.138240135 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.306031864 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.117278601 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173574586 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084485254 seconds)
    (71/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092610939 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.115742092 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088489046 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110867381 seconds)
    (75/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117097363 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.11130291 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.092037611 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111180479 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109784701 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.239969622 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.137968243 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.131569385 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.2069414 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.142691958 seconds)
    (85/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.190204914 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13114447 seconds)
    (87/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.115230924 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10047828 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113951083 seconds)
    (90/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089660983 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.139677958 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.088264157 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107320281 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117327909 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163510038 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.092898685 seconds)
    (97/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.22510586 seconds)
    (98/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.152406252 seconds)
    (99/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11902128 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.138077475 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.088087459 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.142859927 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.132918858 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.116476334 seconds)
    (105/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.141250783 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091938088 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132586273 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.091028545 seconds)
    (109/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094588424 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110692707 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.20655392 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158649224 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116798302 seconds)
    (114/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084549369 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.111090803 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.088808081 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135111316 seconds)
    (118/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.143898257 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119586646 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116921572 seconds)
    (121/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085725217 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174121723 seconds)
    (123/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094547708 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095357937 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085749592 seconds)
    (126/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.151635134 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.118214893 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130445499 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129615575 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115816055 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112857857 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118720544 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086355046 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.138649056 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120370893 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116501058 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108575609 seconds)
    (138/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087100741 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092622183 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108973075 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.109358599 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111436867 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108296104 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117652881 seconds)
    (145/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.108284789 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118274608 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.140798561 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.120591452 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090912189 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121614208 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10881684 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.113976226 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110333304 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084699458 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107481685 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.113099508 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112260015 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118524988 seconds)
    (159/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.156268265 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.141330123 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09220118 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.137695722 seconds)
    (163/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.111381063 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120806982 seconds)
    (165/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.138102687 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.112653641 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08512549 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110751863 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084857858 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084118798 seconds)
    (171/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.144865698 seconds)
    (172/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.091665008 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08836857 seconds)
    (174/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.084623192 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.116173921 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11185752 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109019381 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10736044 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.155118748 seconds)
    (180/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.091075478 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086758658 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13579143 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089462284 seconds)
    (184/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.08596582 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111395032 seconds)
    (186/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.084704557 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.13614762 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089116989 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092773111 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135751341 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089015579 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111874561 seconds)
  done (took 28.885641464 seconds)
done (took 29.779790364 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238139292 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.138126573 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119947795 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117403827 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.240109723 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124493066 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.162003143 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.119619681 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.153403446 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121918577 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108383056 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131547524 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.144735444 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.252834806 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.122895097 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110244397 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.135091621 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.130218095 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133904947 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.161577251 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.240546441 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114915381 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12997414 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.109589565 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.240243748 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137490389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118359674 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119194417 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.156868901 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120947293 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118543986 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135625697 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136595653 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134773075 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132692642 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120892678 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107626395 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091180659 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.145681864 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120886811 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131239035 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.148101794 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122606723 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110906911 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.144234612 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119801407 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108808459 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.14739074 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108918949 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119781643 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135416871 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134825874 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117727751 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.132791398 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108404079 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110254942 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.15418092 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110430314 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132271289 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133555391 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112537844 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109783793 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.144504619 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110824987 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117999502 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109558554 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143811654 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120606119 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117333216 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138069653 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110060923 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118206233 seconds)
done (took 10.620207221 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.120478938 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.152297509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.254434869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257252057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.163753156 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.126028317 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124198196 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159194895 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.123077033 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125973771 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.172498822 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142329762 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.260405671 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.150565515 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.125973212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.121084462 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.145870924 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118100074 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.25715386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134023678 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158655092 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126590818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132977106 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.153675408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113385718 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.171047101 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118506969 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121334005 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.136879138 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123921764 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133785659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.138063995 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.117370023 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131211937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.158485586 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124876774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.125904488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.147262931 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.115132868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.116505528 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.146510182 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12948979 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113231228 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.150236004 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121586272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.153757192 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.123352209 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125186869 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136910287 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123092049 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114800562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162104133 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127732724 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12877266 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152185065 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127749136 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125669053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.151667262 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.117844455 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125681415 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13982197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114532442 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114100543 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.159523079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118440201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125853504 seconds)
  done (took 10.256922546 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.140554536 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144239711 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149550931 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124682196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.119115636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.134279227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108827456 seconds)
  done (took 1.865098977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.117156379 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.275070385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263917081 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264610465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.254994716 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.273462079 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133073836 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109736231 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.172032421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120315789 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.273691577 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.329295646 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.14784841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125762221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266669176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108263628 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.266747678 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.137919844 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125410711 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.267333925 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127622584 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.167798293 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123493846 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110405241 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266912782 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.139550917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.317700456 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127888888 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146372663 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125406939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125838837 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.214379357 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.270063672 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124206367 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117340062 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261407265 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.258319371 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.152843808 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.313257014 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115297972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.254130919 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.152293249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126848532 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125072958 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.152603414 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.252698265 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130533499 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125171015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.150306963 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.278586334 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.123022138 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.272277083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121756545 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.149259553 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12259464 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125811879 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.159326755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.128349213 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.278085084 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127321219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.262604274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.265575113 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.259512051 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.264566325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134358147 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.297935652 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.221680354 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.152447039 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119881935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12596078 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266193068 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.151967719 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123906469 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.255555332 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128081791 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.268536383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.268504465 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14855262 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125143428 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113148886 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.149482347 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112213012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.258943962 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124507663 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122221967 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156625015 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123914779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.152325097 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117528144 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132335823 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.150667414 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122859618 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129979588 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.150414728 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127111066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267789291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.148224436 seconds)
  done (took 18.447021162 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.121165268 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112008797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115086563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.138017272 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113443197 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112172156 seconds)
  done (took 1.678344152 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.155867027 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126732456 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15975167 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126283796 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197909175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.231899601 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.264745189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14780448 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145544835 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137191538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.259992 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.263180814 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.26042327 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130130515 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262778947 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128690388 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26640769 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.151848709 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134151906 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122573828 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152884036 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130354425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122386583 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249022798 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.155156742 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129025276 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118528899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.161322191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133728528 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119165293 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.158358266 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126030551 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.142032377 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122156247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.266190554 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117163712 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121745439 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.156148418 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12846927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125058431 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.265469792 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.151889915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133210516 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127692705 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.148641179 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117856468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.154175053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120408818 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.268349069 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129652241 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12827085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.154429205 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126959371 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127873314 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.145269241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119373421 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.153545922 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.240002936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.15830798 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119620799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.153016036 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127695358 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120326754 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.156691434 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127876317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127767784 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144260105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129565359 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122753319 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.153351275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129626191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126403644 seconds)
  done (took 12.295654637 seconds)
done (took 45.479823099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.717402332 seconds)
  done (took 2.68697891 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.118969738 seconds)
  done (took 2.091131841 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.499276479 seconds)
  done (took 19.507251446 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.431665158 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.352612508 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.026931567 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157828869 seconds)
  done (took 2.94419004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.094288108 seconds)
  done (took 2.083459985 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.422741607 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.283022443 seconds)
  done (took 1.686954815 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.740247276 seconds)
  done (took 1.724484727 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.918041463 seconds)
  done (took 2.899543371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285353116 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.250820792 seconds)
  done (took 1.529404892 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.682007328 seconds)
  done (took 1.673446044 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.766916101 seconds)
  done (took 20.763420125 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270666751 seconds)
  done (took 1.270871037 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307245914 seconds)
  done (took 1.306642975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.706133441 seconds)
  done (took 4.707674279 seconds)
done (took 67.860888456 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.133332318 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129265949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1527417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129867003 seconds)
  done (took 1.532641057 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.137040402 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147241978 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.153437599 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126273041 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129986851 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124366373 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.151618443 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128401244 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124406323 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.153391154 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125945695 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.123565783 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.153761103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125096635 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123719014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.153955611 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128967308 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124795618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.15248657 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126683009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126803346 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.153496474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.129351715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128832654 seconds)
  done (took 4.256508666 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.131287855 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117026124 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117827973 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.142078821 seconds)
  done (took 1.510475669 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.141643431 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138343919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.161163791 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133584515 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138315145 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.162401867 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125506044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121571535 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.151345922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135047551 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.14028013 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.164575468 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1368431 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.152528195 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.136890941 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12086069 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.152730316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139621107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131691258 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.16031885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128233276 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131079378 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.156440425 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136280598 seconds)
  done (took 4.396325469 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209213686 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.137523424 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180837521 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171851253 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.183402302 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.126582437 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152541255 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.157562424 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.133818763 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.133461734 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.154561903 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174680244 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15675045 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128440076 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126065473 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.157518145 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.135612427 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131212147 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194744597 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128304095 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.156857167 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.138491633 seconds)
  done (took 4.377369846 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.13608155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116623629 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.139704846 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115283096 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128159314 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.144030746 seconds)
  done (took 1.788326225 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.123266094 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112169153 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111089057 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.137265919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114849521 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.111017749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.136155443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112580378 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110188523 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110055336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.137579576 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110939666 seconds)
  done (took 2.428089913 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221593891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154680075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287429917 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395169875 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172786288 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194019156 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284394475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194829664 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212801642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144448396 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214863216 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169592586 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186019535 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197618776 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177442467 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.167238376 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208829558 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215494932 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177434295 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24645683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162878324 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214784646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195080114 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18350455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145645407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198567848 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126773104 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163158248 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17624413 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198806427 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208871673 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158684634 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147778848 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220925022 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270284231 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21229627 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301442593 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140590993 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205498967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.226239454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236778853 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174674726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22621466 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159548012 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162709029 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199515945 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184679351 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.190317777 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.168075424 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151918481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21648109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213096233 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177901534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169906382 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309472664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170000249 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148192797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211819743 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222368571 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209170104 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213846188 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.128977854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206214841 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224725714 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25068963 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150640106 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.197424687 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133500147 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169731849 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239567476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218700576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165013931 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226794832 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165214305 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180146861 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200975837 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16226393 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242357216 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205636346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127558889 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157060126 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169887106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132705772 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.22665047 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129590921 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253359453 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13883204 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.218128297 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183897268 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188844057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167026128 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197421334 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195438889 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15612111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.107119837 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178296695 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165382274 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192521549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136066884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184814214 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149778613 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132244471 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187106963 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129957378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206119926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14081253 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194538984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176818365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.166918014 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186284652 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1831309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171597031 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202940821 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228130756 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13836124 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137815989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255065815 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205158073 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143833724 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203959247 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205355583 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183895243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140949767 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200729157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226891352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150073832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235239482 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1450586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171070287 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14551201 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208655723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165925081 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.195522838 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134773424 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.201465144 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194063854 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.161795854 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147334518 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219291923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14098392 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160872972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145020117 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142477476 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.179510188 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158782063 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.175101387 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1608736 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202710903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17207279 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193073993 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142136441 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208507171 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137046408 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.205020345 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153580704 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.154007503 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179654829 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234167487 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134775658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215869141 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193737136 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190124666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208384041 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136166548 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21991337 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133386096 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.156067961 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168781309 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204114504 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168633036 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223911085 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211843489 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174025692 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.197268172 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184161896 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175488237 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.218412481 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163858127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.175162638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177853692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203465399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126893721 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.157688488 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135677589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143244054 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1665767 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144559584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216444424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16933571 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210102206 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205061132 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145008594 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22625028 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131548153 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194585289 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181516589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176199781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195810235 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226332553 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214380194 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146685134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199353563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12729859 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132199353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.169956738 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165387442 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176097184 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14252825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180272226 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196656712 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205245304 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154260398 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223444965 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198222693 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236847926 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128690876 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167358503 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20150209 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200770503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193303911 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141904428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.193633073 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197311125 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180351356 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226159416 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175120803 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216139636 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197651461 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.202994668 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137142789 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18039368 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166315283 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174680313 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165917188 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178981209 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137658846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183545967 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145666359 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145444682 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22186725 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180869369 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181752372 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.190066838 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175262301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161913467 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148885413 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209344638 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152607675 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.139004548 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172810523 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227215067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155749205 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187408189 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174420155 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167309893 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322532705 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217605465 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205994072 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143974454 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144058473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207894593 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161835873 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196249747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219327471 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14950749 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246316797 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175881444 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.175530492 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137091036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181622538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156000005 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171749774 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158805809 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.202822649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149392741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222274704 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141852396 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208861336 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181953236 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.183349921 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.157006628 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17516145 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258117112 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175813978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208665013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170988084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.198753417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187606539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159627421 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133258426 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138083202 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219107262 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134618586 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213998372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197947099 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212950264 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182837287 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197905124 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147281299 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133531925 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20265482 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153964062 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218563827 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170041945 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143916415 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221155288 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132892598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137543189 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194904324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318674253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153918106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203966929 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113066753 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312986239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137246015 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13841404 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194713168 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202674516 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142717869 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189987987 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208104536 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145936994 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195877981 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141700631 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211456708 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214480975 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173995869 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211426258 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150870792 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197922934 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162281111 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206068942 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152938513 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182748659 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163787937 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230956325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211707648 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13924592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204706967 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176966917 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207516473 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179550766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175336193 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189837409 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164796026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172608681 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174408003 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131581467 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194253054 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.172411799 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165633004 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179396136 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209360492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137818992 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162160425 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154446875 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202117392 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147991585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135953322 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220847707 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.16475936 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191123605 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248926417 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136458764 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204247063 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150655331 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166181956 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147602499 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150730201 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168954306 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181818512 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212741718 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141653209 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209636365 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174144003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200097932 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159566869 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180246245 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.271788752 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.164400375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197413023 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187774926 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203297221 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185646093 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182119877 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206237679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155299986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203527837 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182914461 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228566915 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201796052 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17463799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166309557 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150220499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14510707 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169378941 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156357802 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206413329 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148088106 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.171129513 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174365399 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181409381 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154800132 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147974194 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23474724 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186291078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192648451 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224487136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143679305 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212415559 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210747191 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13586155 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197959252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177714848 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178188511 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159860622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140334466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.17506046 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250492748 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13337995 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165096554 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211423673 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20488611 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180261261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167346909 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185452494 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176082238 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184784951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131959448 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.186471478 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175059622 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172084941 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134246331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207760847 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165680496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201943139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148651515 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.210783788 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203207894 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.158697764 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143274295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318568165 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168304084 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230170471 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13834343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174742402 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153939687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1949192 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172977025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207765597 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141930828 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135375246 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.18214949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164724649 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.702031313 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180164042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219530431 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163397734 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221898329 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140342637 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.292646432 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148041381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209043762 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122562513 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.166144871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148512042 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141857076 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179057895 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212155959 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222993231 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.20078943 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152263008 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172476193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133351245 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136347367 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198262083 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156390837 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207660346 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153196855 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138487233 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148744194 seconds)
  done (took 89.209847846 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187990107 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.182289592 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.19626134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.245841458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223236977 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.315753561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.259184356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275466174 seconds)
  done (took 2.980337654 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133387353 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.168128852 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150016004 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.151478411 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117809116 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.517267873 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.17044912 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129321194 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.198735048 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157092393 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.118707204 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577850717 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130021911 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.156454183 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.154218424 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118353249 seconds)
  done (took 4.232857894 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.151289351 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556010161 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.18692412 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.318592888 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244946372 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.219453465 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.8221718 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.208794848 seconds)
  done (took 12.799545668 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.184735922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.175236459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.468100378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.345722735 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.223885034 seconds)
  done (took 2.496273164 seconds)
done (took 132.996097063 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.141086587 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131199715 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130583365 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.162420934 seconds)
  done (took 1.647796832 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.208783533 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.097187987 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.129676546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098763537 seconds)
  done (took 1.632729484 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404722905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.098187346 seconds)
  done (took 1.621216986 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159939473 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142575393 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172487227 seconds)
  done (took 1.580956699 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.151774328 seconds)
  done (took 1.246234874 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131301404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123288862 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.285599028 seconds)
  done (took 1.639044951 seconds)
done (took 10.464936149 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15770078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.9428611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.456193067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141279628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.750596078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407146816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.438375509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18532622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189425275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.147986417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140108041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698843268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.454874743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.892887985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.438719128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.889619134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707670437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148065407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126299231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119330049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.44919951 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118437337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119219699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.148344563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702175256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428770377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145995591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.903011968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11648674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.15230135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410833319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117525211 seconds)
  done (took 21.333253902 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16625522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174537907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.170312719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119451084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121461465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.148765845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.129699175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159934933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193337993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.146608588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141704193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117220283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152158665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120662969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142403444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.145852975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124440685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121351395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.154045846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121726303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139082561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.146086943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122943428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121317382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.146459965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14287613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1180097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.158998641 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12013497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124230742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.153864888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119466169 seconds)
  done (took 5.593222923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.173675647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185150989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.171466008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.157419809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.199691245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120738887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.235793532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157583447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225916927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118813154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140638974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148164162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158551237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.148167725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145476809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118888861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.152034556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122728665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125962387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149207941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14269133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118231795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150175941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123537986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118389845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.17139463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118740518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131177086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.147979921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125751605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125263345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148929065 seconds)
  done (took 5.891642995 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.142058708 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134670477 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.142698803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.172942034 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.1286672 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133927925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.164414343 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130994311 seconds)
  done (took 2.260014419 seconds)
done (took 36.184103161 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.150535135 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13557115 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140263577 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.166038642 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.281713548 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.127670425 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.137056674 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.157812945 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135364071 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141206364 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.147897089 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.129508508 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139571031 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130891156 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.279543649 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.167894884 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.289019854 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.284263941 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128122857 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.135257423 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.158750216 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.256563701 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.165979417 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.127792089 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.278421788 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122719656 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.275730035 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129939709 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.162766788 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119553681 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.284911022 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130288216 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.160266959 seconds)
  done (took 6.877173417 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242582385 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.160936806 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.129858343 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129267346 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.130070101 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.160448127 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.270000675 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129113905 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127518171 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.128476114 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.160721765 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219817269 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.166491283 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.124929154 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.129928184 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.149057293 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240128022 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.162084508 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.121240417 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099973048 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.125026444 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.160496667 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250559585 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.156549307 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.128669924 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12806433 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.160379124 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134597912 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.130815518 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.160971308 seconds)
  done (took 5.835610311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.140810783 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141166206 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.176182041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196719569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15675485 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.175565273 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144845514 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139161412 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.180262309 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122736907 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135939843 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.189108056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138623913 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131049277 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.152338506 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139203945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136852808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.153012893 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131356089 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139154358 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.172396364 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13952291 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14330279 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.161507549 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.121340431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127594368 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.163685689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134332236 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127821283 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.167437633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123986716 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122693116 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.154864456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.157042387 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121725535 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.167396007 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143512663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133576414 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.167185436 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.155942037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.122700449 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.155862768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148205439 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.209176739 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12527473 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132205708 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122549871 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.167850116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121090328 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139259748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.19682936 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122312481 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.173310656 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.122490786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119792817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12925247 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.152342417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126276393 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136558287 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.154939815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143866549 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128252412 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163712787 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124727802 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13279035 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.151842633 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122872678 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125342196 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.177983946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130050825 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157395993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.151556493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134189271 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134000839 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.163740096 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134872528 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120464481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13228002 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.164900718 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125458133 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133679429 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.155719174 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123281389 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138588713 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.173656231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13575197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.133498819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.164589715 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123808621 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12229984 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170623862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123292424 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124832076 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.165182458 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12297723 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125101384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.161940775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132642496 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.119321039 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.178653235 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126874584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121241814 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146645604 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.158058926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12529233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129799397 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.19601068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120973834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.13011508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.164721296 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123100151 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128362902 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.155181256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121108068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135401087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.168390198 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129310229 seconds)
  done (took 17.95917791 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.387261327 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.369456968 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218633528 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.415100971 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167260306 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.256964171 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.402033736 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.373809407 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120742519 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.187087967 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17624406 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.335437209 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.156621663 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.149988138 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.374306676 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.450997504 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.149261649 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.19263127 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157252888 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167611538 seconds)
  done (took 6.346837262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138617627 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156550424 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.174979584 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141240098 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132013994 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.168488674 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123806386 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.144351597 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.164288349 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130613746 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124840317 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161462781 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.136054452 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138733913 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13534263 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.184435185 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130173955 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124864761 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.175425241 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126931364 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107586446 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.179488048 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.131383537 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.174177875 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.140563056 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13174294 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.150883643 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.128043028 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128823714 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131593969 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156890342 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129847238 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128806534 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.142320402 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134844312 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.136402471 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.158906032 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.126215282 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127960337 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123997192 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.166802566 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133791874 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130469873 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13565496 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141385647 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115915718 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.135886694 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.166121474 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112834042 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.141180523 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.165183645 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.135695259 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128733549 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.174585539 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.129420508 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138660649 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.16292882 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136586014 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.126202082 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.151420443 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121546112 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123920787 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.16078965 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.138253405 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133754509 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159199015 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131959099 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121746278 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.126410419 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154955599 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124334736 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133900757 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.173131723 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131642928 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12916901 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.16291527 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130943886 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101100147 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129866305 seconds)
  done (took 12.248563871 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.155441904 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132716249 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.167780414 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.157233891 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.134116915 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12714452 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.16367221 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.142529507 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135702452 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.174791571 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137667926 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135087849 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.174012142 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132199703 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131418109 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1702331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134418629 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.191110406 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136289118 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.147941857 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.168048534 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128338737 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.135094484 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.164598725 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.151812672 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.132933524 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.179873502 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.134226077 seconds)
  done (took 5.329939304 seconds)
done (took 55.712394155 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.324093098 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.571544049 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.258710622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.258195682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.280138417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.28761758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259268724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.260568331 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.798012582 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.230867836 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.260158502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.272009311 seconds)
done (took 29.200795018 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.382301619 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.480154145 seconds)
    (2/2) benchmarking "String"...
    done (took 1.661263349 seconds)
  done (took 4.285308488 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.252298075 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.248642164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.578775625 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.250303408 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.263821049 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.247439636 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.257936153 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248220043 seconds)
  done (took 16.231430478 seconds)
done (took 26.28334972 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.271206276 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.572540056 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.517129168 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.226489556 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.251919605 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.250407332 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.252454729 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.309689242 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.260677841 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.242375375 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.786001628 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.56061319 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.256076558 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.6892322 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.226111365 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264702655 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.262140598 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.622541596 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.250192081 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.287338634 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.235715589 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.232194541 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.255972006 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.27935389 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.268353189 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.251734386 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.232340439 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.25599652 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.530958092 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.269916098 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.291610197 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249659472 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.23114336 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.249857681 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.26931644 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.256483524 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.538269078 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.264347373 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.2348351 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.267186002 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542040158 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.269036517 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.257851156 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.251065935 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.246098404 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.262910179 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.238610371 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.435172937 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.289087111 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.25109052 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.310178201 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.658855711 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.256132361 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.253794355 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.262420801 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.572870265 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.254418456 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.374801572 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.261060642 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.272326599 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.258725568 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.257220908 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.28723087 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.262361785 seconds)
  done (took 147.746395128 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.252727669 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250357325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.250398741 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.260817944 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.251218329 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.253345625 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.255043256 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.253716831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251267986 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.256538629 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.250023275 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.256210444 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.256474444 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.2678555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.263843258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.282742309 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.257986228 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.254978304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.265675335 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.256619225 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.281568347 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252030374 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.255543181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.256333435 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.26139574 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.343734074 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.282754392 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.270937666 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.260831283 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.254870819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.265223881 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.26154541 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.2577348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.214487262 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280797998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.29615896 seconds)
  done (took 82.580280916 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.255907961 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.257355702 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256298793 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.293068693 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.258331175 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.256785517 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898380374 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899633745 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.327363766 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.416969225 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.846737354 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542160564 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.254310482 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.354281644 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.271081609 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.257342013 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356806616 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.281716481 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254105148 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26013329 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901479371 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.272018391 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.269500472 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.441423242 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.272458041 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296932731 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.659434765 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.255585295 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.258696514 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296055176 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606017917 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.309144689 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256077467 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64067365 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.738987689 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37491702 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.258995365 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294905868 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.260276115 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553876299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256271835 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.261132159 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.264067938 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929354354 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254333599 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.902900362 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260356432 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.270016809 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.255782876 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259041879 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.426720745 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.001700565 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.257058178 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.258250927 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.263053703 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.261317309 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262914998 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298427126 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.261442743 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.32584402 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.174091133 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.259704184 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.265168776 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297969874 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.262982674 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.313647986 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259096495 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.776629696 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.31770304 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.368357177 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908028039 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262501188 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363129976 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38242398 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.258727804 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.262059372 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.263708954 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.263303315 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.377689369 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.259082178 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.997679035 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.446110012 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.27666102 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.87762536 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.36368703 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.260033556 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68627484 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.262387207 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.262054135 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028792209 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361989538 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.260193283 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.265316421 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262671811 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.005497417 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903963416 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.598507533 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.263518147 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.935629106 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.265606681 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.263609849 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.18389643 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.877129208 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943280497 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.260382902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379901033 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446983935 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.278933236 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.263742477 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.882349913 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.266570281 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.326414483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.260830724 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.671067948 seconds)
  done (took 385.476220903 seconds)
done (took 616.937274023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.243059331 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.245744658 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.24371514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.242833114 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.245911439 seconds)
  done (took 12.365088396 seconds)
done (took 13.509057611 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.56494733 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549561994 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.555495919 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362566776 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.567271508 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.575541974 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.469392721 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.369604612 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.543285776 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.576204069 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55813159 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332275355 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574045205 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536341807 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311020626 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455889677 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.491128655 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.489982909 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.387901423 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453135696 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.593706434 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33547213 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.328358725 seconds)
  done (took 35.12972383 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.713396166 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.276914055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.400256066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.631183058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340070759 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651612261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.697409146 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.275840035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.519273366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318004824 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31552085 seconds)
  done (took 19.286912184 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.664622924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.278815833 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415610672 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.674791187 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340443432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.677932857 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.708501479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.278223509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492152389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321268577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31812565 seconds)
  done (took 19.318346628 seconds)
done (took 74.880296162 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.332607938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404832556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.323860667 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.309323902 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.306798162 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.308695121 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.309068772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.309550397 seconds)
  done (took 11.754597495 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306721896 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306163165 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.309571769 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.30885834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.308446906 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.306096746 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.307180613 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.306054282 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.304925298 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.311933802 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.307117267 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.307538549 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.307969121 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.312390563 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.306623419 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.307122575 seconds)
  done (took 22.074376987 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.309166829 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.304945343 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.307710847 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.307893622 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.30594533 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.307962696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310634614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.307099737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.307489451 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.309010874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.30892469 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.308920429 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.308235146 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.307985184 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.308584353 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31066276 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30796514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.309351839 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.308889699 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.308219781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.308509203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30770589 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.308007464 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.309611508 seconds)
  done (took 32.549186878 seconds)
done (took 67.52633062 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275427763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.290573682 seconds)
  done (took 5.71439783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.427204115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.426075272 seconds)
  done (took 4.006953957 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.308450467 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.310194264 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.311650594 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.308949064 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.309453528 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.308530016 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.308466601 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.310739585 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.311623217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.311541153 seconds)
  done (took 14.249650393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.308864068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.310277515 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.308929927 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.309752588 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.310463433 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.308355134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.308959121 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.31211895 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.309718715 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.307096105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.312561884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312195286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.309991376 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.312631585 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.310020988 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.311279667 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.310425019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.312754367 seconds)
  done (took 24.736953561 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.330510604 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.336145749 seconds)
  done (took 3.820487717 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49208562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.393542712 seconds)
    (3/7) benchmarking "month"...
    done (took 1.477160399 seconds)
    (4/7) benchmarking "year"...
    done (took 1.465488593 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.3917751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.341398302 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.394484802 seconds)
  done (took 11.109003247 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305956086 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.676693943 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.871980997 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.509751136 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.296153791 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.325861969 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.250453218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.326168642 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.330404097 seconds)
  done (took 15.046951222 seconds)
done (took 79.834713969 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.27472914 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.284148774 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.30904754 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.291100425 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.725132435 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.334106942 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.274734517 seconds)
done (took 16.647088362 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.265688396 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.258385162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.256559022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.280697706 seconds)
  done (took 10.213395782 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.279700023 seconds)
    (2/2) benchmarking "read"...
    done (took 1.687814771 seconds)
  done (took 5.122696608 seconds)
done (took 16.490527602 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314486431 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.314667249 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.313633738 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.314073738 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.312470741 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.314541325 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.312795852 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.313076614 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.312634589 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.312944195 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.312925897 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314246456 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31322838 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313667401 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.315806989 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313462138 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.314483217 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313748487 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.31399796 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31367697 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.316671345 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314694487 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.312226227 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.314941935 seconds)
  done (took 32.684372154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.317904183 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.314977834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.316405668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.315579516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.314022824 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.313842214 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.314448157 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.316253345 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.31732443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.315409802 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319337955 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.316439961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.315153973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.31500102 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317406145 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.316287986 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.315713402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31427558 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315468678 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.315196367 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.316938069 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316793916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.314877193 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31402869 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.316477535 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316930176 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.316273599 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.31460984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31710038 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.317124056 seconds)
  done (took 40.634409866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.325340045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.32359506 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.317075726 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.315928932 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.316564558 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.317379117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.317056171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.317274564 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.315822563 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.315660322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.316978926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.318382316 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.319005651 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.316025522 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.316850348 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.316628742 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.316959859 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.316169186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.317567828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.316662754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.317862698 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.316351821 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.317941688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.31749617 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.316962234 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.317205561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.318259117 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.318046031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.319790876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.317979892 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.316546399 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.317941618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.320392977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.318353961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.317634596 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.318189764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.326048165 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.326861398 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.317177065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.318194164 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.3189268 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.318408856 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.319724316 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.319167053 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.319131224 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.317689142 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.32005278 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.319935378 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.320005358 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.320167879 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.322359289 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.320328514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.320182685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.320505841 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.319622209 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.31946765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.319986361 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.32010593 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.320244705 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.319274608 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.318946006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.320887383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.319912539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.32051066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.321528666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.320894508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.321878361 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.319750647 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.319726273 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.320332565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.319262317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.321737911 seconds)
  done (took 96.130715787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.320647898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318155752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322678394 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319536932 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318840964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320869714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.319034914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321202088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322387295 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.322695225 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321218781 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.32261868 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323879245 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319920431 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322903353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321201879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.320715085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32147412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.323722171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323579137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322075384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.325198337 seconds)
  done (took 30.239459432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3220596 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.323703175 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.320769562 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322709124 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325379505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.326606687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.327416846 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.325633798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324781175 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325272439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323390426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326772281 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326585246 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323713022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324650362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327038446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324982876 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326334515 seconds)
  done (took 25.013319571 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.325832566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.325833124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.3238372 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.323875892 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.33086917 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.325061448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325517791 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.323954813 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.322913898 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.323055956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.323543657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326170248 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.32651247 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324269727 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325839201 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.324234807 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.32453254 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323267016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324191785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325319092 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325010743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325519537 seconds)
  done (took 30.31330737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325292902 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325127169 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326756915 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.326134839 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.325145746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.324905703 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.325553201 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.323954882 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.330460249 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.326506534 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325586864 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326907633 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.327921728 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.325933068 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.326380401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328932122 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327239518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.326423772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327390864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327917537 seconds)
  done (took 27.696606671 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328507487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326648243 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328675037 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325791219 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327001988 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326777588 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327773665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.328945042 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326592089 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328284344 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328178604 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32727835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329173144 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327258515 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327089081 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326244699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329325119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328952934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331651113 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32981303 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329669995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330388173 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327588236 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.326981245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329407182 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330832294 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330464789 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331788561 seconds)
  done (took 38.364916168 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330613691 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.330376579 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.332088668 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.329515855 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.329612376 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.329374776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.329517043 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.32884028 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331072478 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.328702484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.329591633 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.329416471 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.330776211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.32809696 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331018002 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.329521303 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330265113 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.329191582 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332279195 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330234523 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.330031494 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33077223 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.33292404 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.329392027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332068066 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.330671799 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331538319 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330347107 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331584833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330730325 seconds)
  done (took 41.08044375 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.356889658 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356191315 seconds)
  done (took 3.881865145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.331970078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33251484 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.330545875 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330978262 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331296389 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.332416923 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.333390859 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330778725 seconds)
  done (took 11.822929368 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.324023886 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.334228815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.332144402 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.333292523 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.332930745 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.324353048 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338997298 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337845266 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.323710159 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.326503251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.336054885 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.331247082 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.328029982 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329065588 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.326965741 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332903995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.336065432 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.334343564 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.333601151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.333329399 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333750193 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.330172992 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33368531 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.337484396 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.326993119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.342578969 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341820213 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.336460244 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326777518 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.341771534 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.328569576 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.337664867 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.33401552 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.332958333 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.334862205 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.334016497 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344729801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335498948 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.346829161 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340862899 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337559267 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.335990841 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.33185938 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.337914829 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336490346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.338168841 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.336653215 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.335532473 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.335291101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.335203869 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.342508779 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328521595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.34007055 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341196391 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.33958641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348441097 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.343312162 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.330735144 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.33882074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.348615421 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.35593367 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34732231 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343343382 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.342750848 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.345085363 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.358974071 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351694863 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.342771032 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.33938862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.338329127 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.347256449 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357299626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.357943073 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.342409604 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.337336403 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335711546 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331526656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34183041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347831104 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.346180195 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.344726379 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33889526 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348034412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35557315 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.334233564 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.342346118 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.335552657 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.336838853 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.331521767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353423854 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.345803192 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.338806842 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.329371982 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.336947946 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.338675749 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.341340893 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.330616694 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336348708 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.344595147 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.339049121 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33919914 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339362568 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.352080876 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346902284 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339185032 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.347100564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.346975059 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33807714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.353707968 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.346281046 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34133335 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.333133633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.344938627 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.34565471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338675819 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.34766076 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.346660424 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.342730106 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.34598024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.339344619 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35334661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.368356619 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.348830462 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.341071096 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.344934367 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.351240964 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340810867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.343481738 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.34620024 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.340605883 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.344802017 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.34499876 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.346707985 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.33596891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345631941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336635825 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.34839158 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.342065565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.343098169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.346000564 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.344841687 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.342640988 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.351111269 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.355269898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.351677891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.347456894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.360292954 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.3451309 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.349149637 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.350620006 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.346907941 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344587185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339459229 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.346240259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.33350938 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346779782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.335693317 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.350064139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.343074004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.344261376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344483471 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.335264631 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34475655 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.346804436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.350851879 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.345745922 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.347894798 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.345378068 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.344577267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.33689333 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.348255459 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.336561584 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.345449656 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.352926025 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.343792461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.344826461 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.352215251 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353213282 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343502341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346963954 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.341133185 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.352551746 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.352635625 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.355044661 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.352323015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345144519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.343875363 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.340879591 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.345197039 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350720088 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.342550404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.355891555 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36297458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36055849 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.343958544 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.348569186 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.338859222 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352711752 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.353011162 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.355144603 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.346651764 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346621941 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339989952 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351627187 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.345035077 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.353382717 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.338054232 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.349816202 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.34921026 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.347645815 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345704576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.342251693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345874639 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.351129009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350088373 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349430608 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.342208112 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.350922628 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.339284975 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.34290408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.350991351 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.347374691 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.35558614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357246337 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.349749643 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361075106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.353062216 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.347542869 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.350160729 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354579936 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349715212 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364932929 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.352607829 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.350366691 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364855824 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.350317663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344536411 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.357773499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359069614 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.352046235 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.346449852 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.357623549 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.352634368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.348441306 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.349442552 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343219832 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352159307 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.359907709 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.360949601 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.343918036 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.354280597 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.347377205 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.354792882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.353019613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.358419321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.355347073 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360059753 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360146217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.351927783 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348125415 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.356919479 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.349854056 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.350407689 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346080113 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.357835588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.358886909 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.35208751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.35686193 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.349433263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.356287975 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.343571204 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.355340438 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.345049674 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.37203914 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.373647306 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361061766 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.358814972 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.356770298 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362476541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.360748528 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.348193301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347145052 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35249678 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.349880387 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.347968132 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.355986121 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349652564 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.355608489 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359118084 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.353649231 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.356071467 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.351476329 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.346654906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.357562299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.350969981 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.351236285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.344906779 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.354897854 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.353502216 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363176421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.355624483 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.348234088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367953634 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360287995 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.353572546 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.350620634 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.350342456 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.347242202 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.356318705 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.359103766 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.352942228 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.362263036 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.351708342 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.360106547 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.352796051 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.37155912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.365219627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.352406267 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.36204569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.353507943 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.34812772 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.349346729 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.357829512 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364984193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.365079735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.347012773 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.360550388 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353404926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.35295445 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.353075765 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.356815347 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355891066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.354871454 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368608047 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.362890142 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.354439556 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36872573 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.367262066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.358090299 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.354403727 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.348740158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36679839 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.365908611 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.355629162 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35374233 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.3524796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.358361493 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.356178533 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.353774457 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.357116292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.357725587 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368311641 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.364002364 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36315931 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.355695651 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.372601642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370346466 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367943926 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.369561031 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.353750222 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.364650281 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.355575314 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.359537271 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.352147434 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.356105131 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.362056027 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.349922919 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.364308199 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.359093849 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.359593982 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.367162751 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.367876879 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.349555555 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371415248 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380625986 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.351153104 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363467868 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.358935379 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.353180038 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.363438954 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355716325 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.348930615 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.356884419 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362395805 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366003456 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.35650574 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.363391462 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352362685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36434263 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.356195156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.360157183 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.359467639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.358816788 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.352476526 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.361368509 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365754752 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.372483889 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.359828159 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364824325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.356087739 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.375283338 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.373519915 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.361677277 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365423355 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.36031251 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.357251715 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.365275291 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.369458994 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354127854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364615082 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.354581612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362150034 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.359200217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.372386601 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.367478504 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.366531457 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.353069549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.356993372 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364612567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.361424383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360436058 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.364595596 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.369569902 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.356634108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.356702064 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.366370891 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.362025506 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370553755 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359365392 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.366309012 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360842604 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.366733088 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.365355399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363409062 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.356991067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.358264274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.379025433 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374690105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.370703285 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.36483557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.367881768 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.357345861 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363448732 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365998427 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359173817 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.36003929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.367957825 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.359577709 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.359584833 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.360277309 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366675958 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.373576416 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3690162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.357119645 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.380730119 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.381333479 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371849172 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.355433258 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.362451817 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362159602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.367741666 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.36442183 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.358783264 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381546424 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.372510988 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371045438 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371577768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.366527825 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.358461505 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369802054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363685703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.371200206 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.373029838 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.368815267 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37460022 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3642855 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.364168866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.356541499 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.358888306 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366431373 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.365779824 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.369114257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374069286 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.372012879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.366388421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371816276 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364383837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.364671443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.367003095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.364938376 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368312829 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.358310508 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.379609655 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.370371331 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.360107734 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.371313209 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366779114 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362619018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.369799749 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.374216722 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.367893291 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.361981716 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.369883629 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.381190373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379263383 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.364238777 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.360525735 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.368896981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.373345731 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.366556948 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.367993444 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.367192714 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.390781467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.381148958 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364451862 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.368000288 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380353186 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.380332932 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.367182098 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.367822543 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.371115558 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.372339039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.376235763 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.369198974 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.377305522 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377070506 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.365259507 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.376196233 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.363614535 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.368034441 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.379728526 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379227903 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.366770453 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.371087063 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.389525931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380400748 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379134875 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404820683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.380001325 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.375857712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.376780455 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360676521 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.371618975 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.375468138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.376330957 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.367602752 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36899392 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.372337502 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.361336522 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381945498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387297645 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.381593078 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.370778993 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.362876312 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.368454815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373041153 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.372685591 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.369405146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.374008175 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.373146474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.370112708 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.365568764 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393645589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.398342415 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.376850995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.371548854 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.370141901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.382144196 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.380212596 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379590868 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.379726221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.37260255 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.370066124 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.375985662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383521955 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.372327445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.367499666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.369181583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37133961 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.377660316 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.390709182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398533152 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.384058057 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.377598925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378267306 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.369217552 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369591831 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.376892132 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370856377 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.36888867 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.371048511 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377453306 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.373868772 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.374554614 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.370566816 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.381475745 seconds)
  done (took 809.313843073 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373274702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375263573 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373416201 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.373800956 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374314499 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374906613 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374229502 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.374761064 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373747667 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.374063699 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.373546245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375450048 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37442848 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.378137052 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373797674 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.374869458 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373943572 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.376223052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.375455985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376166969 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.373759959 seconds)
  done (took 30.071893152 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.374586461 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.376028684 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.375621998 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.376921535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376561294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.375546639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.374160429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377544449 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.37583236 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376156563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.376268309 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376617516 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.376101668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.375789407 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375859877 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377437452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.375071229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377523706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.377499052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.377769408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381126119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.376891642 seconds)
  done (took 31.489787284 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.376323064 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.376464144 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.369183469 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.38173758 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.376697693 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.377537325 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.378642424 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372496111 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.376406525 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.370195819 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.369816301 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.373186353 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.380596862 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.386345708 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.380190176 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.384773231 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.378110792 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.376689522 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.376844919 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.377865509 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.388474051 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.390714489 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.378786855 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.367866682 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.380748487 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.376227033 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.377748456 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379468088 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.36889279 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.384679993 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.378594722 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.371954143 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.390512089 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.383395053 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.37294987 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.384912844 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.38125777 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.377834849 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.380447821 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.389544648 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.404334168 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.381131846 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.388917892 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.394191259 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.379337485 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.37984977 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.389169181 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.37944504 seconds)
  done (took 67.453093025 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.380823497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.382001441 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.380908494 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379119021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.379194728 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.379566633 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380785014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.379937979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.379672164 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.379848582 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.381178082 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.37963864 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.380763852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.38084005 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.382360215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.388780444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.38133704 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.382956729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.382656203 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383152704 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.382228495 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.382370272 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.382316075 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.382451428 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.382634063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.382106341 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381305751 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.382023231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.381418545 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.383906571 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.385245429 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.384952304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.382626729 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.383268919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.382549275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.384095701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.384619231 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.383505892 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.382963853 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.382437738 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.382416088 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.382478736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.383419777 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.383725891 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383020634 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382519174 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.382052914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.383430672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.382475244 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.384568038 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.385327352 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.384399651 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.384907396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.383024406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.3831101 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.384075168 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.383916489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.38354151 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.384909841 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.383604577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.381494392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38349786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.384570552 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.384521244 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.388361397 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.384790622 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.382440393 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.386647702 seconds)
  done (took 95.246282578 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386359746 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.38199306 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382752583 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382647262 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.383433466 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.38220398 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384829453 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.381497256 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382144545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38154859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.385373098 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.385089891 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.387340108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.383249434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.385818267 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38222605 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.385665034 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.385815054 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.382706698 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385872393 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.38513005 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381306939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.385963048 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.383575802 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.384330159 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.383754387 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.384894825 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38567111 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388207606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.383013231 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.386303454 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.385157498 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.385406482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.383851536 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.386041339 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.384375276 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386014032 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384380513 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.385793892 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386310368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.386481899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.384284202 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.386897943 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.386686114 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386309599 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387523442 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38773094 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.387517993 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.38841734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388123308 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.388180997 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386978819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387058438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.387020724 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388180578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.388167309 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392442083 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.385432603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388175759 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.384577955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.388347988 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.388177016 seconds)
  done (took 87.11730214 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391483232 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.390213099 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.389414115 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.389070985 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.389028661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.386880831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.389754451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.388685809 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.389504909 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.390380159 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391100014 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387434324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390624953 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391356191 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.391372534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390690325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389202775 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390419131 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38978162 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.389399029 seconds)
  done (took 29.0169018 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.39205642 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.391962972 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.390836503 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.392294858 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.39019515 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.391203727 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.390070762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392643925 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39006734 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394302307 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394064636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.393429919 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393780871 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.392497468 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.393316287 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392426928 seconds)
  done (took 23.494472238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.392479239 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.392736674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394134757 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.390812337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.391649315 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.39058263 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.393503042 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.39001461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.393683233 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.392196801 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.392600624 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.3934427 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.393800636 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.393190014 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.392211468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.393085322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.392959957 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.393438579 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394229811 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.395043532 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.393666192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.392475328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.392608026 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.391668312 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394017145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.394578739 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39462204 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.394574268 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.395836091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.393867753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.392514719 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393363709 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.3952467 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.393158096 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394303913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.394599691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.39647891 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.39484204 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.394845462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.394283449 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.395182237 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.393056268 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.396422129 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.398083443 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.393991722 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.394290713 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.396345513 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.39396616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.394863761 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.3952291 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399726739 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.395697525 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394525938 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.395202351 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.397140587 seconds)
  done (took 77.893862343 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397485392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396867717 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.394973481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.399152574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396653792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.39818185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.397904719 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.399335348 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.396028364 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.396827208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395041018 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.398964631 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400398053 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396667481 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396905291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.395298313 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.396507755 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397177602 seconds)
  done (took 26.373171966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395912707 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396600364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.399367406 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397863094 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.399966714 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.398571215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39623223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.39750872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393704465 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.397155812 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397663557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.398907152 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399811666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.395616789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396118739 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397766713 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.396460052 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398104675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.398965539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.399111507 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398923145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398468619 seconds)
  done (took 31.975881431 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.387217746 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.388185257 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.390119372 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.41486812 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.409137712 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.390147797 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.38853628 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.388903994 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.419512774 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.445470755 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.439263959 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.409822296 seconds)
  done (took 18.095724115 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400932269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39951533 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399331857 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397989996 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401969343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400752079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400021609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399248396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398420008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400428783 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40131912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400958949 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400455952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39953712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417265073 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399983127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400541368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401526689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402649387 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402167831 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400179101 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402827901 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40301752 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400089494 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400436047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399628123 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401573063 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402784461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401060847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403088689 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400366695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400515527 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40249448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403839553 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403115438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400975292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40356773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402632137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401556021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402918346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401243902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402054549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402432251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402858003 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399569177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401563774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403258753 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403476936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403597553 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403392917 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404960505 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402031571 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402532682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404194696 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404857001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402047495 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404170949 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4037966 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406802429 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404123666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40369093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404073102 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403685343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402981133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405011699 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403944174 seconds)
  done (took 93.775998194 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405480753 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404721927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403612289 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404879559 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404410855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406527255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406107019 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404949959 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405307826 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404678207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406976125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404004378 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404561641 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404616467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406676715 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403071368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404512543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404619959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40526627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405824372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407447414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406924791 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406895877 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406259413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407474652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405872842 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405655146 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406091725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406386036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405758652 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407029763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406684746 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405593407 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405542353 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407997693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407687737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407666925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405475864 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405494791 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406141172 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406579845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406994773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408375046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407905991 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410188405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406565178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408530024 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409200081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408317916 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405033979 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408012849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407692067 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407570544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406981153 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407877356 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407090524 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40820582 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406587946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407613915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407783699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408129274 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410037547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408607897 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409304843 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407605534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409158595 seconds)
  done (took 94.067842848 seconds)
done (took 1894.401822235 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.620195557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.577094755 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.397989576 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.407772874 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.394594941 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.380170132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.391474922 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.394673512 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.397117748 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.400765279 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.398783253 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.660201133 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.418989594 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.393173112 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.398602435 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.55413562 seconds)
  done (took 28.418713791 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.437684987 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.414712513 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.553720065 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.403784658 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.438618277 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.669132856 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.475592532 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.405932556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.621908763 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.4262167 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.376967769 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.436845007 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.402825317 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.391018369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.427567989 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.663148225 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.774693625 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.383150888 seconds)
  done (took 30.939792135 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.010434777 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.405963076 seconds)
  done (took 5.65251496 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.429997907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.403820556 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.407283077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.403955419 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.392356458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.372248105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.405106823 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.381411421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.376799521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.56550669 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406432899 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.426105931 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.404130302 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.407279096 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.412059871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.465661241 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.621469393 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.41446325 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.413184176 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.418004762 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.404955267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.560611933 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.464156301 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415412533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.563115812 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.389897067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.411392119 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.419505581 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.595109127 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.415209713 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.406180492 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.405720099 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.409062004 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.375778862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.0570025 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.37918537 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.437789052 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419485676 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.41543125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.62495098 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.40890563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.421408197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.37702001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.041064231 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.583085461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.573020983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.389535149 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.409493204 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.413472132 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.490618465 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.409078207 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.411638728 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.514582057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.367795514 seconds)
  done (took 90.154257048 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.400243355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.379046666 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.650792185 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.404049984 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.375207629 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378893154 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.38105963 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.794759725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.421119683 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.378402589 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.823458626 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.163279772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387936832 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.422814521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.397597976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.409054531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.379083541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.380429453 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381985726 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.381850723 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.084815953 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.381778856 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.398436561 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.5396981 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453821048 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101907722 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.380570393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.380759522 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.401361445 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.379653586 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.130057182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.380544342 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.418069784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.376150836 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.791210182 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944473735 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902778349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.389242235 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380005377 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.380306741 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.386134717 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10275811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920079083 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.383871581 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.381602437 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122676774 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.380851783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.391525277 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.389643474 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.741760038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.380192621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.380504811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.38773946 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.379300817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.382777028 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452041423 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430950123 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106646593 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382006679 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.383473486 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399025114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.38246791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.385617543 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38181238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.385185853 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.918865939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.572648868 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.386923575 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925274436 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.126678121 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.382624005 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188289866 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.384272679 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.38937668 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.461914187 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383804393 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.378331491 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098135455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.427890516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.37956377 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906950458 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.388559397 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.809252769 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.402923375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.385308914 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.107925596 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.39093463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.446618875 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.38373979 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.384277777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.379914652 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39163374 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.793277763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.413751008 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.384574184 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.382929142 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.403542518 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384699479 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.382449332 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.392242897 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.191552781 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.387988235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.384400209 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.383632164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384215619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.386176901 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.383250761 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.385815612 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.760651477 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.385509219 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.391724674 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.386082965 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.381659149 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.396880916 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.565600556 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.395525436 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.857563452 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389273105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383504564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.409480633 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384309486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.421288489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.397800306 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.386924831 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.383155777 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.850376015 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.403113832 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.401959983 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389685099 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39527785 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.382051796 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404893597 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.418470254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.388964057 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.346485611 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398546841 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.406992398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.387105162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.395128529 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397034148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.395077615 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.386748552 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794998303 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.794029954 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560184155 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.387844152 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.388481175 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.354039016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.394420269 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651734903 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409852957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.3864284 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.799801427 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.607670291 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.389651226 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.385074248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.386495308 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.756802524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.387199448 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816078986 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.159205721 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.389975778 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.401104219 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.353021149 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241967781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.388310762 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.391578007 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.817255392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.406486327 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390234331 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.390155271 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.388058565 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.38940308 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.390761981 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.394139855 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.389846921 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.391228591 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.506230925 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.674271567 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.405710391 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.390506432 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105276236 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395743132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392415684 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.397185424 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.390441689 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.389544787 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422450997 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.391729562 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.395060713 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.388374528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.402138918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.182601712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.406817794 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.39225456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.677520863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.297257634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.394011208 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.391527791 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.392238566 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.430178447 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.132400496 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.459228579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.866702462 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.392626325 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464783126 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392705455 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395592414 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137009742 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395512167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.393494592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.284911371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.392948922 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.098939118 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.391015506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394861386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.211286854 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.39321802 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.397303526 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.389115194 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413025497 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.789627718 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.393559545 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.407253045 seconds)
  done (took 517.294369081 seconds)
done (took 673.692906846 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.394105912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.393181144 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.395845309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.393558357 seconds)
  done (took 10.828646367 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431364072 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.420843321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.431688276 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.42150814 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.432937038 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.422170515 seconds)
  done (took 9.815770637 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.393027773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.395079221 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.39315649 seconds)
  done (took 8.437237933 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.723131902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.424224687 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.902772971 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.401064199 seconds)
  done (took 9.706157746 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433840714 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.432059342 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.432140218 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.431125564 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.432081273 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.435668949 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.43598519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.433790149 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.434153324 seconds)
  done (took 14.152052856 seconds)
done (took 54.190731308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.303946333 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.810700858 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.582546565 seconds)
    (4/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.374945584 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.572466163 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.760552721 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.461952949 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.565947458 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.377404278 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.725754162 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.462102269 seconds)
    (12/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.887339655 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.375721871 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.761122556 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.471775426 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.407715046 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.641119517 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.877960388 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.815536878 seconds)
    (20/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.3760217 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.954109178 seconds)
    (22/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.377726804 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.535459432 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.123398373 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.56009804 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.652283925 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.377881363 seconds)
    (28/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.702279599 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.394497094 seconds)
    (30/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.710788642 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.659129698 seconds)
    (32/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.531197648 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.125851199 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.643884743 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5561775 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.636442595 seconds)
    (37/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.458703303 seconds)
    (38/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.050291451 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.535682994 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.554450953 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.799174393 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.71661117 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.592343691 seconds)
    (44/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.396185437 seconds)
    (45/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.598519197 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.378502182 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.5761945 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.378158005 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.651194959 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.468831616 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.785168701 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.412463344 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.046024009 seconds)
    (54/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.592215393 seconds)
    (55/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.55637955 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.009089074 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.819402314 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.378949306 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.395505113 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.835202438 seconds)
    (61/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.465636657 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.588453881 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.111874423 seconds)
    (64/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.665885446 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.62820279 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565790385 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.412261573 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.37364556 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.416913981 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.497601057 seconds)
    (71/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.382479365 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.85646869 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.708560216 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.403768804 seconds)
    (75/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.52093908 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.886106676 seconds)
    (77/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.828721376 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.761429578 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.590906008 seconds)
    (80/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.783990897 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.592565158 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.567166607 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.377969433 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.599810283 seconds)
    (85/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.380790881 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.560868949 seconds)
    (87/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.708179022 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.942725748 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.767331447 seconds)
    (90/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.767692037 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.616928312 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.39671204 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.615088622 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.464905418 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.669374786 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.383129028 seconds)
    (97/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.611426844 seconds)
    (98/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.76417462 seconds)
    (99/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.556563512 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.52944058 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.668140271 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.492538681 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.567211235 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.895668646 seconds)
    (105/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.948457272 seconds)
    (106/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.118378252 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.608669021 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.9467551 seconds)
    (109/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.394502471 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.402730962 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.382466513 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.385746469 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.47454589 seconds)
    (114/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.564055317 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.632371477 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.633238487 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.567834848 seconds)
    (118/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.579431574 seconds)
    (119/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.465191698 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.477769065 seconds)
    (121/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.395087462 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.820104149 seconds)
    (123/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38497186 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.382190431 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.38254732 seconds)
    (126/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.772001454 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.311515801 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.622423773 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564857793 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.020000029 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.405787845 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.558907596 seconds)
    (133/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.571073459 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.567967547 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.615118165 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.467401127 seconds)
    (137/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.419446915 seconds)
    (138/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.407324702 seconds)
    (139/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.009690269 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.595152079 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.383180082 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.576340469 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.705375593 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.473410551 seconds)
    (145/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.385543581 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.491883011 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.90026532 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.4251475 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.667030912 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.470049439 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.652480319 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.420640013 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.546903066 seconds)
    (154/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.386246114 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.542514659 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.627568771 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.662684829 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.476268036 seconds)
    (159/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.595739933 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.070448414 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.802622596 seconds)
    (162/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.596039203 seconds)
    (163/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.497451247 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.646459791 seconds)
    (165/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.623894282 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.792695566 seconds)
    (167/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.384814159 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.654797653 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.389169041 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.385846413 seconds)
    (171/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.538457649 seconds)
    (172/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.654409055 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.57896685 seconds)
    (174/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.571478329 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.389585785 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.706516799 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.567096905 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.619684947 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.697296772 seconds)
    (180/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.644890527 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388218083 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.442943967 seconds)
    (183/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.794860087 seconds)
    (184/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.599388442 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.617114927 seconds)
    (186/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.569179153 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.614985817 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.720045754 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.384491283 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.414561796 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.913801329 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.410272843 seconds)
  done (took 358.280020883 seconds)
done (took 359.534003041 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482455835 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.587868961 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.441683471 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.439820245 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451146197 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.421733448 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.469722232 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.443669966 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.463339507 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.467139502 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.418583746 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.447915619 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.464175227 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452791727 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.481219155 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.443505002 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.441403407 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.453389988 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.46387079 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.466420975 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.441799338 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451402514 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.479660507 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.440559306 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46036776 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457157157 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.456704934 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.423633829 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.445535846 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.466892752 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.421600191 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.45572534 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.465033019 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.453357511 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446465713 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.454528261 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452844457 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.593632822 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.469510683 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.45422466 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.450213187 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.46695505 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.454315804 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.455704039 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.454591467 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.477966018 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.457681316 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.465097063 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.420480915 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.422094179 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465307495 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.46655018 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.451389524 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.41661066 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.420682756 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.461867323 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.455556045 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473294893 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.453959404 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454697626 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.48487828 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474538068 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.463016561 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459365538 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.450513714 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.4680994 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.456239233 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.470375807 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.451737334 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455520356 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454456814 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.453502921 seconds)
done (took 114.261838048 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.62335392 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.417675321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.658976536 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.453670191 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.675645206 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.622375373 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.451184679 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.454980413 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.453570038 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.308440899 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.455371036 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.452814914 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.418058958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.452903683 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.619558256 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455522871 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.455714096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.210680213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456639004 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.633788835 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.422164509 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.45340626 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.456340852 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.31628177 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.416379486 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.424633747 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.636534018 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.456983601 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214160614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.425742896 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.416349942 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.215405954 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.637968208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.474655052 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.466377533 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.465820689 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.679828909 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.458719785 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.627610606 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.625674955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.660116207 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.495467406 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.424937487 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.423258503 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.461137272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.455154318 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.455154388 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.486409759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.419867917 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.4545592 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.217447554 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.465150561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.468661203 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.457138789 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.457060985 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.477771231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.455960357 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.459071995 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.634559325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.45797437 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.629507286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.323795436 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.312763725 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.457993227 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.418962146 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.459148751 seconds)
  done (took 117.185014312 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.570169922 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.585199766 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.631225381 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.449320127 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.539471954 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.631169229 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.448081421 seconds)
  done (took 12.128031365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.461928714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459732065 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.539118068 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.541223434 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.456267589 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.68185235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456993728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.471026797 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.457494909 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.543652374 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458054128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460192389 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.467853 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.423465092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.540260951 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.469021375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.627892416 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.454127581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4571339 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.665162867 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.464439717 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.468327572 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.542306322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.469407108 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.460877881 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.465523513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.270915177 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459358135 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460723671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.459099792 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.460705652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.571955903 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.460576446 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.423485277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.459896681 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.625068662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.460817539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460941716 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.459750853 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.428948402 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.46077738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.462786155 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.462346224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.462610294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.460506675 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.487419105 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.461852656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.461065964 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.461268085 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.462363964 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.541230558 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.461811939 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.460687703 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.460782339 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.546946927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.469737388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.460612903 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.459273138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.462852784 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.462164846 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.664865274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.543535879 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.461058002 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.543071853 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46294637 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.462837907 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.463513971 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.463938885 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.602568106 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.463504821 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.545770869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.461553525 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.694095876 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.488229335 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462730421 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.461505336 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.458200306 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462507208 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.425057893 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.469253318 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.46160437 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.459262592 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.469081368 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.463487571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465335152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.677287175 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.625227621 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.46268244 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.480492387 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.471486633 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.465278092 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.549191695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.462892244 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.465785838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.549013111 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.628738124 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.547588838 seconds)
  done (took 150.89925954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.474637242 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.475088906 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.467908943 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.493185202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.455813271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.454571981 seconds)
  done (took 10.102015278 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.461079863 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.467182873 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.465549914 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.462031869 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.466267743 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.465376009 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.46757168 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453798838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.469552029 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.464226491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.466226886 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.465919304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.466791133 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.465215444 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.466886466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.465297787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.469566276 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.462570415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.465508847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.467542765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.427730859 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.464520034 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.465295691 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.458285024 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.471934595 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.469224264 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.490934007 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.465976993 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.466697546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.47370535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.467915647 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.466903438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.459684154 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.466451076 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.471163687 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.457393918 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.471722207 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.466861044 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46572326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.467090822 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.468341051 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466389965 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.467991635 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.467857749 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.459499215 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.465665291 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.47658351 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.489854331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.467249851 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.465781298 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.467198099 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.467356149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.468878829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.469693038 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.462082224 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.465174168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.473394556 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.46696874 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.467004569 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.461843506 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.471441794 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.470606702 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.461318091 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.474252627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.466900644 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.469104975 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.459921405 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.477656272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.468598765 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.468926042 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.468412498 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.469378264 seconds)
  done (took 107.893934839 seconds)
done (took 399.478400511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.820651215 seconds)
  done (took 4.105363887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.684982497 seconds)
  done (took 3.969582864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.191716769 seconds)
  done (took 27.489030066 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.452373797 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.442192614 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.458113493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.43610874 seconds)
  done (took 11.074122065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.042680288 seconds)
  done (took 4.330643164 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.454219562 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.43675526 seconds)
  done (took 6.178152892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.802397847 seconds)
  done (took 4.088307808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.384410615 seconds)
  done (took 4.684603887 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.447431549 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.447839911 seconds)
  done (took 6.192894641 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.411525586 seconds)
  done (took 3.698365623 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.383123092 seconds)
  done (took 23.671223066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.441384132 seconds)
  done (took 3.734761173 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.480285307 seconds)
  done (took 3.766672913 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.848187119 seconds)
  done (took 7.132562947 seconds)
done (took 115.400008831 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.432994586 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.436396276 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.43554547 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.433708015 seconds)
  done (took 11.022192696 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.58946602 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.590291336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.592539456 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.580797321 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.568381217 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.593782422 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.50710464 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.503649033 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.568307464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.563533673 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.595038448 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.575276926 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.591894612 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.504507382 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.564297667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.592615514 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.569908576 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.599625484 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.507840767 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.577388926 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.471984601 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.580745359 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.565544054 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.473190551 seconds)
  done (took 38.717413507 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.050462633 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.59258611 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.676069003 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.557266255 seconds)
  done (took 8.165196007 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.638172005 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.641072653 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.657037951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.689681418 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.71982303 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.657474181 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.504914557 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.501571743 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.488548159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.641975561 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.715794167 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.638466456 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.857864188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.472405045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.859964734 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.472881154 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.473686424 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.637711682 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.689456389 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.718150472 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.475135142 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.64066492 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.645042083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.638476164 seconds)
  done (took 40.364445927 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.491000218 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.500965241 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.475925186 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.496700035 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.475679973 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.47759977 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.478207319 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.489917677 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.474269877 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.475101757 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.476345211 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.496583958 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.475901509 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.476331732 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.488989557 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.478917535 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.478967193 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.491917233 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.493287171 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.477127225 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.477504716 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.492557189 seconds)
  done (took 33.931208712 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.437000963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.439101719 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.876703525 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.781383094 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.437196309 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.431926574 seconds)
  done (took 14.694113057 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.566438372 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.774066311 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.468670911 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.943420179 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.072111684 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.469943839 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.470064664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.827872944 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.218062018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.148933116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.55443091 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.566596632 seconds)
  done (took 22.371767458 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607019929 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450609327 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454048172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542248005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450219263 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447078989 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509928462 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097192247 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.472312156 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807357206 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461062123 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611598514 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.790857203 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450834845 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451950559 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.419145759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766696868 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119878862 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45552727 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466528321 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511816551 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45159828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451190615 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760245 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44898852 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450319066 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.93945494 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451266533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880369075 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840156698 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837261708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455749506 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816300732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155499802 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626804219 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746183296 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445240069 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470909883 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.448197288 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.462534656 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458627246 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45649122 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832339713 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456622312 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453846051 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46537098 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103894007 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.479318005 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.453544337 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453550553 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847290218 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622973354 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.48202226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455120585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454016115 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452533035 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.483128686 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655099996 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185034843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453232565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462219672 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.454454369 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448749873 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476017376 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275117248 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.478553034 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.482965047 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484914458 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455953442 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44933619 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52796204 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454118921 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.501338892 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454034762 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449176533 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467978505 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457225392 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181437458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457344052 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.475788856 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771652876 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456003449 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455969575 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.45749016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455991924 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.437140365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48771642 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.42406475 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519549308 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106076617 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764714913 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504600759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516395974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763930316 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.425150363 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457958027 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.465359527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46026663 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505052353 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109508339 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453592947 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.481313022 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797610995 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.758554003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461081538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.426321881 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112101616 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472879128 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.510433624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463401596 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.766337186 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.253497111 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851840447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460491729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520911423 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459301423 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463191863 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476912881 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487261055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475504881 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865883574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.448900451 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455678128 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612048152 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460870198 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460395627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46889147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456787696 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459969666 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.741387854 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457483735 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849192764 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.459087081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460774866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.468858086 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47501236 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.456936947 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767574634 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472089013 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81117969 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462342313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459366726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454986001 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.761598943 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.457011468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.48431033 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886574333 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459493627 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49631472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850494117 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522568268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658030955 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52447738 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.459701894 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803342171 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.489541722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.492218528 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474654354 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459801069 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467583413 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.493563393 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457748154 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269524148 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45867809 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466498568 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463137596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.509076817 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611879975 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494170593 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759957813 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.473999732 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447332793 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.486324064 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.461677424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781212122 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849095336 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.4735121 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7105032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.080269775 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27290272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501336238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.460825361 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.462229799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.461898262 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4613403 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461896656 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463928479 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752112123 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857208239 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456567138 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27763761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46176256 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47859864 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.488125969 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849680954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.491272947 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461113805 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.476248341 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460299037 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46130056 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873076737 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757480613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.507880367 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464244301 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.071133766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491949011 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458921976 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465219216 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51888414 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462852154 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177161984 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890076105 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461522307 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85479613 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478506869 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.507453147 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.462481856 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459282288 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465090917 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.464924625 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489978858 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.767276062 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462238948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485312204 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187183231 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462027818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219089662 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46144157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.465321114 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459300516 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087736716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461380669 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469293337 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834980482 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082442956 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462175113 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083979953 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.464982244 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.468395247 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85448841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784101456 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467520206 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.468200042 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862497039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772392286 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525380985 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479571739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463748498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.430112167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167255417 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474461522 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722068987 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099273379 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479511745 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471719414 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.53569787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.473912081 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037718693 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467522302 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467059114 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483233657 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480364507 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173946072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475020043 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46941046 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307784251 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485280495 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.093764647 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465272923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787183203 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855929026 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.836978362 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.472137274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.469680257 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.801699295 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863968456 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473400214 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482719345 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207837114 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.415964767 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.498244365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46868034 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477243929 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4747045 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895043148 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.481790107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.474900754 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464849196 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471064372 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469866385 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.470657546 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481495167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47190582 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135564515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46899707 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485581372 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483433403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464836555 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803862907 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.512580825 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27831989 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792171966 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480207923 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535787547 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.497356194 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470833407 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.441319598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47315109 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467422149 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474093598 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777960661 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473884982 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.437454371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544280875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771242279 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472386607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473557287 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812406941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.474852074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.476899053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487932508 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533052213 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469599382 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476412678 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488582871 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533328575 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623355386 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773508559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.867817758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868803637 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046273272 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472598855 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476307358 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.517771848 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637448449 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478352589 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.489531944 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.466593832 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28129883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474337763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318023612 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871439867 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475384614 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474708201 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474246899 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799991675 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473818214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835085174 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474273509 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.473526697 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528172961 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472139299 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485671956 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770370659 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830229389 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471724651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480222799 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470092182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.475368551 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876366261 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.778147906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149924023 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215505059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475946976 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476098812 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105656662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823532099 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474772036 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47692664 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476789053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.488183029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489668484 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.506758715 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478229389 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7865642 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87076073 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082383172 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869938628 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.507904672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.424499582 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475617674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812584408 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406665611 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781438967 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303454859 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436577305 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817171234 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629570212 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785343583 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.47638111 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802187415 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.488581543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479872615 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479559307 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480330006 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.477056615 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872491817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297969945 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822707832 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.505624843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.479545409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541756532 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.781973392 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.78240962 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477129109 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783744358 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881066091 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491528077 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479698012 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307013273 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882313806 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479673218 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.504436424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817270898 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483327035 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547561251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.440721547 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.480088215 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228242013 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.780884217 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529077127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488556471 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443234786 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30793008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.487945289 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155455034 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475878532 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480936019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842958312 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.50767189 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492798631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850027368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.506240703 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491119855 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792902087 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.294788743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.44028448 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.498460174 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480449923 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.482790793 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481517308 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573961535 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481870775 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476313643 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.041845125 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482033924 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480802761 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519706731 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.482814889 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494769971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.481790387 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48302127 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.509771808 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.466784428 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.461511761 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500628816 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684218223 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185319097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482751892 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.182155636 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.904996788 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819013856 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497843615 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.452350749 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.509301288 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483515677 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482081975 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478074482 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46537566 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206554478 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.494283107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.875797474 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51004391 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.778955061 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782330351 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491045474 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788303387 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496669374 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532815381 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.451423118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484115612 seconds)
  done (took 1047.175979109 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536904798 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.501734124 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.512901675 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.533153692 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.547800387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499403381 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.556247411 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.495128047 seconds)
  done (took 21.505729046 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.482859797 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.511469091 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.481079402 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.5066029 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.477500666 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.113592378 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.478027409 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.510996057 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.530119717 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.489199989 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.480487847 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.290195213 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.508854233 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.480762254 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.479920387 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.511726526 seconds)
  done (took 34.667786945 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.76041681 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.70811819 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.144466206 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.491571589 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.495930942 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.473854461 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.91622594 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.489882268 seconds)
  done (took 28.804420172 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.522258661 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.520606916 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.521456046 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.520639881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.522974046 seconds)
  done (took 8.931051078 seconds)
done (took 1311.639773639 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.514655879 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.511248532 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.512525441 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.514314145 seconds)
  done (took 7.375728646 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.455061708 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.455041036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.455143493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.495317177 seconds)
  done (took 10.183531649 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.994371771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.238678745 seconds)
  done (took 5.559235082 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.487943265 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.33646604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.318840057 seconds)
  done (took 8.469494619 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.87777957 seconds)
  done (took 3.203220396 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.058462532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.081077768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.493404364 seconds)
  done (took 7.962048107 seconds)
done (took 44.077496867 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.47851085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.2505621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.671218595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.476566538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.651654585 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.691394556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.720459634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.495440377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482664799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.495398333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.473136144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.669737262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.717230662 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.253476158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.718391214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.244107997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.653570192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.475617954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.477535237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.485252419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.728467076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.475826849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.479599745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.47932059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.65313557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.762235268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.494351482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.244252848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.484502115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.477540755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.644099505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.490181468 seconds)
  done (took 86.319702459 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.490799983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.475876786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.476019471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.475220697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.47678144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.476253859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.478306564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.473818424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.487458496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.489961398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.475049306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.485537721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.475742062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.477597326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.47854179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.475035338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477699224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.486229918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47586149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.475660836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.478712063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.478907828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.476564792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475678786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.473365921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.480344952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.476885364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.475102874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.477754399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475609433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.497037437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.47929859 seconds)
  done (took 80.657101579 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.491437145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.474311643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.476227319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.496745012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.477716615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478414609 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.49282503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.484859562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.492279221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477703066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.499872574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.479531859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.478118831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.48840268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.478869764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.490147106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.488033779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.490858718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.477581751 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.479319473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.477914755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.478904265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.488438439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.478479281 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.487946058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479871428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.497401311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.481017035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.49663159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.492456268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477705789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.490537937 seconds)
  done (took 80.850737097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.815190396 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.520207423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.521803506 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.494925995 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.524048484 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.521763976 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.494276472 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.86429224 seconds)
  done (took 16.08762057 seconds)
done (took 265.239729096 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.494199228 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.516731702 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.551110654 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.509294583 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.541045757 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.549089587 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.819684403 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.551981855 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.808725188 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.499187083 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.536075921 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.497353679 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.494178345 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.72226545 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.494691189 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.496351387 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.486785575 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.509110621 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.497850879 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.848118744 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.553459067 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.48575842 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497270218 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.500419781 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.48324106 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.604623186 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.609991536 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.747889868 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.706389409 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.606257472 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.509605446 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.499019114 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.496870727 seconds)
  done (took 71.056904445 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.515736394 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.52554225 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.526233468 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.525320294 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.524746758 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.529457691 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.515940609 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.526675494 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.526559977 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.525965418 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.524034377 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.529528371 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.526850586 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.524876313 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.526813571 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.496856409 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.518100451 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.52562997 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.515738977 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.498561165 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.525308421 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.526917773 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.526851425 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.528844136 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.530249971 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.52508891 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.525378612 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.526672281 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.528196358 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.525412903 seconds)
  done (took 47.031984935 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.528506942 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.489285893 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.490310883 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.528769894 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.518054356 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.525030872 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.942151163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.528780789 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.526140161 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.525635976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.491680681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.550407353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.59254211 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.495332263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.519960814 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.528548008 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.529151298 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.519257023 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.492513818 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.545197194 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.964972851 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.53093267 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.938372959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.547385809 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.52539258 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.522503664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.533825077 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.506551916 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.52445922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.493875024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.52720971 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.918758035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.493487405 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.505395204 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.506239166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.529925558 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.528855101 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.491955157 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.525826783 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.520917709 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932998394 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.522551855 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.493781717 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.495673018 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.525594701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.527392275 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.494327806 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.493823202 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.834131142 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536187667 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.508952012 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.526337183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.531790879 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.525205336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.835599485 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.527764529 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.524153455 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.499423355 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.538387109 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.930475516 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.536263445 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.523241678 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491631792 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.525627595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.4948315 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.527150485 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.547905498 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.526938935 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.494591107 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.528568752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.496001552 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.524056306 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.53059792 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.517098229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.496296003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.496229863 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.526425532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.493916649 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.497478206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918749654 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.533463369 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.496671539 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.950315959 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.529515171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.535512372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.53733928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.534042702 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.698513966 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91703079 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.510446475 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.496847958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.497336777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.936212559 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.543885434 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.52656731 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.503114118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.537024157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.537941452 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.494463786 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.498739958 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.526357507 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.549980553 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.498121724 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.525124249 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9350328 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.539639363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.516103829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.526683037 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.651679519 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.536604131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.549398146 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.532264613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.954568036 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.533719895 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.534506099 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.49880966 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.499441794 seconds)
  done (took 223.064650545 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.499761946 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.501678251 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.498446695 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.500831775 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.498667533 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.52855639 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.499107114 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.502766308 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.528541723 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.497898721 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.50062714 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.53032519 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.529280364 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.499503673 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.503137375 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.504730455 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.498862809 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.502673141 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.503738988 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.501583826 seconds)
  done (took 47.474601835 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.537689186 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.300329881 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.244016785 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.539159135 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.537382303 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.530077393 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.610303936 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.538313077 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.536975197 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.962806164 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.769989815 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.541767567 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.538297573 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.537065013 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.244127203 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.511761028 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960437148 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.299650954 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.543088475 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.297252745 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.51014525 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.539660456 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.528772199 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.299768009 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976485208 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926972836 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615814762 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.305137545 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.539320398 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.53717243 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.297496281 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.539382976 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.531804568 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.284505313 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.542193948 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.561900784 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.54071457 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.612238889 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.613770578 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970217722 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.312556995 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.939927277 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.560445431 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.766397598 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.544512609 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.509261688 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.32155786 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.541613777 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.510504165 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.542123478 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.551916344 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.265858878 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.534699769 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.260365302 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.543204411 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.539288131 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.298554655 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.257687518 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.2494093 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.770104285 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.532292898 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.930932209 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.542800449 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.308843115 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.542098824 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.541700659 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.539731763 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.768104868 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.308831801 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935012546 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972168249 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96919287 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.542297523 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626467095 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.543669694 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.970011759 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.625768124 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.033919607 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.97148555 seconds)
  done (took 143.224865959 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.91400331 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.680434363 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.100868902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.311899229 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.253474342 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.750926567 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.680798864 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.867644202 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.518169524 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.70893247 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.459015144 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.669877085 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.483943384 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.634237706 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.675021314 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.737141295 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.134634719 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.507408309 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.421783525 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.422641804 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.525435602 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.704510399 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.44441238 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.020906848 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.506029991 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.438601026 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.52273456 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.269242338 seconds)
  done (took 60.714633405 seconds)
done (took 593.898711995 seconds)
SAVING RESULT...
DONE!
