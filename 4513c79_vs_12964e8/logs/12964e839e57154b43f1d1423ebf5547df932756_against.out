cset: moving following pidspec: 9506
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.188856977 seconds)
loading group "string"... done (took 0.536162315 seconds)
loading group "linalg"... done (took 9.781210027 seconds)
loading group "parallel"... done (took 0.166162262 seconds)
loading group "find"... done (took 2.464312186 seconds)
loading group "tuple"... done (took 2.194781613 seconds)
loading group "dates"... done (took 1.398887457 seconds)
loading group "micro"... done (took 0.197656071 seconds)
loading group "io"... done (took 0.507305573 seconds)
loading group "scalar"... done (took 57.448552712 seconds)
loading group "sparse"... done (took 14.090336 seconds)
loading group "broadcast"... done (took 1.351919123 seconds)
loading group "union"... done (took 10.370935508 seconds)
loading group "simd"... done (took 3.623264803 seconds)
loading group "random"... done (took 13.338915933 seconds)
loading group "problem"... done (took 2.218882304 seconds)
loading group "array"... done (took 23.74652503 seconds)
loading group "misc"... done (took 1.142632663 seconds)
loading group "sort"... done (took 3.805879016 seconds)
loading group "collection"... done (took 20.710155321 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.75118463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124296114 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204905107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204946243 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279413185 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170467068 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165605067 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162802057 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.668648437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208596219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14003345 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.384019853 seconds)
done (took 6.199541367 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.302284319 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.06568929 seconds)
    (2/2) benchmarking "String"...
    done (took 0.198881995 seconds)
  done (took 0.943455589 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082462442 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164875925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112194365 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098332755 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098074553 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113511013 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097560171 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113627787 seconds)
  done (took 1.479426818 seconds)
done (took 3.487760909 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501324645 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.897164856 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.504021775 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.192356375 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310213051 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.368468574 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.275203292 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232172541 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095132489 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09089864 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.205547438 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.429397272 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.432072054 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955339362 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074249665 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097096635 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.163741422 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773330603 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085564512 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127577327 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50573156 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222624958 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119312589 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110706676 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190154 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130699511 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144695565 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10813044 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674742647 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13601122 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214202169 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087774499 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143203755 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.174392359 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222761638 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115209692 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689493755 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204022942 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100608674 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.106524021 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679679448 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128393353 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.212788931 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108818586 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072794523 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168673614 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120786658 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084695197 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098278699 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106765601 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164678344 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.451603448 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11237686 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.207141984 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0992108 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699283827 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10326802 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279392582 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129172362 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097489282 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095320501 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093348673 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162634159 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099179441 seconds)
  done (took 20.49229731 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.193947987 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.211547781 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099577816 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14940189 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14586394 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08568848 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093373815 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.102548375 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120533484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.204579926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130643848 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.219624437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07937832 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112181305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.189748361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23870759 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113563883 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129934261 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095590577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.100808629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151991604 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102976363 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118811198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103178623 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178476327 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211485553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117493084 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130808883 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095468705 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101888026 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148563096 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152076183 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097188477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092767802 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176820111 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126951828 seconds)
  done (took 5.626973933 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.240782505 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107747221 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24860375 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.192769206 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13021181 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182380525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.198267531 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304581959 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.258174311 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167279233 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131303009 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100215188 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083182086 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082275966 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101042039 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.84852571 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156513339 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161843765 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188725955 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100393213 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101435036 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370489711 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105379393 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088924716 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096904781 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084513261 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224761403 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09746868 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.47678116 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087497718 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117911223 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118063477 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213838855 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12555612 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125706139 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114246441 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088879528 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211694868 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101685416 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098690134 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084140727 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134043093 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119075617 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.112934892 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108181215 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137580973 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.218057409 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089488196 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111299768 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.042835405 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200647024 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.167006084 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105414243 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279822804 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110471031 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103000249 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113308753 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089315897 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.794659921 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12281485 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100661684 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084674105 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09740219 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098945613 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.463790542 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1070259 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.344343021 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08880417 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.167104281 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100344255 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119595516 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08732996 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088191522 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10728152 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110032707 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.105876453 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085766144 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088648983 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.103183443 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.094296977 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118030302 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104339595 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083388188 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150763515 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117983788 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110551348 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128562858 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094689974 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087828278 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134605595 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086158023 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106906961 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206846555 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100914438 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116208703 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117556919 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149402099 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091459815 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.283408176 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088284551 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128620895 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105910674 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088167217 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135284732 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102892763 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10336489 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09068744 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101395994 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088910049 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153928094 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.105928694 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087614633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.093407269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115770029 seconds)
  done (took 27.696472786 seconds)
done (took 54.493777876 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.821464587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08210227 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101950045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082742714 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085526728 seconds)
  done (took 1.919291902 seconds)
done (took 2.649810426 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.18617605 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.269074301 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203696993 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.130250712 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152276766 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.172048135 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154303211 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.170934656 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152649789 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171841964 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170880738 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109145514 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175876416 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185899059 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124724241 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.190094705 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.105835176 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151392437 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.106374002 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178225667 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.105183348 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089619916 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090145681 seconds)
  done (took 4.293094115 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107975533 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103216617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106122782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126120577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090629053 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106122783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.127098286 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113833819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107260846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.121038157 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093680767 seconds)
  done (took 1.940147975 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104278553 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100798921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098435003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123058036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091049009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10306569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120675332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111800809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103533906 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117389578 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092205022 seconds)
  done (took 1.906261264 seconds)
done (took 8.871612166 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.18747391 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.853368156 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.184451808 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248971325 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329353055 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300151227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612666038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204942403 seconds)
  done (took 15.767276691 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.118492652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.202458357 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099252914 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097999962 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.119300087 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094679498 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094563212 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117239978 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096972387 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101346337 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110140123 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100685499 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099324991 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093648781 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113308054 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099333093 seconds)
  done (took 2.550561772 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140701412 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120995274 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119737642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.103219551 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098496743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11993676 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106530097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100626972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.116323731 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099038293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106013132 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118793109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102007316 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096472044 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118079052 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121505116 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096625835 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118015566 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120414335 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.119319643 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104894903 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099650731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116192219 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102907709 seconds)
  done (took 3.469534359 seconds)
done (took 22.52906267 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153883954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104837285 seconds)
  done (took 1.004456922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.170552205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186181497 seconds)
  done (took 1.104212624 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116523128 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093619447 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140842072 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108131418 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094245504 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.111509222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120661084 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111155406 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09679087 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095561872 seconds)
  done (took 1.842591575 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09888541 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098579086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125805034 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164189803 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120668907 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098672533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099050795 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115622803 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102422591 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09468718 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116829173 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112723972 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09792139 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131097607 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099874781 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115362784 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104273945 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098145302 seconds)
  done (took 2.749439577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095282437 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098412864 seconds)
  done (took 0.950146593 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097027143 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094276793 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095015504 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11515354 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094676704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094924502 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11133867 seconds)
  done (took 1.458210503 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524313042 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238507145 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370849953 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077524314 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126663803 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331258325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108111932 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077340701 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096528686 seconds)
  done (took 2.731540024 seconds)
done (took 12.594103063 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096382648 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.211500429 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601266474 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.137468319 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095556844 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155312697 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.347707205 seconds)
done (took 2.404517292 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342927966 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182578734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089306119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096614521 seconds)
  done (took 1.466050327 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086803287 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103454567 seconds)
  done (took 0.950241089 seconds)
done (took 3.180062981 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095577098 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114786944 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092102075 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.110948257 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093752006 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.091698602 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.111248993 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093615536 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.211248441 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091720812 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.112958428 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093675949 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092256355 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108168015 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093426476 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093104786 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091489149 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111164626 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093558546 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092651586 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108906796 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094175384 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091548862 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091826272 seconds)
  done (took 3.25864553 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115121693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096226552 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11404027 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098242032 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098331987 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113644549 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099206749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094626628 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113802111 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095911359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097950445 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114832829 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095591765 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098348191 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095597422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116019502 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098429277 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094705828 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11251354 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098777505 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097101663 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113585883 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098059327 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097319918 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116279941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098886737 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094492183 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112282295 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098362648 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096809517 seconds)
  done (took 3.850468554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102482375 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09091198 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092814387 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119678417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091615282 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093714081 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107748198 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095159656 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095084577 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092547523 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113835496 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094419129 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093607784 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112042111 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096536927 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095909542 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118773483 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095554749 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093685936 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095476387 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115321998 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093806622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094166583 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.111397685 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095260019 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090248767 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092872145 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.11210441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095926724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092566869 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.114649077 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097276267 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094080539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120722265 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097789112 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093768768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.1156286 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091935853 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094917518 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090439084 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.109514834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094915771 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093505257 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118378741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094547638 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093981644 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09358285 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.113562905 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095794304 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096257003 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.108616885 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095719574 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096173682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111923241 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098438216 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092419295 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093521739 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.113377895 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099569505 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094218406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109050041 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091738552 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098289664 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09466099 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125955682 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100483449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093507003 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112850734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095971981 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099008121 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.114238829 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10495783 seconds)
  done (took 8.012640644 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095010406 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093937854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093202844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111675724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094930159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093318152 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110760244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094948037 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094292158 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09297125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11235919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094887834 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094268482 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093405035 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112629826 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094532831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093792164 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111022638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094312622 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092912444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093210527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112237247 seconds)
  done (took 2.946492917 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.24022978 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101614947 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143441635 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127532698 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110975844 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128417936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099793347 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100651137 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117210785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104171837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102666617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116426886 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1126938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120551503 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106592326 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105081449 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117074315 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106487913 seconds)
  done (took 2.93316252 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096219638 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094465295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093296012 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11239879 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094005809 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093879885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093995752 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111630815 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095561454 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094041219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112156092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095452781 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094087104 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094253047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114184632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094475911 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094147098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111568168 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097866705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097968114 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09608226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113297299 seconds)
  done (took 2.968575334 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110931705 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096832495 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132166458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100516972 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095508235 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113965609 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103614293 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096751061 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.122923522 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097263625 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098288686 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096099162 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129368965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097435505 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101866097 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114810479 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097055917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097414413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114283318 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09735861 seconds)
  done (took 2.890097617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190190666 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131656895 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11321342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119345554 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132041232 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112857159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13846237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113266918 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111748498 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141413653 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112678016 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111521305 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137612821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116738797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130260908 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121820729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119632112 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137518396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111860873 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12920854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124162368 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113572613 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140854225 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111573546 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130160616 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114004861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112059431 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135419665 seconds)
  done (took 4.292274597 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096154127 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096899892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094209746 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113399477 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09539139 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095219581 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094702196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.113598594 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096620318 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094867441 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.114605076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095701975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095779568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094461105 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114165775 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095646101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097093981 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.119524418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095062926 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095225307 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094796831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112811622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095150088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095347669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114077007 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096384114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095608597 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094849981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113037698 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096293949 seconds)
  done (took 3.794557604 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108498853 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104887361 seconds)
  done (took 0.995159999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099121404 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098015816 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097619257 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114991089 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098580972 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097793092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114957845 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097898133 seconds)
  done (took 1.60117582 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.187027415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.214907217 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119874043 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107785214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210526352 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191345143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133253956 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100582134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.115834563 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089531078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.204180783 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087320811 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114939058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094589543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095034431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121444703 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097522527 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105476961 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121953707 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09974369 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101246674 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11861215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099346293 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106973729 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108841564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100079766 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09994155 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.127315352 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093655136 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097006051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113652441 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097765365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100090242 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100923169 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11668048 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.21480895 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102737366 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092735047 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11731443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101805614 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127085574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.117419401 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098249644 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096035397 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.12061024 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10228263 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102005709 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.117159801 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090934887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091547116 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.116498963 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094538698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097595372 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097697968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116793483 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102001379 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.119547604 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094326939 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.094264082 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093051428 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114982499 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094145771 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097916781 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120548011 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098265918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097492007 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116270651 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097815441 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098491994 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11772349 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097645378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111978276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118411985 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102132122 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102768586 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.118667535 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095506419 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101889563 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115961814 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097837441 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101370852 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144260523 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09957628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092014285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112071165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104500579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099163518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119085884 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091020723 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105264014 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.118600417 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100096458 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090047903 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095022908 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.113309591 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100732223 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090134856 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118644417 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096662641 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102579455 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121453084 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097196717 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09833967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122732786 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1042319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096555994 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.167225456 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094522495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.113307496 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099571461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103667583 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091443891 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.118008163 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097018482 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094826235 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.112699597 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103427747 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09646513 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118803934 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103181767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098910832 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118714468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100660286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098437098 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.11328361 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103035029 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106691152 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118558931 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101997259 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099001626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099190826 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117070124 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102066681 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09470045 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122933021 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094860247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097213968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.119078411 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103177995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099314864 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.112197229 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096534622 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097837581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116466626 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101690865 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09826955 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.113250156 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0909073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098380667 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.112913661 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100418146 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106754148 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11283893 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10234842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094689206 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106022631 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.114913146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103400789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100648972 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123722856 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103665766 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090962056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114003534 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102497392 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.099504204 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.11443641 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099692915 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098194819 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123837815 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093309212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101535747 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090274678 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.118567032 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104521113 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099327296 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.122345516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094579555 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134927563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.131543474 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105319538 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096934742 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116746061 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103851824 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095988463 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.12275318 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105362141 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102720046 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114218295 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.097249518 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103045226 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.114162562 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100672229 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095884889 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09718261 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.1107798 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100611328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089365903 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122685713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099018388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101725715 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.12296431 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100267499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096264266 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126289802 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.094604209 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101921131 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108941228 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103173455 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108791279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122827072 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105991761 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099354953 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094118393 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.120523287 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10862338 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099744597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.118601535 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101158674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09081979 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.11139985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104855304 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100915486 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112996353 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099001137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099046534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119561643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09588454 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092370475 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102451296 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121404823 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094201085 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098447714 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.115155705 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097377955 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124158596 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.092160392 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09767939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100169512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123246049 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09835273 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097469657 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.120778697 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104893366 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101380699 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.120184977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096484127 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107138554 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115203267 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099558959 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09546207 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100754293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.112490632 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101225721 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098199149 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.115193978 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.094678101 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101390896 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125154323 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103674078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096990966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122835523 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105403976 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105211075 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11721288 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104439258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093936666 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110902581 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09580946 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090865116 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099819188 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.114411406 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103359303 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096317415 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117531775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101303804 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099741664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11553208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114083362 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10833752 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113092104 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.092329339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096003479 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119195045 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09531261 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094165536 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.121051008 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099961664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103040896 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121330374 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095549511 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100040864 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.123639675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09641219 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105006091 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.12383139 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105405513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094706527 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101958077 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.116323731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10233983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09240798 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118400461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098557156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097040064 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.115950988 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097013594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094656171 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.112751907 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095182146 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105813525 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117165947 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103660389 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09859941 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.116983452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096229765 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095271543 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.124758463 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098300838 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.11588869 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099408102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.113336758 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.091909802 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104663589 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118605305 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105100236 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09359584 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123337682 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106274618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106694155 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.120577554 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109162624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10857526 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.124234513 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104836167 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.092964545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.116547433 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104056458 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099471378 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10124842 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.122705967 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093281904 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100744026 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.126059535 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100538763 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097693568 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112674734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100871487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106516967 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.121875555 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102094407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101955144 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119351839 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.095930565 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102620033 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104111773 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.121387363 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106446009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097797143 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122899637 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09579605 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104977177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.121052196 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095042812 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.092219898 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.116441343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106569837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093457695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103350992 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125174717 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097189594 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096594965 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.124131777 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09581351 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10112927 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124025828 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097866845 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108568415 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.119802246 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.097880394 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102960788 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.123635764 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094430863 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09727068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117735433 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107744637 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09809334 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103722129 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119895064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105726992 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100657214 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124906456 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10483903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104407062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113703705 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10759371 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101937544 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.122365072 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.096502984 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097282553 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.113853724 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.099688515 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107235424 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095197092 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128954178 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104668827 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096989079 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118385376 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105300401 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096882991 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126546679 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096845206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100088146 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11334926 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102109702 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097403448 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.127370456 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095957454 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093385898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124039726 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104911665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103612827 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.123110836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112278523 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.093745511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092710323 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.122609796 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096514717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10830686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122044291 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.098571194 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09739779 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.123167618 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102121017 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106192205 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.113031063 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096314832 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09945329 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119814817 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098706057 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09447619 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.12298631 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098655283 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100818547 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116881553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.094268971 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098930737 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105452865 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.119132747 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095869314 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096261822 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126156476 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.099485626 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0960164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11427808 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105522916 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100388394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126825276 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.096842412 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099025442 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.116899851 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103371805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106408085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.116915775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100506915 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097891429 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124601599 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104912573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092234914 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096434749 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130757829 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105246903 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.100524166 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.123964926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.098619175 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105572643 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126465942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103092229 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.094024177 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.115812283 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098519022 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093437161 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.122416615 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104473551 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098164299 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.116432195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104982484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105216382 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10123075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.12262998 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.094943917 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106152186 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.117507751 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102658585 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09379824 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.113646924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102522255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105880713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117306468 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101955004 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101703086 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102218655 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.115984302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.097203142 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101486719 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124586932 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105172452 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097836115 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118415826 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103352667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108488028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122068316 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099321848 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106523253 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.127473263 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101012496 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101379442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124001593 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10731225 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102500046 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12720591 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102007595 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098780229 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.126114711 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108527838 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108637069 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119063395 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094957257 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104904192 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096565003 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.116310251 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103646141 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106547977 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128859892 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101673683 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097297219 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129647003 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105724059 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100030528 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117767908 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098742794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104626293 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118920779 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105426466 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096613403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12720207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107968338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105120979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.128568654 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095692127 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10538484 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123092887 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110352022 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102323906 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093876952 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116793972 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104374027 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106744649 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.126914812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107185768 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103348058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.123985879 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101764337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100801366 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096570591 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128634165 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10621197 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101024369 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.122949992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099992604 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100039607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.123783059 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107486503 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107092668 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121378214 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112254847 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104533474 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.119361966 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.098611981 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100813308 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.123825452 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103400509 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104209272 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097326413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115914321 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106746187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107401716 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12010829 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109091666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1078091 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.119578824 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104525583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10808672 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125275428 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103469233 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101522059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.124422177 seconds)
  done (took 64.957522673 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149651503 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109176034 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126083771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103583842 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121261161 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125114304 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103908604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103862509 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125907002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112783476 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102355195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123438113 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119992564 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143824854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121823523 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112728093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123732704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104961812 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102736877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123897529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117691782 seconds)
  done (took 3.311703464 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10432444 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102297786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10074682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12449551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103573367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102975944 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100964934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123763783 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103645932 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101489512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123852412 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103099773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102557804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.100512852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123333282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103534535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101885233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124319371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.105038706 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102524979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101061594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124914488 seconds)
  done (took 3.221844761 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130599709 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106583875 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099406217 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.124881802 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107188071 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10237496 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127688375 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104203963 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111753666 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118687928 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095610064 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099744248 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101509766 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124918888 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097286324 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102651601 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132910756 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106914923 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107047831 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123402005 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095806038 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103639157 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10340889 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.115799432 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10892244 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106624313 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.128035066 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108440256 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093836723 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.126448552 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105121119 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098356432 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093245307 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.115932131 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097216832 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1045751 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12772106 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104276598 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104245449 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093164361 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.125563034 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107460103 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093644799 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12445151 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104407342 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097811879 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.126557225 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104494783 seconds)
  done (took 6.0836077 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131754604 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160059879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10759825 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131352737 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139764561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11325721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10641444 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158436697 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10560945 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106086046 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142030841 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.365046072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130810559 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111828956 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10824924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130394166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109355177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104559316 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13340202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107471768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11026465 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.129907162 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116748506 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1363635 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111569285 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105140116 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126797619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11100434 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116450912 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.132079296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111523819 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109415101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13766129 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109399456 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106082345 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.129849473 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117162944 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12978061 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110462161 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106299761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107331666 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133207303 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109901615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138689424 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109664085 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108591533 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127233707 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105323939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11530775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.130196864 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115009877 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115737623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.13171647 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109086079 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109207951 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139170002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10724618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105981564 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.132022654 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116057146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126019587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111831399 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115928709 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127921993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113152867 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115445895 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129936705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108826898 seconds)
  done (took 9.305928569 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136272776 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110123151 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140867704 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118402766 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109919914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.133833989 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111269248 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109853215 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134308979 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115103255 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131766268 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.21943831 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.13249136 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116709185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13288254 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111846066 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111578015 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133273023 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112034568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111560136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.131993949 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121003167 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111968499 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.14217192 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121447776 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128765536 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112573045 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110767368 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141248269 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111306822 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121425566 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.133899849 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111977368 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.139001266 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122771409 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110624333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12784461 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111941679 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111180269 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133534718 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109293088 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11764415 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134461722 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10798573 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110042136 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135502776 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119753427 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14429279 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116945737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120669675 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132420959 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120483757 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133260242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112113419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118931256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147241978 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117967865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14167046 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111537019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117730893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141230739 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125852107 seconds)
  done (took 8.580209956 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1046191 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104566161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103208376 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.126235466 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105719519 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10446482 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10366444 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.125903511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104624688 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103842814 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12551247 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105754789 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103776465 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103016242 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125315307 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105080472 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103859785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124997739 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10521324 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104961602 seconds)
  done (took 3.052292893 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108116612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109063101 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10496705 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.128490851 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106298783 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105327081 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.127241041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107932859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107020872 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106402986 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129629822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107348218 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105607564 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127083339 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107814268 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107476865 seconds)
  done (took 2.651035164 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124821529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121637815 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207527018 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109009323 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.130926775 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114377464 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106656091 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.132494852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106657068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111767425 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.134124458 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111185927 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.121840494 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.129876572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108014015 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108927748 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.12664271 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112419952 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108145317 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.210724353 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111112523 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131426559 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107912257 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110873667 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.131971181 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112395019 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113363857 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.130441518 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109853355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.1085483 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108467704 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.137510504 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108621076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112857438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.131011423 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110108974 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106571583 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.130015975 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111516486 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106808555 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.132004287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109244408 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107322935 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.131231493 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107242199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109280726 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105734815 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134969538 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109231208 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108070865 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.129307575 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112877134 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111254441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137429697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114373693 seconds)
  done (took 7.488819005 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119061299 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109160111 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141621361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106534148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10933625 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109155082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.13166374 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110969419 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108513729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127779029 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109289107 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109076231 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130976153 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111646181 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108555354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.131285968 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106525837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108890383 seconds)
  done (took 2.95248467 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10639251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105255633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1053539 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126938908 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107006834 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105242154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104220586 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.128518438 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107220479 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105628446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128707569 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106130815 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106429805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106099735 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127988483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10639719 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104454205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127587034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105917799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105832592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105819462 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128529892 seconds)
  done (took 3.32627508 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118915401 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.234417239 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111534226 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.242395489 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.126622177 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104010503 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113211743 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128536946 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.119333401 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.103544522 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126009809 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.1038271 seconds)
  done (took 2.497068796 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134640655 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14374293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1304316 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108977685 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116657153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13480995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113163972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112297939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142719336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123011243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13320835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121111001 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119213484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142386054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117391884 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138079779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11284808 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111876797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129220832 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128506355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11285632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141972663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113282003 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133215334 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113624994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119563459 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141646225 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125104527 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111952575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142996536 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11682135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134294731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120725199 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122336088 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130895835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119130233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134013411 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129108248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11707215 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142371178 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108890733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115539413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141964561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118386284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14172752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113677514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117610417 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135271252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112935381 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15517951 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117643382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118927065 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139389653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1206805 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141486218 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1340887 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146043362 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120214588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115726518 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144795019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120211166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141215933 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121374304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144359069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118089249 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12056198 seconds)
  done (took 9.233477595 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147670315 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109053882 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134219792 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124523936 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144357882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114017432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113197774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135338369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113200987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11001818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178953693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112640581 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14224218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12284977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113590841 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135060541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114269559 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120058983 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133249627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133392801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134209595 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122536881 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12039485 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142363356 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123506977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139254859 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114134277 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113612562 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13551856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113482657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117773705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136063252 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122350266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.131510858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121988767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113115152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134711474 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1192901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1139962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141121507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122478843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149541013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11511841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113453324 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146860017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112562359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11208653 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132030337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113314479 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109061494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146552016 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12524358 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146061311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123429243 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134174744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114481667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114280664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13593635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113942562 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118148124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142715704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114169197 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15747198 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11399208 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114300987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14296385 seconds)
  done (took 9.224409194 seconds)
done (took 174.190589045 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17823314 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.220256082 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.203990535 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166072934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097985086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156619218 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132146832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.20470138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098857124 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098077765 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.121789161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102429367 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166879182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.122057211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098747822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102002985 seconds)
  done (took 3.138981501 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199155842 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34363483 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137227926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103520846 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104796496 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103859716 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124985447 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.105920802 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103860624 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133032838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10476884 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099680204 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.133113366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099673778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102777874 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12551652 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110597444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103699081 seconds)
  done (took 3.221549822 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12336443 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163752458 seconds)
  done (took 1.170358186 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13381569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218771465 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298655507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176095088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124909669 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.147768512 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153521199 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139030319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193699003 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140034987 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.117238442 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101427074 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151596861 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109766751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143107165 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104072662 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131212845 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.140864771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120181694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.105397831 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.152347376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108369297 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.109685107 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.14163044 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183306062 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138769393 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108313913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106830904 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.128791377 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11869135 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111215958 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.145577031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115073571 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183753884 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107215729 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180521909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.133258496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106938529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118347172 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126312641 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108712148 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.109449743 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139607279 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102486147 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107395361 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133140115 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108463513 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.1072371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.135790732 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11058571 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134287677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112260993 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178820505 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112474918 seconds)
  done (took 8.159366495 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.910062167 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154671764 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103458896 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.061732501 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151138214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118773694 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.935817886 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131419924 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259079175 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.930815155 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119476576 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134539245 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248793789 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.285550209 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26188903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365618351 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.762740919 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116929744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156801504 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15040977 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132524045 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123735637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119447941 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.462152974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104604642 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126826324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110155767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114048791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181456175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104215208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131428236 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204805653 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275388721 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217054766 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128477302 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105679151 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103762776 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191269504 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274921343 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224541542 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198223671 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100757506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125700273 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111378828 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120342049 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123074031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16417409 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198815785 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199258579 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10842112 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135974903 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111894886 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130231924 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163459614 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12574092 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365048377 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368115875 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102468129 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134099176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118144633 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270299736 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128240121 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246081782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126948755 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220012056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12659885 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812528953 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170020224 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127319123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108512542 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109302307 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134053918 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107992225 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188125879 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.414589733 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133017125 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109110173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104818217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234684523 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127938476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105101494 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188743275 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106155958 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110998682 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135841576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111035558 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.197648458 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278440436 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11237693 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130426362 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111031298 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115685451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.128140318 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215061845 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.257773073 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161223296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234104561 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10940679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188307256 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194778889 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109950574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196693169 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131486064 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118138697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110725254 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23111675 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.165502401 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106612579 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132782807 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111456632 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166546667 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109042078 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110395603 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194615531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500298816 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194191105 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102387322 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109660453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135315042 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162787111 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136553608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269452701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112023114 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192469378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110629501 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.127250819 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111257444 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189568241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112866657 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133116718 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109658777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113148467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286781301 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229254502 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137349798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254956514 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179141356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131440179 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17737961 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134574935 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19187433 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115717788 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109452466 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128578501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805623816 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117114194 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110071888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134396699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18847278 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127967669 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108296802 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105230561 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124591123 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798825256 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109037678 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103570783 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128793892 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111854029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110931425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133187957 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111160295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189531085 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260514762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114732257 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133121537 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105088853 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185759585 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107332155 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105514954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132063651 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106416256 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111381762 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133400833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108747837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197273829 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183846982 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.238810187 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589583563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105175665 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127338679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251499649 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105166726 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33273086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134655462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.245583953 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189344678 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104062954 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37162533 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193750895 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211161559 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110073495 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.198215569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104682725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111192562 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184775452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105295723 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137069805 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183585217 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116222461 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1129754 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.311703186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107627024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253767396 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10382277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197187156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107009558 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110553374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.357471016 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106804225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117435185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186470919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111865692 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130513455 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.986063102 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106974497 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113897514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133110223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.244531235 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190470031 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112589388 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113081558 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137356713 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189856196 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210476207 seconds)
  done (took 47.996340458 seconds)
done (took 64.564695205 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259808248 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173320713 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.358775372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152562417 seconds)
  done (took 1.89963207 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262362274 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169777595 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245197242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103045995 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253883123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102104813 seconds)
  done (took 2.050107279 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175415044 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170303989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147767744 seconds)
  done (took 1.410747624 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214499483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213491046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350551142 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.240665101 seconds)
  done (took 1.992547376 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28316904 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121768907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131552623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.228672515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.246537636 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211474937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127416971 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178628441 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134196884 seconds)
  done (took 2.60872238 seconds)
done (took 10.874980541 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.415391231 seconds)
    (2/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.413359199 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.279731801 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.141512059 seconds)
    (5/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.240924422 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.236834377 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.194507485 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116664207 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121610297 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.254774857 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.136926491 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.213344099 seconds)
    (13/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.144257032 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.261779937 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.409422106 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.252075002 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.223601828 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.195226153 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.086626868 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221139085 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.39031423 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104962091 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.155999936 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123073402 seconds)
    (25/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.194688375 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.267491767 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.086498081 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113796943 seconds)
    (29/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.247878658 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107564097 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.165407277 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197324185 seconds)
    (33/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161176641 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.421009613 seconds)
    (35/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132381289 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.111785165 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12766372 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114661858 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151753445 seconds)
    (40/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.20849006 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.206684523 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.140651056 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116910119 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106167691 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.165305938 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133276515 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155282037 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207835159 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115610092 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083169864 seconds)
    (51/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.230607886 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.176496047 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.171733151 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108900301 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115647597 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.32108706 seconds)
    (57/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.17287757 seconds)
    (58/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.148830029 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.194678458 seconds)
    (60/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.143483958 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139868275 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107807843 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.108291914 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196727671 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201006637 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.259197346 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123427567 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.139757227 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.112497197 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.244977381 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107742402 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123872806 seconds)
    (73/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.183655617 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.255375841 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.155265764 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107186325 seconds)
    (77/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.157405491 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138698084 seconds)
    (79/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117386087 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083086404 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.086844353 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.111125374 seconds)
    (83/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115890645 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133571665 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.113439356 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.141368536 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113206854 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.15349885 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115702842 seconds)
    (90/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117384899 seconds)
    (91/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.083903198 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13976037 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.087755084 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090167332 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104321646 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.139928827 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125093631 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.175737222 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.110368015 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.132217511 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15968553 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.163118299 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210780994 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.11295787 seconds)
    (105/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.180865249 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.171774497 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142318866 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108815165 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091202171 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093232107 seconds)
    (111/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.113359806 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091877675 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107096859 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08339133 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.11475754 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093494082 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11209533 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114202791 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.13292221 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091843104 seconds)
    (121/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083385953 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113340391 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.145633673 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107333341 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106715107 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129158603 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085963585 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08448749 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08391549 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.084157 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109233025 seconds)
    (132/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092297072 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.143530682 seconds)
    (134/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090570805 seconds)
    (135/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.177496035 seconds)
    (136/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.090998094 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127145498 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.15103855 seconds)
    (139/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092356577 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.085311338 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137774434 seconds)
    (142/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089356894 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116414385 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08620761 seconds)
    (145/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084557819 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084532048 seconds)
    (147/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091773751 seconds)
    (148/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142349457 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116247115 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.191242266 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088978005 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17807935 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09249165 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.117091706 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08777422 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.137383602 seconds)
    (157/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.145585343 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134141081 seconds)
    (159/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.087911249 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108291075 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139160574 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107156993 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091412044 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114131832 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.133268553 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110422981 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109145234 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153954634 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089142271 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109103539 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14400274 seconds)
    (172/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.114111788 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116540448 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.085235489 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090658665 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.116962988 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107244084 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087479839 seconds)
    (179/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084556353 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.153810621 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.138626078 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109035932 seconds)
    (183/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084569693 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.113065495 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10699524 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105637945 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086520499 seconds)
    (188/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.113129051 seconds)
    (189/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089491129 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092110386 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090825795 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.087674207 seconds)
  done (took 28.350904959 seconds)
done (took 29.268268193 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230451721 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134857023 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116137953 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115115127 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236181221 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123063624 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.160461816 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118011236 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125834298 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141264263 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10629592 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130033156 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141472669 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.248596068 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119702792 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.108154117 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.131958401 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129273841 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131460572 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.160048425 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.213318048 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134368554 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126421034 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106274967 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237498847 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107742891 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.141611374 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116670004 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128634515 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.141780529 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117420239 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106621799 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.157131993 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.133117696 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10609722 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.140867494 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10781413 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091313427 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138316541 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119222074 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129355346 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116497915 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.141983977 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108066396 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117126277 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.141401221 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106807856 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119123738 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.129967086 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117082906 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107961145 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.156351376 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116080753 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104818776 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.129757073 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108832415 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127206609 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129988876 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.131299029 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107098815 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.131725271 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108825221 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117484773 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107236891 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140754352 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108405685 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116471095 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.143156543 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115766747 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108976777 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131863207 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11726596 seconds)
done (took 10.430577101 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111735997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150571033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.252443694 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254656197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.160875695 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.124078069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120795878 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.157729694 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.122188443 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125323758 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.168144845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138562313 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.259095588 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12314478 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.151160004 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120257332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117413325 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141981463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.256373314 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131767803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156523536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124327821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132808718 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150370938 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111519698 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133163232 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.140489444 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119853509 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111041215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.154153751 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132140058 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111279654 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.138633201 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130592305 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127239295 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.147303368 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.124049643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118098189 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.136969931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111524727 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.145467102 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127802286 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112026886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147961622 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120411681 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126222895 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.14320599 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124705523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112303946 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141456745 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113783464 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136169132 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.147558219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128125651 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122679567 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.149686772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124841573 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124497326 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.138905304 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125839885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111635215 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.135696376 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113600689 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130634978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.139803951 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124749942 seconds)
  done (took 10.123422399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132135029 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141805184 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146443972 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122622157 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116317166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.130985861 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106131513 seconds)
  done (took 1.862367624 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108466028 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.273490435 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263233614 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.262371703 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252518075 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.277734689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132439957 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.106646523 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170891704 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.118330411 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.272371158 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.328138446 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.146137019 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124699587 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266450713 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106230059 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.266620776 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.135397316 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124019053 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266506237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125094958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165714439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121616583 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.107794015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265710046 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.136136865 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.3158505 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126625809 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116405724 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.147952334 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123502856 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.211936798 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.271248529 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123300456 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115447083 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261876038 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.256368565 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.149635858 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.313397954 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112080663 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.252504456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12152537 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.150788797 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124724241 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.123660976 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.250923389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.154978087 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124643015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.121304532 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.275126886 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.147817819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.269551246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122865973 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122618107 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.144849915 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125793301 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129539517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.149967185 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.276708442 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126048221 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.262726845 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.26951905 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.258889905 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.266519367 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133231188 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.269888022 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.246175788 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121097871 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143198796 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124883758 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268663425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121862843 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146545381 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.226985219 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155184119 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.268741577 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.266610928 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121663236 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119886545 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.139437703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121895249 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108949749 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.255333866 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150178665 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122195078 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126166393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14796749 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124741142 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112474777 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157513116 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123790323 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118785985 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.15374085 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124788005 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123924487 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26524197 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.148183159 seconds)
  done (took 18.275553896 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111254511 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109269342 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113274111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135787309 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110557146 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108749723 seconds)
  done (took 1.6787896 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147170111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123658253 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157649238 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124719491 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171084395 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.255567555 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.267081589 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14832829 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14386173 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134653297 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256187117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.263686883 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.260406438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.127246768 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263695055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12541525 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265426421 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149144874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13293569 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121195929 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.149699763 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128345651 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120584258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.2483621 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.150584652 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126479841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115622385 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.159298609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132726305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116868562 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.154144602 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126467479 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.116029559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.143875768 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.264949334 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117386436 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120501846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.153668773 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128648762 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123568996 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.262581855 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120440525 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.157752603 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126994431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143699279 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116437222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126887574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142790155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.238475857 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.154617776 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127047232 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124582183 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1529001 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128200311 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.141554872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118754766 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125902254 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262897398 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126987726 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.14446453 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124365465 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.149886797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120224786 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127632851 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.151039947 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126792241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115829883 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150459566 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122966894 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124170329 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152184017 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125365034 seconds)
  done (took 12.167038141 seconds)
done (took 45.067184941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.595730714 seconds)
  done (took 2.589514281 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.098340299 seconds)
  done (took 2.092466019 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.758320734 seconds)
  done (took 18.781620065 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421589784 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.352536869 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997660876 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180934321 seconds)
  done (took 2.948296916 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.089936367 seconds)
  done (took 2.097341568 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.413554335 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278917452 seconds)
  done (took 1.693601959 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72358133 seconds)
  done (took 1.731740537 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.892689636 seconds)
  done (took 2.894748627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.273649882 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248490398 seconds)
  done (took 1.531960943 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.671438176 seconds)
  done (took 1.683147836 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.744213074 seconds)
  done (took 19.759267503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260315645 seconds)
  done (took 1.27677989 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298546624 seconds)
  done (took 1.316289523 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.576209097 seconds)
  done (took 4.596614555 seconds)
done (took 66.000066002 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125015967 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12736878 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.150653795 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125576094 seconds)
  done (took 1.53867695 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128124114 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122841319 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147330956 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.149509305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129051048 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121365643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14798055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.125729256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120551643 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150532621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123268399 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122143116 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150491204 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122801649 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120673167 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14977107 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127063714 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122051065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149194391 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124752107 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123346271 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148504988 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127533955 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126118761 seconds)
  done (took 4.203812231 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120290227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.114475381 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11698841 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.139385602 seconds)
  done (took 1.515707689 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133505804 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134245214 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.158575751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131905111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.135786471 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.160260882 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12328544 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120952042 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148756626 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132453016 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137687201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.164162985 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13543475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123913942 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159658851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11756034 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.124466526 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.16174466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130773403 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.156324278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126183504 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129814134 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.152738208 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133832521 seconds)
  done (took 4.353821461 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199208782 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134068655 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177857394 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166787969 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181526924 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.121955173 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149303413 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.155384634 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129093861 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.129700222 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.149676436 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168125569 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154157034 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126235257 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123779637 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153431382 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132871715 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127537448 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190618444 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.127310533 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127119377 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.161076419 seconds)
  done (took 4.314409745 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126019098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113273133 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137497862 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112009565 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125249167 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140863654 seconds)
  done (took 1.777974 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113385368 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108063602 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107638618 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134121455 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113288498 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107664389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131403162 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109438149 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108119405 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107788288 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134529607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108874599 seconds)
  done (took 2.404969585 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211189635 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150760791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254378158 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395082643 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195175238 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162978197 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311287001 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192979359 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181182607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169688059 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211867445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168491328 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157160418 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21967556 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14605321 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193842248 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203540967 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214960366 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175885775 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215332201 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188934012 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208475393 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197151537 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180933274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144881901 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194846705 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125095516 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133252769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199267659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194810457 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179404657 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183446443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146296537 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219346608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263862046 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181403864 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324086045 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138536821 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202295208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19627447 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261575512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172443646 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19682894 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185568011 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133324636 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224814203 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154515738 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216068049 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139019284 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177398187 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212733058 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185455497 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201775379 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141583018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335090098 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139306471 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.173462003 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179466746 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219210837 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234283773 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184846761 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.156463123 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200985614 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195477302 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24560721 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144577673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1975951 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127476755 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194936172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236854002 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186519738 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190896413 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225187155 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136048516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204687342 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170070649 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187361815 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210946308 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20456498 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123448869 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18326695 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137796782 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157719987 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194611061 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125198183 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246173413 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163923429 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189040729 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209910074 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154903986 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192937384 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163325867 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194332463 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150860735 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13455454 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149034594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187023224 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163207277 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1310828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183716449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142978307 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.1617184 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157018082 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126115689 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202328103 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140899551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191992501 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202303729 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138180701 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209765641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151952423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168527157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199383874 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226128476 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136840027 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16584595 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224438457 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204000522 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141711107 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202547964 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229289143 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.157492793 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167062864 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170830872 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226894845 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147687705 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233483462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142990111 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170358465 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145160568 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207114606 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16299433 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192151739 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132353144 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.198346452 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217922614 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134221747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145423241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216970258 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137534249 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157252748 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143494155 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139943844 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.177139914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154690761 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.173644497 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159325009 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202686947 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170693703 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190951936 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138897271 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205616091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136088186 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202410027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151995516 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1515449 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178868555 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231038458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133299423 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213297306 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163901779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214207338 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205042065 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134222655 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21682471 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132052616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125077498 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19553988 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201761202 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166617347 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222441345 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207014313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169068706 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.196325035 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154451834 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202498516 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214974963 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161241873 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171548701 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177231826 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201203799 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12566619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127736425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.160880374 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142109971 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16298567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143230574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212122855 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167870788 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208595241 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201134935 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143921654 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223716438 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.13059014 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189797669 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17914359 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141987679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222329319 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223138012 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182612048 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173029405 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166344967 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.153981941 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130775778 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165605766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164019251 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141460167 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171347837 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145489939 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226244343 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203717247 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154957065 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219513319 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196786407 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205472777 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.153255243 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166579004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196031493 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172768618 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190679974 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162945791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161672025 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225029873 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145425197 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22374647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202335926 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183961452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225243657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.196847029 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13774063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148698937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193548635 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14113373 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194797048 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148070995 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163036584 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153103128 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142470003 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173148066 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220148526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148943451 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208378593 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158638469 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200877361 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129797651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174727527 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178753597 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179105458 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111147514 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197772915 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195652324 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183404118 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155113021 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203576097 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134403334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.351285803 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185658735 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204274999 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139814079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172238593 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175977126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191712717 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16286673 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216992398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144759819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240033946 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203657533 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143235253 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133546661 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18111109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153638881 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.174522543 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15428624 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.201628154 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147066676 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219672977 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16901856 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176764029 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210413419 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15090215 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1516197 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173144294 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260813264 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174685202 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205542269 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168523944 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.197397937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215031255 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13071362 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129827823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.165250833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189375339 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133119861 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209649146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193806908 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212012295 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179989858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195043797 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144963615 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15850186 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172569361 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152173751 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216122036 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166649265 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142238199 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218854646 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132497715 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163085753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165081607 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317304806 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151844868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201443145 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112480505 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310172334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135040077 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136551234 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190067745 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199756897 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138354954 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186077364 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2083846 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144467534 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192240648 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140542523 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20804559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212618099 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172249138 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207384682 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147775356 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195458375 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160876673 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204687482 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148929553 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.181708233 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163712997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228030115 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205360053 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13744576 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172409215 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203590624 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173570466 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206517253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172519215 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187585796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132171626 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199635233 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141798409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158570654 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163712718 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198855874 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13381101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204893304 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204312155 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137445132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132659537 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180013604 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171275831 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17419792 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134152255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219612983 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134157632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218808271 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242297571 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135042452 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170997234 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176643343 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135203367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171908593 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147919019 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134288865 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.207044625 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180920284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.162366598 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180214537 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199117989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166154649 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187114018 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144522848 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.299458821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132396375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22472753 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154492132 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230599297 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151572976 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210121273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202049995 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155755491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198537468 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152432862 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252486856 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1703343 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.201474922 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136281855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175387526 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144172943 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138806688 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185521916 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173950751 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176871304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142380955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.200991551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150554411 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17785914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147416372 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2341927 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155954818 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222124405 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189393986 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172467672 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179077381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208869508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133061474 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.198956725 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204691672 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149299921 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155506577 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.167884268 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142562891 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24985817 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129793949 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194798305 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178474791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20469712 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174786472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.171853837 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181774721 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175829133 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18063107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162927981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15559346 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204012256 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13812769 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131047461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204401342 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193717162 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16961745 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174489647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180202314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200794948 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.155115466 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140057755 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317996094 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165298813 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229496851 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137442827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171443798 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15075695 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193976133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16893503 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205223513 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138066231 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16191654 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152322443 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188106392 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144520822 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173491615 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.725833781 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188879326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189490158 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137125538 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286629746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145457533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206786142 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12164396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.164323271 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145157775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137805443 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176961889 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209401768 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220514634 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.196568362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150495954 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170193221 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132377798 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134368134 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195981906 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154358805 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204592777 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151125922 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138376325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146295908 seconds)
  done (took 87.922978755 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173272383 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170233309 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.193382902 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243050181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211915845 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.304188891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.239113019 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256903479 seconds)
  done (took 2.903266889 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124282145 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165041448 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14729373 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.15013662 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.114878924 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.513324983 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16612301 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126741187 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164433271 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159250349 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142242739 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577112984 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122657916 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.150653375 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127288323 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141120949 seconds)
  done (took 4.196492096 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.003349657 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547621873 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.940481538 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312332874 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.241080936 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217023757 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.806513664 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204910555 seconds)
  done (took 12.381883269 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.17581733 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172254516 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463555736 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.342003128 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.220479503 seconds)
  done (took 2.488996192 seconds)
done (took 131.01520487 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130694273 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129652451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12794574 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160281904 seconds)
  done (took 1.652406636 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200538002 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.097525251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128737181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.097901626 seconds)
  done (took 1.641837416 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397621932 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09779861 seconds)
  done (took 1.632050836 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149257458 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139240751 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168044065 seconds)
  done (took 1.584725753 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141213628 seconds)
  done (took 1.259550883 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122789777 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121018671 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280604677 seconds)
  done (took 1.646511403 seconds)
done (took 10.536645826 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147643635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.939388661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453810712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138911519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747735588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40607154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.463859754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180898214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187779536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144498822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136944858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697103312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.477496195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882973875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.429276726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.920429895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701644602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117491756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151929865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117216023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.466293584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115774569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116841604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116094302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.726842918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426126465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114681204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924473566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114536842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11995436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.435251927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116164633 seconds)
  done (took 21.346317224 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156112869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172705342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165535785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117225591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118824258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.146528829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127386101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155704507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191406324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115146626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166854877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114631617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120689928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.145822733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140421348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114483413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150131382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118724525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122688298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147777381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137593824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11408434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147144829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118250232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114965388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167248363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115252924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.155610571 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11683462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121357052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12167469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14775161 seconds)
  done (took 5.517868369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166454198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182572169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168149246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153791205 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195799131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118659363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231617024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156203034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222952025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116679782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136382287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145136822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156567047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116237057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170778212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116771833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11915342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.150004341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123441605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145200029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140285298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114995349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146139324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119788487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116694448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166300058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11794803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128352914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143899445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123640303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122588564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14424474 seconds)
  done (took 5.807013658 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132548839 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131215499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138597304 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169690853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.125778634 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12922579 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.161242711 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127369899 seconds)
  done (took 2.241907648 seconds)
done (took 36.037944491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140121869 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132945538 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138262275 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.161537581 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279725096 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124625135 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.134388737 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.154677561 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.132734477 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137321442 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114956379 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.156777688 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13688242 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.126649905 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.278265344 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.164465468 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.283824221 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.279839427 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.125821098 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.132249779 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125136583 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.286094622 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.162767276 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.125291771 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.279032481 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120675542 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.273424924 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127692774 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.158155447 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.116978284 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.285550209 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128254647 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123953402 seconds)
  done (took 6.77168626 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232647531 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156918418 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.126921867 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125941015 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.126077765 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.156667268 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.235407869 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.156619707 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.124380063 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.124657891 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.157865396 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216409084 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163694839 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.121544716 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12740398 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.117108817 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.269707761 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.157391663 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11899076 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099514401 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.120423764 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.156080043 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.249706474 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.152987471 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.125645237 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124384672 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125359098 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.162060273 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.127127549 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125409104 seconds)
  done (took 5.728211807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131488787 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137036491 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143894695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221996596 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152773408 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167471995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143554218 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136465119 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177345457 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119933827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.133686553 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185315465 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134710147 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128485263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148545077 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134884471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132676508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150386303 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128813797 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136461068 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168444674 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.135331246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139498395 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15610393 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117358848 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125215644 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157835854 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129936426 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127330926 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132973404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.153244557 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120207046 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120009954 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.184326583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118317909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.161060845 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140320776 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1301632 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160042559 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152901218 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119858049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.15087156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14642728 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176026714 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150211839 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130025962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119291845 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132218349 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.148113807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136582592 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.19028146 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120936747 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139580459 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147080645 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118216919 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127403421 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.118003065 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.153025605 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133913747 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.119191065 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171131678 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128144508 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129404514 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.150087312 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131233168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117353541 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.147370696 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125688469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145458651 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126821295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.187515745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119033293 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131598299 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.16362367 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132490032 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131452121 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.149062531 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130171022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129729905 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.154502469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133213589 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121278481 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.150723986 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136676668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139216656 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.163916515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.133102541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131421111 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.150820157 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122906761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136942344 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.150345585 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123846685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131240432 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118694983 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.155237967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13111353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128209251 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.147441026 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148057515 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122420456 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.149101992 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145145343 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12288944 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.153119192 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130319295 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.160064489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.14863182 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130671854 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130476508 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119618982 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.158363085 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121438976 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118038474 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.16613237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.13703216 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126569657 seconds)
  done (took 17.601817383 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.380641561 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.367947628 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216591649 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.415053339 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131529924 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.288775829 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.400942816 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.372648226 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119681979 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184945516 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175396396 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.334518307 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153814602 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147973007 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.374469268 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.450892813 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.149270588 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.191018355 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155923319 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166070629 seconds)
  done (took 6.33647072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.1296132 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154560506 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172027183 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139245849 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130798337 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164874667 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121004913 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140331392 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161469206 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129352553 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122736069 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127737123 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.164408198 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135310433 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133707645 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.184650506 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129097004 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124086939 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.174266295 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123988463 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107658453 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176471393 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128905498 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140329158 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.171477672 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130008012 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117760854 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.155454825 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128128584 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127959987 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.153968741 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.12893993 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12681466 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110299431 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.161758838 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134806807 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125183586 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.153085249 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125097542 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120370056 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.164547671 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132375633 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127292095 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10586018 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.169462611 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11793469 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133311575 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.161407118 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.113363718 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138642979 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131800699 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.166153811 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127737053 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139797177 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15768332 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137574547 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129488883 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.165311036 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125350018 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11776323 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.148493953 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123129136 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12846892 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.163546007 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132344134 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.128043238 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12764626 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.150343839 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12410796 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122659453 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153798817 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133520121 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139108682 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.161349847 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128201429 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130154051 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.158312101 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102313849 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12708292 seconds)
  done (took 12.094717422 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144878898 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13108741 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136454433 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.185733046 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132379264 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124997809 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.162591067 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139916326 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133809754 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.17056317 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133714071 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133851798 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.17517081 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130153213 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130182337 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167247804 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13257014 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.158488241 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162653365 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.147715922 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.164998496 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126582228 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.13286969 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.130464566 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179789972 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.130665359 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.176814943 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.13413249 seconds)
  done (took 5.284400831 seconds)
done (took 54.951690506 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.320182476 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.58128167 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.277042004 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.275942283 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.326146922 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.295491836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.275340949 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.293458477 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.793516969 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.252065434 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.278448468 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.275775991 seconds)
done (took 29.406269541 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.572123522 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.498568638 seconds)
    (2/2) benchmarking "String"...
    done (took 1.675149193 seconds)
  done (took 4.345101706 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.267128173 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.269414149 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.604009141 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.269013469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.26887225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.271239451 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.277131191 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270882142 seconds)
  done (took 16.38906442 seconds)
done (took 26.728841636 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296650503 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.555538173 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.523955874 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.255354749 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272781685 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.280760634 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.270682327 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.302752536 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.279987211 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.25554765 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.792506994 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.546691866 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.269925317 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.66123667 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.253065561 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.28303229 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.285784526 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.598477711 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.269573317 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.310250138 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.24771984 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.250173783 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.296397049 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.27930514 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.285234247 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.284610075 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.307209736 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.279711408 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.590580269 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.303814402 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.3136373 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.268882237 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.305013229 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.286802114 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.270533843 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.274538753 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.577900165 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285321269 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.252686183 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.282709624 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.645642299 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.278283572 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.272079152 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284874914 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.255197467 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.272482206 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.256574387 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.453605308 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.29684515 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.271167165 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.316654653 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.681331334 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.27320192 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.28955386 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.284866253 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.587464928 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.300842307 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.359949683 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.300393926 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.287505345 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272867311 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.271239171 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.280971484 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281092659 seconds)
  done (took 149.042526292 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.273000777 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.275700144 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.27547714 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.28604217 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.273330149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.275740302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.272245793 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.272606594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.278283224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.283948119 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.278283712 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.277598848 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.277606042 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28703266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283119104 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.298052497 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.276075819 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.289481016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.28679478 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.273233908 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.287803428 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.278179299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.275237444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274169152 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.32101268 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.275467153 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283124481 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303262307 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.284900336 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.27513366 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.27864074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.279277483 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.284166094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.237425164 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.295767848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.302279151 seconds)
  done (took 83.293844422 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274365336 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.275404715 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.273899565 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.309796937 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.274207425 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87345835 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894543015 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.320010946 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.394831075 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.815605602 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5400325 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.274865679 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367500574 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.288146628 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.281407922 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.372073152 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301707221 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280285014 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.277173864 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893075369 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.293306711 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.287555003 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.459764402 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293427538 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311563991 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.670532755 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276042854 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311655274 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.615310159 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328511538 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275986073 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.617793505 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.799205961 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39085962 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278350899 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31229949 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.275124022 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564234879 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276746505 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.277889946 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.281952265 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909238179 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.278209681 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.878014167 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278014683 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271034536 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.276121985 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277869623 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276490118 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.383156406 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.968975943 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.278180766 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.279323229 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.280820278 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278451052 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277195166 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.313193039 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278761007 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.384942318 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.172083895 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.27863222 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283708494 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314176963 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.279986652 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.568134259 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27777855 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.988135154 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.336025133 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.382144406 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898454335 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.284448671 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.278543941 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377608075 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399402676 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.279428202 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.280050627 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279217839 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.280547897 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393282554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279938671 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.010346987 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.46426679 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300206891 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.823931661 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.380276989 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.280033516 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683591538 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.282737561 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280293185 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03279167 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378092983 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.28086756 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.280602233 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280608169 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.012302751 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901384178 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.576314419 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.281269427 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.034930071 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.285212945 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.191302121 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.878770547 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.281227243 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923963864 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.281655719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394154033 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.46358905 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.300903837 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.281818659 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.731002246 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.282646208 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337581267 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.285862818 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684593132 seconds)
  done (took 387.198398354 seconds)
done (took 620.692726234 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.261005816 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.261702204 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.261996864 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.261407055 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.26241682 seconds)
  done (took 12.478456583 seconds)
done (took 13.644706844 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.576096863 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563227559 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.558396916 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377034678 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.573926265 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.584073086 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.482170603 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.387111727 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.551846154 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.584611144 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569115597 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348631345 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580126565 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.550632731 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.332738053 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.466209914 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.505176042 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.501873947 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.40101154 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.465091336 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.603208341 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348890666 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349502964 seconds)
  done (took 35.432010454 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662041242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294804248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.416205581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.63961304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361387506 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.667081966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.702902233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.296753868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.567159692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335562504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336077374 seconds)
  done (took 19.451886865 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.672582457 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294785322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41740238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64596706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360625189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.710670959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.721539031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29675722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.581936851 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339689566 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334513349 seconds)
  done (took 19.546602819 seconds)
done (took 75.600383053 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.346162525 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418407606 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.340820226 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.325538674 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.323354597 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.324624102 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.328072306 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.326048725 seconds)
  done (took 11.905865335 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.324758268 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.324617746 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.324081994 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.324606083 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.325772363 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.323580324 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.322137054 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32257454 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.324449848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.322887498 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.324570184 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.325944801 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.323699753 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323970039 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.324049447 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.325956325 seconds)
  done (took 22.362525151 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.326933404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.326836325 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.325050273 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.323967594 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.324544064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.327100115 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.32541722 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.325715931 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.326771512 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.325750921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.327391423 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.324676064 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.325115086 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.325251766 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.324244584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.32688661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.327770871 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.326526858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326516382 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.326377398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.325960585 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.325907156 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.325923709 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.325539721 seconds)
  done (took 32.998325416 seconds)
done (took 68.43744739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.299708993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.307158403 seconds)
  done (took 5.7814023 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.422665619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.424269734 seconds)
  done (took 4.023839484 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.327047246 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.326528534 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.328051842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.326241277 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.325444108 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.327538998 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.32748082 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.326445493 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325132477 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.326342687 seconds)
  done (took 14.443107744 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.328573068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.326396953 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.32626635 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.327091176 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.328260738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.328878064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.32872595 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.328815278 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.32650828 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.327977601 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.328195855 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.328308859 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.328778821 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.327967475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327037258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.327722681 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.325745753 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.327225131 seconds)
  done (took 25.073678783 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.350355657 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.353353104 seconds)
  done (took 3.879765158 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.509532742 seconds)
    (2/7) benchmarking "second"...
    done (took 1.409652722 seconds)
    (3/7) benchmarking "month"...
    done (took 1.493847716 seconds)
    (4/7) benchmarking "year"...
    done (took 1.482307352 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.411242589 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.356804661 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.409538461 seconds)
  done (took 11.248983687 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.323149474 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.689204961 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.881125526 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.539445484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.313516125 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.342163693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.271252022 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.34694349 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.350233084 seconds)
  done (took 15.235154764 seconds)
done (took 80.858609675 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.293291556 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.302902904 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.320498089 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.316732526 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.687915272 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.338577832 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.29585508 seconds)
done (took 16.733973713 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.275877121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.28227591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.277331566 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.319584425 seconds)
  done (took 10.333181545 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30108298 seconds)
    (2/2) benchmarking "read"...
    done (took 1.70566753 seconds)
  done (took 5.18552422 seconds)
done (took 16.695339401 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330399697 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.329144719 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.330502922 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.329994128 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.329901798 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.330621373 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.331321183 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.331540205 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.333060929 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.332015824 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.332658993 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.332398415 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332605704 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330811621 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329758064 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330246535 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.331046567 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329336084 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.332190707 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.331438447 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330513538 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3313047 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.332323196 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.332874383 seconds)
  done (took 33.127054007 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.333853907 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.332427818 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.334583119 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.334038498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.332583424 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.333233786 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.33267771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.331772008 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.331076249 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.333881634 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332773602 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.331567024 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.331226966 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.332855875 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332477684 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332496891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.33484719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333356637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332119189 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.332011704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.332573227 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332314535 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.333819196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332872288 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.333255716 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334145146 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.332330669 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.333748516 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334351038 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.333388624 seconds)
  done (took 41.171905102 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.34106921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.340702613 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.332707113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.333893018 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.334103101 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33452138 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.334720498 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.337035387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.335409971 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.334612244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.332916288 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.333662123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.333306212 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.333591932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.334133691 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.335945654 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.334394968 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.335175863 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.334967247 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.335201285 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.335411158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.3370298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.334025158 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.337467495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.334143329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.334009094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.333717787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.333563507 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.33532232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.335464936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.335030803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.334521101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.336195825 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.334925063 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.334070346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.335483374 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.343505344 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.343776678 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.336961425 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.335475762 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.338908879 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.336700987 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.337557451 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.338668207 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.337542505 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.334519285 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.335535895 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.335255342 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.335536593 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.335510262 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.33563458 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.334828472 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.336599508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.33593867 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.336899616 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.337008289 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.335454949 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.338774854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.33756185 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.338999324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.339256619 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.338672047 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.338157247 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.337633158 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.335803806 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.337234225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.336671933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.337182263 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.337552422 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.339119101 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.338505197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.339950143 seconds)
  done (took 97.395879116 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.339613369 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338670302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.338928784 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.341964087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339743273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340725871 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339205216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338535229 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339565737 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.339008543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337177653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.338605419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337406174 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339194391 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339927166 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340219172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.340457121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340198778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.341552651 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34081408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340132359 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.340610772 seconds)
  done (took 30.659602315 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340325889 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.341393553 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.338913768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340604696 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.341853457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34104707 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.340081724 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340469133 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340625858 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342187508 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340448181 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340819597 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345081452 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343295262 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342881033 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.344108424 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341642746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344171281 seconds)
  done (took 25.337692385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.341760639 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.341195413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.339655203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340922544 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.340604696 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.341673197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340145978 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.341050842 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.342976086 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.34076568 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.342359109 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341719084 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.342083864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342522258 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342216912 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.342132893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.344358804 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343741337 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342175356 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342197286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.341591134 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341485464 seconds)
  done (took 30.708613994 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342114734 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.344661426 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344494087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344992754 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.344261585 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.342494111 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.3442949 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.342407718 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.346339433 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.344381363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343124778 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.344861102 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.344542347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342811541 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.341448239 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342828581 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341488397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34340575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343103547 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.343717731 seconds)
  done (took 28.060528369 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346029268 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345534792 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.344317877 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344659052 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348563529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346436722 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345023135 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343661788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344674068 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344431858 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343758099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.343175064 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342759858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.345336932 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345198296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345853826 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346512011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345171268 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34623998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346544557 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.344657027 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346071662 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346722862 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345415922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347224532 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345655198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345501966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.345300614 seconds)
  done (took 38.862900654 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345071744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346037858 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.343317192 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.344656748 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.346471922 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.346663985 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.347623535 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.346271897 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.348198538 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.345943433 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.346395655 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.346665453 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348433135 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.348564995 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345709535 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.345959287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346818195 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.344823529 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346377916 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346655465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.346631161 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347882996 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.347522894 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.347840392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347298843 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.349481383 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346870018 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.350120711 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34992292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348286259 seconds)
  done (took 41.602278335 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374664614 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373747388 seconds)
  done (took 3.942628947 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.348022608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348770609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.348160824 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347497471 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.349175828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34988723 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347016615 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347749389 seconds)
  done (took 11.979047685 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.341279921 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.350555123 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.350007707 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.349549059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.349521681 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.339886029 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355099556 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.35107111 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.343103966 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.343028397 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.348860075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.347529668 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.346534919 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34454996 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.345856131 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347330761 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.353209581 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.351052254 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.350524463 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.350195091 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.351048342 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347445859 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349184976 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.355458749 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.344059814 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.360395899 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.357518578 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.354697409 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343955052 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.35652788 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.346484144 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.353364908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.352544901 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.351961238 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.352254781 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.351938329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361832605 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352937898 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.361542065 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356045067 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353414774 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.351904876 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.349813269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.350872692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352817702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.356107924 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.353345771 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.350910894 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.346394259 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.352064323 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.35882042 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343534328 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.354361194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35736423 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.352996356 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366589844 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.360114299 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.349577066 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.351638221 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364528827 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372011483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.360930046 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354937943 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.358799538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365140148 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.374894391 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366060586 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.361260535 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.354626591 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.353101047 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.362965431 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373510067 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.370759578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.360809709 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353774248 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.353748546 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347566544 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356218622 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363297106 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.362797951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.361629715 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35766315 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366038377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368977787 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.352943974 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.360709138 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.355210883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.356177207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.350327999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367258364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.363858421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.354885911 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.345413757 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.351025993 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.352321549 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.356182794 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.346934341 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351383301 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.360000528 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.35740306 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357585067 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354649289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.366564561 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362866884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.358316236 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.366048992 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.363387551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350336799 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.368070967 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.36320743 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355908388 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.349205929 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.358522268 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.359680725 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352948095 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.36155715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.363866522 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.359600338 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.364168307 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.357784325 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365980619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.38208085 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.36393364 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.359215233 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.361223029 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.367036898 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356469771 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.361254179 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.365953031 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.357791238 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.358733048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361391906 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.365384942 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.354143988 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361916833 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353823974 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.363657139 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.360371595 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.360497518 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.362191239 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.359470223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.355955181 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.364883202 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.36962347 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.364468624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.362687323 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.373780702 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.358941524 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.367219673 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.365533704 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.363758268 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362682224 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.355258724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.363275246 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.353032253 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362899221 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.353985587 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.364166211 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358749112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.360462877 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358501315 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.351124818 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356793068 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.364238846 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.366722752 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.360521614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.364373011 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.360993322 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.361479976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.353219638 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.362618738 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.352230056 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.361491291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.371388289 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.361586693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.360225487 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.365997799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368472555 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360698452 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360691398 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.357678864 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.365719761 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.368931692 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.371866911 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.370333546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363769373 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.363276433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.357358502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.357794592 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366337926 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.360708929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.370324397 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37640869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376055922 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.359293525 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.366081888 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.354977822 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.365112281 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.369224047 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.371317121 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.364658592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370078276 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356807733 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368117133 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.363997615 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.368274415 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.3557884 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.367813323 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.364461989 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.366994993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362656941 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.358827055 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36186969 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.366796225 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363197722 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363696878 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.359025055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.369084993 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.356508044 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36024588 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.36809199 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.365302879 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.373911166 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.371961616 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367705977 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375670258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.365938922 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.359754407 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.365471755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368379666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.364989361 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377070646 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.367135514 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.362271487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377930671 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.369166568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.36039129 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.372632162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.374400125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.366081608 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.361341411 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.373153249 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.366210256 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.366410072 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.366306078 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358472959 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369262879 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.375928391 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.375777953 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.358874687 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.371970696 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.36256482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.370403457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.370061723 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.373690607 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.370782975 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376755452 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.376353306 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.368075298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361754452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.368442104 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.367197881 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.364980491 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.36076557 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.373419203 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.374962766 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.369683672 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.37283135 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.365325717 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.370223057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.359917766 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.370175146 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.361364319 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.387293035 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.388111575 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378236157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.372917534 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3722502 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37923356 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.370518067 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.36447051 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364015913 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36698312 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.365561501 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.363724955 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374106861 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363919742 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.372182035 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376436836 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.37206561 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.376229478 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.369185285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.363613976 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.373638645 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.368198707 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.369956334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.362103798 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.372249152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.370096924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378735313 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.371930816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.365075405 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385037999 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376028195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.370526028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.368755622 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.366087126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.364931881 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.371613108 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.375985661 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.368427089 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.375610125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.366293228 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.371099286 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.365944929 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.383894558 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.382197834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.368770219 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.378104925 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.37040653 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.36394698 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.364426091 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.374282372 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.384211568 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.384845726 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.36745811 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.376084417 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371796511 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.372939743 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37085952 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.370798689 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.371913566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.371783591 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.384924857 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37849897 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.369983292 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382690704 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.383929898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.373205909 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.373300962 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.364424555 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386002228 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.383557923 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373071464 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.371872149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.3688358 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.373672239 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.37185015 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.371291628 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.374963604 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.372648016 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384778749 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38115217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377729179 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.373169731 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.386836482 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386754349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387119619 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.385563555 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371345616 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.385911435 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.373009025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.370515622 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.370866156 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.37086406 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381577783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.366706689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.379875262 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.374843267 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.378699973 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.384550647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.382172901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.367388269 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385465219 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395804662 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.368711202 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.376588042 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.373951185 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.367426543 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.378068817 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.374513966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.367597793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.372629927 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376399681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381953599 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.369754143 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.380195065 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380343687 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.37557241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.376612278 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.375471699 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.375170613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.368096041 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.379328335 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382584755 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.386200438 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.374841242 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380244722 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.37188046 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.392471836 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.387751962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376999757 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382090348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.378793979 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.373158835 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.380150926 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.382938152 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.372041096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379913325 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368730269 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375821255 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.375395153 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.387555289 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.383794057 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.381969942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37179707 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.372340366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380571789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.379277072 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377696493 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384061618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.386466253 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.372159966 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.37287926 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.379664131 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.374843197 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.38383212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37331088 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.379454608 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.375978118 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.38413998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.378451827 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379661897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.370935927 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.373297959 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.393700763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387205384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.381190722 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.376892969 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.383971593 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.372498695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.380001046 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.3801665 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375543776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.374618518 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.381735554 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.375894379 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.375423508 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.375048112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382719897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.391225658 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.383818012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.37601276 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.396811214 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.397171736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.38978581 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.373203255 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.378629364 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.376340246 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.381522748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.380008031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.374618728 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395344618 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.388550807 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385092196 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388842045 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.383219612 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.375761122 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385003288 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380837396 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.385430368 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.387857772 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38597974 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388561213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381192818 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.380406475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.372920956 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.373832385 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.379972412 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.381971339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.383948965 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388266483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.386845771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.384670565 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388184001 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38348012 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.381591472 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.382231846 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.375863439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385274901 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375426233 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.392670604 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384877015 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.376096709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.385456838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382327669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38009624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.385367161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.393830249 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.383262564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.376635465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388978864 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.39764917 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397307577 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.386013612 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380953123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.38473845 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.388702712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.384680971 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.3855836 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.378842798 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404576797 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.399524967 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380308907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.382276126 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396072574 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.39647898 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.384900691 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.383886526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.390459499 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.387111448 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.392574642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.386342704 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397057335 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.391262255 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.381119554 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.387643918 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.382219764 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.382931935 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.39434016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395781335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.384158279 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.388270394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.40574636 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399562263 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.395080757 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.419648476 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.39652738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.391419327 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.392554528 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.376586995 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.387637632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390219455 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.390812757 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.386440133 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386555581 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.386105594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.377629097 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396450973 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.403006486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.397946764 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.386302965 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.377938004 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.381992151 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.388579302 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.388376693 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.389331562 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.389471035 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.387476857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.387455975 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.383252368 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407592893 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.409551102 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.393771862 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.389529842 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.387694413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.397603634 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.39581395 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392005925 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.394390446 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.39423421 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.388514769 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.393271449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.399335838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.387918254 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.382856018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.383419987 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383769402 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.392275373 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.404832067 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.412608335 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.400804948 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.396696466 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39153708 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.39098701 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.385680889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393697201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389800128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.386655105 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.386738495 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393831087 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.389698438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.388889816 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.384922762 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.396400129 seconds)
  done (took 818.907784035 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.389114077 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390625791 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391265607 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38994861 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389927797 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389595563 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390732649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390286991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390999651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391696808 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39142722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389635721 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389060998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.390516489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389155143 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389176584 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390446369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.389666661 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391548185 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392361208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.390508597 seconds)
  done (took 30.427071279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.39070995 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.390771131 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392092877 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391486096 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391962972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.393557728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.390131315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391873576 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.391094356 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392376992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.391660141 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390117766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.390467881 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.391580033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391507887 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391632553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.392641899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.393383824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.391564458 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.391886706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394208299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.393800566 seconds)
  done (took 31.851812651 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.393821379 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.393395347 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.386929022 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.396535831 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.395026561 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.392987614 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.394000662 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.399251538 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.394044033 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.386283898 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.388277867 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.388132108 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.394082446 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.401014961 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.396630535 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.40113865 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.3933459 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394241614 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.393838769 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.392742261 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.404773121 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.407043103 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.392792268 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.386367847 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.395429475 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.396126211 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.396257513 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394436262 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.386445022 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.398724656 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.397023671 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.388073651 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.405550245 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.399287786 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.3868288 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.398222847 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.395359843 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.394585652 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.393426986 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.403631984 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.41665871 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.396471786 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.408228449 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.411128887 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.397815393 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.394663246 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.421617092 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.396533037 seconds)
  done (took 68.274532119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.39577498 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.396143602 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394369842 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.396840479 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.39610051 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.395629221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.39572204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.394731551 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.396365907 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.397213151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.397340123 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.395432338 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39538757 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.396436237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.397637786 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39632896 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.395488002 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397096027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396332872 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.396752967 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.395158281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.397430009 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.398645457 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.397279291 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399112904 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39738098 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.397508021 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.400035228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.397417087 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399421742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.399885418 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402793469 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.400970683 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.397642814 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405625883 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.398082466 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.397043507 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.399536841 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.39830086 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.39894277 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.398401291 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402705331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.399594111 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.40127533 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400115266 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400117432 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399932003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.401031444 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.400177564 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.401621672 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399265647 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.399560866 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399255939 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.398671996 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400767304 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.39994611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.40020592 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399239246 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.400177634 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.400579082 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.400634675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.402796124 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400991006 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400430459 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.400785533 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.401208981 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.400625596 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400455952 seconds)
  done (took 96.349988853 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400095222 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.400698301 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400597031 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401863254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401410892 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.402597914 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.401892517 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.402036391 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.402350397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.401096047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.401392035 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.40210281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.401007349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403614035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401894752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.401849845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400705286 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40130578 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.40140705 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401503152 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.403477356 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.403407933 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.401379672 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.404554518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.403090435 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.403407584 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.403095044 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.402890759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.404110816 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403716282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.403637362 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.403196734 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403231793 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.403951718 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.403910931 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.401716657 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405294626 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403889 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.402654695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.40462366 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.402769653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.403395711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.405688112 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.404323553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406014899 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404524696 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.402938739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.403261895 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.401696124 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403999209 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.403201412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403416384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40564928 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40458434 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.405259705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.407703451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.4057106 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.404667241 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405366213 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404008569 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406074893 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.404269216 seconds)
  done (took 88.241000062 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404473083 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.405144328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.403819019 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.40320246 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.405503451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404107394 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.404648175 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.40567554 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405998626 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.406130835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406632575 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405014701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406323318 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406236086 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405526289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406397699 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405124283 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.404649712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.404765648 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.406771978 seconds)
  done (took 29.34837412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.405845813 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.407186486 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.406092074 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406530747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.407932391 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.405900778 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.408049306 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407104003 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40788008 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407460125 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40640608 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.406914594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405893096 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.40735634 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.408079128 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.406948397 seconds)
  done (took 23.754214276 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407532481 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.40821462 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.409247643 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.407973249 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.408308906 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.408393483 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.40896234 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.409462544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.407621319 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.409274253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.408966531 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.408417789 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.408347179 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.407276931 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.40814401 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.407630119 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.406515241 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.407729013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.408935662 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.408421979 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.409066614 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.410459458 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.408799192 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.408755541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.40920504 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.410487395 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.407598899 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.408427287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.40724243 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.409028899 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.407866461 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.409608862 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.408274614 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.409120182 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410006538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.410377884 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.410808456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.409866296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.41034918 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.410990392 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.410101033 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.410138119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.410131135 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.410771998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.409099649 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.409488804 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.408195414 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.410100614 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.409394728 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.410865586 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.411394982 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.411992335 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.411561903 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.41175718 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411574963 seconds)
  done (took 78.754039604 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409935299 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.411948056 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.413001821 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.412083269 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.410165008 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.411537599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.411384297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412676011 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410646913 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.411028945 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.411547237 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.41190685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413645828 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411826811 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.413527586 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411264031 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.41408925 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.414569059 seconds)
  done (took 26.664083541 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.412591713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412164215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.410501363 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.412463065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.412102195 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.412225815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413457465 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.413571656 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414934119 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.412459574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41361384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.413601129 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413641567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.415305745 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413652881 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413926869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.414659225 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.412807243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.412169942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413244031 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413280697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41192878 seconds)
  done (took 32.338398829 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.406286721 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.404239045 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.404988931 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.428354541 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.422127143 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.405819972 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.404295267 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.406723159 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.435560206 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.461236307 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.454207201 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.422211093 seconds)
  done (took 18.304653267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413912621 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413972755 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414315117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414988526 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417231828 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415496831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417388343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418055815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415452202 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415110679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415645104 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417605269 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417195092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415245193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416025181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414564799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427849798 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414067948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415956247 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416280031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417422006 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418713511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415920977 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416985498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417476971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417727003 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417074895 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417714711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415782691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417122037 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416600114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417094729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415908056 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416716399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41691859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416754533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416863764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418869397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420304076 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417345181 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418438267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419504254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421401493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420116692 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418340908 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418766102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416943593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41776772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416831218 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417532705 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416757256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417982692 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41905266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420155733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419072426 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418604488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419993981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419362337 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419678927 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42060628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420030857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419404101 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418267225 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418197383 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417995263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417966209 seconds)
  done (took 94.812307419 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419509213 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.419307301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420166559 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420671581 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420344026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419736476 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419572349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419849898 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419650362 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420304705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418435054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419392648 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418474235 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417839028 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419915619 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41913612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419352908 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420467575 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421273404 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421514146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420796109 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419248146 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422056115 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421385848 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421118076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422335969 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420923848 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421577772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421033499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419762807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41955419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420516534 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42141148 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420234584 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422160947 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422323048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421982851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423135303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421463651 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422273111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422870534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423961176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421241696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423248794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421364547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423088928 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421287721 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421808877 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422795035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424547353 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423448471 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424623481 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424851232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424077741 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42384454 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424248643 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42656416 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424437563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423288953 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424586465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422977182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424345931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422719747 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422432001 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423771976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425112649 seconds)
  done (took 95.08805708 seconds)
done (took 1917.142729721 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.642209739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.592067399 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.414210145 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.426716554 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.414278869 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.396975412 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.408855344 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.413651764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.413082557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.413318342 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.413009155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.687650714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.42990425 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.414434615 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.415587485 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.571203363 seconds)
  done (took 28.725479198 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.452263378 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.430031151 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.561805101 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.417820241 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.453313721 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.678382146 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.491621665 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.419337612 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.623210465 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.4432461 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.3943975 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.451491213 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.42000774 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.389546115 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.444650818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.677841435 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.762293725 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.398005361 seconds)
  done (took 31.169464149 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.989935941 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.436375045 seconds)
  done (took 5.686466555 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.445079154 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.421179397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.427006256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.419371206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.389888826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389489823 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.42094047 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.396225665 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.398729964 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.574516494 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.424119716 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.444869421 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.419177187 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.419892781 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.428915786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.482369791 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.632089388 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.430196745 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.430856676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.4355542 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.420278724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.559719431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.473882748 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.430068796 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.57120909 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.394186439 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.427797557 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.436075076 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.612193772 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.430523603 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.420893327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.421916711 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.424644363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.392102935 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.053150265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.40457114 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.456670083 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.436062993 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.430642053 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.634159693 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.423910191 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.437475534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.393530839 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.052410855 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.584470204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.592895228 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.393231429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.423944483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427131691 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.502161343 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.423731467 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.425957658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.525910523 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.359438375 seconds)
  done (took 90.9014939 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.416145238 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.394823531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658537863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.420442502 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.394796364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395785456 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.395506929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785307265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.452314292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394737138 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.821758339 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.15550511 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.407643319 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.458560757 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.42145981 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454940464 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395407265 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.393419023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.413423941 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.395165126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.077479965 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412825402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.394592148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.596869895 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.467986187 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078748422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394332478 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394281214 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.413513408 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.39416856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.118530366 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.408822379 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.484915924 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398608929 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.78665646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919348612 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883336422 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.39508823 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.445813466 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.400895394 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.399082453 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081849864 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900171803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.398990682 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.395890567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081285895 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.39899152 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.405158087 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.405233934 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.752742091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.396405716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.397640231 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.398561926 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.398037628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.398554384 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.446207999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.460269075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079976023 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396994478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.397798491 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.416361676 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.402071381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403276981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402693387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.401512302 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902421739 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.585735169 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404028753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901278438 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.108886193 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.39621924 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185920081 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398838008 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.426073664 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.514406337 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397444395 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418799626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074113545 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.403558372 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.39760517 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8870774 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.399080078 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.80851287 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419119918 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400767724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.100765258 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410373624 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.448116202 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.39821705 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.409406462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.400526911 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404248543 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.798610494 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.471319223 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.400943025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.401254308 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.407471159 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.399568828 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.398569539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.404553749 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186332983 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.408671242 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.400039837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.40399893 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401119164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.401146542 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403100562 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401784822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.77040118 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.401053095 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.403042314 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401280219 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.401958867 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.404537686 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.60539109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.408782779 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.835820393 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.402009152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400728473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.422034953 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40108627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402377565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409764049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.410866843 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.413106234 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.845591328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.423113721 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.420162648 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402238441 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409079534 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404326347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402669711 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.453014241 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.409525611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.339625521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.415312311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.418706736 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402373514 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414154063 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402676625 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.409261471 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401121609 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797546462 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.800268875 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.586815894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.4036074 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.403458918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.343680645 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.440325687 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67288438 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427803284 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.403246041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.801353091 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587809246 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.406658137 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.404219908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.403287317 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.771874412 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.402633254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817606066 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.146218594 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404614861 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.407388887 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.33980222 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.244410899 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.406953426 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.403912537 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.809058889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.424772243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403675285 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.404358962 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.406188035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.405591381 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.407087173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408270354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.405751807 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.404014645 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.522669398 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.688867488 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424643106 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.410549484 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084106855 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424444128 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405919775 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414519612 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.404993819 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.404484467 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466845749 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.410558982 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.446164278 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.407877286 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.408050982 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15827271 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.408117261 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.405942473 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.685624408 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.285579751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.405963915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.406974519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.407310036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.45738037 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117621312 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.41269878 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.848124192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.411361599 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.478002824 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405293648 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414273351 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113750569 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416806006 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409805953 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.273331057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.407999998 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.189664831 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.407814499 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.408348925 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.194365848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407325121 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.413478418 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407446506 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408809598 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.803842304 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.41173015 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.438372925 seconds)
  done (took 519.995873022 seconds)
done (took 677.735416791 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407212677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413771682 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.414681155 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413735364 seconds)
  done (took 10.926043668 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.447072425 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.437451438 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.44949913 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.436970023 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.446516069 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.437513248 seconds)
  done (took 9.932538558 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407607 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413478768 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.412845167 seconds)
  done (took 8.510072335 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.727159369 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.432802035 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.90900889 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.417145504 seconds)
  done (took 9.765151142 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.45468708 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.448266431 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.446187536 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.448727383 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.449783663 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.449339961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.448033021 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.448651187 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.448982793 seconds)
  done (took 14.317974653 seconds)
done (took 54.726374704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.580822463 seconds)
    (2/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.837471092 seconds)
    (3/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.670263097 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.473447985 seconds)
    (5/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.697969833 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551528096 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.613249213 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.482232692 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.419410388 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.600655013 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.506748519 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.617318026 seconds)
    (13/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.477389828 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.66668003 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.947642573 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.3906091 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.891612613 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.410323478 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.901722768 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.788072492 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.715816935 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.607901675 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.57531017 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.597071806 seconds)
    (25/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.547224965 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.405120791 seconds)
    (27/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.731613497 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.477266907 seconds)
    (29/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.57538092 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.580163442 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.668274506 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.888656162 seconds)
    (33/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.669467116 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.429857386 seconds)
    (35/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.545276393 seconds)
    (36/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.63858798 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.763589281 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.484993448 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.571305471 seconds)
    (40/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.650351487 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.656408472 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.606287154 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.567234074 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.598439718 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.392548941 seconds)
    (46/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.622903513 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.825313191 seconds)
    (48/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.956578836 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.480779086 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.599322512 seconds)
    (51/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.509088621 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.394628325 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.417383244 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.757969152 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.600410639 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.39330609 seconds)
    (57/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.660979585 seconds)
    (58/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.654482808 seconds)
    (59/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.399338422 seconds)
    (60/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.661309584 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.904784052 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.62810166 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.510563599 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.864777079 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.395228681 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.320558361 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.672809021 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.61761136 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.396247595 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.150961795 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.437878518 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.41712958 seconds)
    (73/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.968246311 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.031537041 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.581980711 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.593675844 seconds)
    (77/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.774793568 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.493091545 seconds)
    (79/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.549102997 seconds)
    (80/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.395461182 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.723182047 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.672146926 seconds)
    (83/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.478464196 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573293713 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.855699387 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.4364342 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.626150294 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58230687 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.481013332 seconds)
    (90/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.578604234 seconds)
    (91/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.505536494 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.490320522 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.408595325 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.137456516 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.63296827 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.484412019 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.417184127 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.610374825 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.396521163 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.602161351 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.8264486 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.088135021 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.803046254 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.397764408 seconds)
    (105/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.411626088 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.398762999 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.683989214 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.420893816 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.408898995 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.399041457 seconds)
    (111/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.774416146 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.065057644 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.691070212 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.400133285 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.157207911 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.403490206 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.573089427 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.489465106 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.419388736 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.829191757 seconds)
    (121/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.399716403 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.488163684 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.503588062 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.688703152 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.488633785 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.719665538 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.397978751 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.397589037 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.398809094 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.569090455 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.398157266 seconds)
    (132/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.404589298 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.566008359 seconds)
    (134/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.398735203 seconds)
    (135/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.789789539 seconds)
    (136/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.728687565 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.655055577 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.598494404 seconds)
    (139/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.431071437 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.638995294 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.649508643 seconds)
    (142/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.721428961 seconds)
    (143/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.398772916 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.443594328 seconds)
    (145/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.571637288 seconds)
    (146/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.722494669 seconds)
    (147/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.308692328 seconds)
    (148/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.556016376 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.558180338 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.406281204 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.853151019 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.639458482 seconds)
    (153/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.019210963 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.410557097 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.910013696 seconds)
    (156/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.61333854 seconds)
    (157/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.570697014 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.635026913 seconds)
    (159/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.604231236 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.674236088 seconds)
    (161/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.490820585 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.552060915 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.818733723 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.49555352 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.605487681 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.661178771 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.766790106 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.610759162 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.904782934 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.425911214 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.63472429 seconds)
    (172/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.785730643 seconds)
    (173/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.492815392 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.486861981 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.143992683 seconds)
    (176/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.043316961 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.581887892 seconds)
    (178/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.585120706 seconds)
    (179/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.405755159 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.73018203 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.815520256 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.425022903 seconds)
    (183/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.443474481 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.819709336 seconds)
    (185/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.561943107 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.624443653 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.445052544 seconds)
    (188/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.476442012 seconds)
    (189/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.658880993 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.064514559 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.844166427 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.962225225 seconds)
  done (took 361.026566586 seconds)
done (took 362.303134787 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483523009 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.609179282 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.45433473 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.453065155 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.466033634 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.4303967 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.48649748 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.462176301 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.47806603 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.477533631 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.430135704 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.46289385 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.477666049 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.465766213 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.497268332 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.46207105 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.454853791 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.46711366 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.479428355 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.482048869 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458778452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465014092 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.491721957 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.456576496 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47200269 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472887229 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.468426257 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.439652696 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.464878599 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.480428621 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.427465182 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.472493744 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.483209352 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468407959 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46725013 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.467186295 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.467595355 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.611448355 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.485415638 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.468393292 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.465664733 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.481633244 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.470407026 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.470448372 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.469826087 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.493669411 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47492017 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.48056153 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.42780545 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.441451878 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.489490319 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.48030591 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.46575413 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.441450551 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.441125439 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.4809224 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.468533045 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.488966998 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.466680016 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468761146 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.500049553 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.487962051 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.478541371 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476045662 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.468137743 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.482824736 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468371292 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.481926508 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.468054772 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468429191 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46821387 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.466824587 seconds)
done (took 115.344666808 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.642252342 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.429951043 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.67647094 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.468762892 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.688512694 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.641636063 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.466712352 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.466735679 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.467761996 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.324045327 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.467784347 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.468293 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.433070993 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.468117908 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.640169116 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.468006162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.468263318 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.223607555 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.468705273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.649117531 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.437507521 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.467872625 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.46795853 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.335847876 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.432264536 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.439411604 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.65037635 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470645534 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.235536028 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.438470144 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.433290923 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233246141 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.648003912 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.48860962 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.479405447 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.478841479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.685926192 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.472399808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.641883651 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.643882648 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.679689156 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.507847891 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.440642836 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.434873527 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.474151706 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.472333319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.467797197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.49845752 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.43170839 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.469887197 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229241861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.481228304 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.472365655 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.471595934 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.470858061 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.500733927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.472484106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.472458614 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.651602763 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.472579089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.641526133 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.336500682 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.327946243 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.471340454 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.435285731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.472770805 seconds)
  done (took 118.164892061 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.588284096 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.598681927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.639700342 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.467535502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.557540802 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.640776596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.465101184 seconds)
  done (took 12.254315511 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.476391167 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.472289528 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.554853379 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.556562465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.473411458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.699455706 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473534519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.484488496 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.472149776 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.559700783 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.473535636 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479578374 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.480925333 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.438236454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.557564757 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482848413 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.637946488 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.466606054 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473205217 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.680434992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475053916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.489301398 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.555919926 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.485296629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.475545459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.478540882 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.292610254 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472677706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.473145083 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.474004131 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472274931 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.584700122 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475597071 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.439739369 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474746963 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.640159199 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.474740538 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.476417217 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.476052507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.442347242 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.474740607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.473963693 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.47463389 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.476080931 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.475478271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.498421622 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.474932742 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.475471008 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.476859243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474137598 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.558656028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47598923 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.477885631 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.473301738 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.563573901 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.484362432 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476963865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.474386443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474553503 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.4742865 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.678499759 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.556426485 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.476906736 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.558363532 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475604824 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.477156208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.476543141 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.476871326 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617830941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.475092259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.559015012 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.477043135 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.710733956 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.49936434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478707034 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.473123992 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.47278624 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479979961 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.44014787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.480770984 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.477112208 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.471860353 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.484237276 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477980475 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.477051097 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.687698973 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.639558634 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.47733584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.489989684 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.483435708 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.476864621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.55795552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.478032227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.479431288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561954351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.642313593 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.562183152 seconds)
  done (took 152.300808159 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.489025106 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.489619176 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.483534464 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.506551008 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.469892785 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.468758701 seconds)
  done (took 10.211475705 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.471416582 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.480958088 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.478098158 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.479886234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.47932953 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.481207631 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.48060106 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47089808 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.48298593 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.481811967 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.47921932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.481763428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.480138501 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.480375543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.479411803 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.479388546 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.478993243 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.481475403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.480196958 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480608952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.443648455 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.478643967 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481209098 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.475190525 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.485267296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.481089111 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.50411187 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.477861954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.480253949 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.485292439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.483132457 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.480819314 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.474128728 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.480261002 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.485077188 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.474546519 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484520832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.483192521 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.481879713 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.4826604 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482784787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.482837727 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.484235321 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.482595308 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.473153883 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.477933542 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.485887137 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.504773616 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.482811257 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.483502896 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.483551645 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.482340736 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.485082496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.485918356 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.478100393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483623511 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.488034338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.484163245 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.484537105 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.475777611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.486413252 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.481917917 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.476333129 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.48644468 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.482636515 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.48489567 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.477013173 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.489157734 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484203263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.482494247 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.485701568 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.486002795 seconds)
  done (took 108.973388728 seconds)
done (took 403.197477078 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.067052102 seconds)
  done (took 4.375543915 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.707597314 seconds)
  done (took 4.017446562 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.098156616 seconds)
  done (took 25.41551073 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.471550468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.454988934 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.476996132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.454567093 seconds)
  done (took 11.167042751 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.999424368 seconds)
  done (took 4.308002855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.455422299 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.472240639 seconds)
  done (took 6.23928825 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.814145011 seconds)
  done (took 4.124726196 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.306311578 seconds)
  done (took 4.62329232 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.461114294 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.462300129 seconds)
  done (took 6.239386866 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.427133297 seconds)
  done (took 3.736947485 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.895986214 seconds)
  done (took 22.205881699 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.453955493 seconds)
  done (took 3.764624468 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.495426409 seconds)
  done (took 3.80530059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.518141588 seconds)
  done (took 6.826855286 seconds)
done (took 112.158162573 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.447331186 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.452779715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.453163353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.454270197 seconds)
  done (took 11.11656622 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.604000551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.605510519 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.606814945 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.598614181 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.601029154 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.611514495 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.528289596 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.517518324 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.582396616 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.578693352 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.610593567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.592127462 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.607030405 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.520224534 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.579810882 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.608278609 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.582803721 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.60675551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.520616553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.595978301 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.487611099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.595113527 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.581551048 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.486974286 seconds)
  done (took 39.120853009 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.060343079 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.604154621 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.686093392 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.572573789 seconds)
  done (took 8.234617755 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.652555119 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.657134263 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.671908139 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.707553803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.752367602 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.66443156 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.52196044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.516511143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.503912893 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.654331113 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.737703517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.645427606 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.876338325 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.488862027 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.870628171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.48783543 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.488511772 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.653025989 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.7044613 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.73371991 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.48894409 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.65115948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.661430968 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.650710052 seconds)
  done (took 40.755011166 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.504684989 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.513570196 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.490965925 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.513205974 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.49021604 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.491135081 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.490737614 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.505288487 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.492578281 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.489640267 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.490350345 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.511793154 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.48860068 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.491727754 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.50610584 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.491617824 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.492515983 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.507426608 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.508110703 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.493695393 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.49029524 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.507221554 seconds)
  done (took 34.275000125 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.453496426 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.453338724 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.892955452 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.794536582 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.454437607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.453078496 seconds)
  done (took 14.816237736 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.580112387 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.77002746 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.483326337 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.921044708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.04505084 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.485774204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.483991714 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.818480689 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.178023966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.159682666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.564702257 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.576695821 seconds)
  done (took 22.383015047 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624163659 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463781323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464857018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557838955 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46794114 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467235813 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535507344 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064485086 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.492007049 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82230387 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46660766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627665152 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803990647 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479448609 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47146994 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.433173381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784009475 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097562965 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468567825 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464204003 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527306719 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481882368 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487614312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751047532 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468450563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468674474 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.811991595 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465499139 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888453064 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849249615 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84470183 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466956307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827988741 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038210865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647914794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748199475 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465910784 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495936739 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.459294161 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.470921127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481462273 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470253166 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836491149 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47053281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468408238 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471960505 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101942573 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.502811426 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.46784441 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466964829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852073298 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632800931 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.494036567 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466916708 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564808137 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472246855 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.497560759 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66502982 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198496541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470373362 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482887245 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.47138627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465816358 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512038577 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2892636 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.5000418 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.497407666 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496337139 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468567756 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471817191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520033029 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46768126 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.517890438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469731381 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469475763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482431599 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471648874 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168290604 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483078749 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.47236335 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782657767 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468967528 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468726994 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.469643032 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470106499 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394600528 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501285813 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.438899598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535392106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071648776 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.752754523 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523165761 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52885531 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.774483054 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.44017895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470694143 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.482686241 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472760607 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522803424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103935982 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475463395 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.498650492 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810473175 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.770514044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48414327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.440620487 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078314638 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482797079 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.523628808 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489496674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.751143494 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.268998103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868414552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477814043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557676574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470901293 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457515443 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489300211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.501236505 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485451886 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864169459 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444798113 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475529047 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624912288 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47464716 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473964531 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473115052 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47297523 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474130824 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.752127907 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497161476 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848934491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.47751191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473339661 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.480342298 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491908712 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.47326137 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781022643 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484418026 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829754887 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475304227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475623751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476436633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.780763671 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.473391763 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.50240914 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906049925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475768601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497794308 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850451723 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54056071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672821872 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538938297 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.493447875 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.814790834 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.502901242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.505139795 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475868405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480614679 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481395644 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.507410823 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479836019 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301570193 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484234483 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486604686 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475822938 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.521052363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626303177 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505750067 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.761967496 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.481409822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4817188 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.511326056 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.482521835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784819703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857726111 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.481508507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728174093 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.081190352 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298252661 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528887158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.477229053 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.475766996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.48013019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47653511 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478657796 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477814741 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762805103 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877015646 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475282227 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312385185 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484253619 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485357601 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.516792953 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862432786 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.514982038 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4815208 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.484953778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483781772 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48510219 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866211339 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786099545 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.523576287 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480048196 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.08457961 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509385097 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481503688 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480608114 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537494328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486169436 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166351182 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909672591 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473087884 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88840634 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491030668 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.532009971 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.478971453 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483215778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501274499 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.489624693 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513596596 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.767723186 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492235989 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485775461 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204251462 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482499416 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247821179 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493280326 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.495616237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487058725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088068462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480965072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480691225 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846149709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091024425 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480347047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090367009 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.481710069 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.484829042 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864101434 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797517128 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482489568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.494988923 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866169853 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783481335 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53776182 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484396095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487466668 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.452480096 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176183577 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48161278 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735341345 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091174374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497442517 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483437035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.537127661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499901769 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032628451 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489193772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482295409 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489635589 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501654156 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178568588 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491772313 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483614362 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307734524 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495369698 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.099688725 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483515955 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776589817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873483702 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.848840206 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.488035804 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.504452277 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.826151775 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863200341 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486918623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490697456 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238179589 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.437978321 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.514770349 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483923479 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472056049 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492590923 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905876718 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.501767718 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.502934137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491049176 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484444007 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486505232 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.484690546 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494652917 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484991423 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121936735 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.501874645 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48161313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506416353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491495602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.821579057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.530905082 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.286395078 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802304678 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482492781 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54811167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.513970247 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485597854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.457689976 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486510261 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487414216 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509176342 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794384747 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487527709 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.456240769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546790691 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78989032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485385117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503472055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80699068 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.487369378 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.511084824 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49279458 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551568814 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500385629 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487085125 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479835111 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55405174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639252729 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772596781 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.871301371 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870050305 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041831856 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512861726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489466572 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.531895153 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64657021 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487923779 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.524170497 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.492897665 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290720209 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49637618 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297008858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871489454 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491551823 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490047861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487327125 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816337259 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488961969 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849136472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490193271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.484567765 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540671129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489530897 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498507108 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791308378 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841509664 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489403995 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500386537 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491568515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.491307938 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876048553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.792715191 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135189468 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189501472 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49071708 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494294141 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125336609 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846684484 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492673475 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490441907 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491269316 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.493041119 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529930797 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.520696591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489823252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801400374 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865652679 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069130509 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869167371 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.524604072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.455806426 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491405716 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82735528 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424414445 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.773764457 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298259017 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414084152 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830174284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645836108 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77593275 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.493868109 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815308078 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.500470206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491145837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490453849 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491068033 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.491859893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864329186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297715443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833675008 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.521101461 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.501807527 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553529747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.776725029 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799652246 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.430841311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799373789 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878771805 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503210569 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492029329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304666117 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876199201 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496215056 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.521555569 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812815513 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494422859 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55887945 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.464474358 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.491105119 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206831469 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.793691223 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543676469 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505612061 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446602602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313500131 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.496340771 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139669368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495671412 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493685126 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871635632 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.524165608 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497975406 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864423472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.525296268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497916321 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779193709 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.297232211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.478375079 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.502989731 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523595354 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.495484238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496279311 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557548275 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500902036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507622303 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.020833515 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49565479 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497026612 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538713687 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.50952443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511123237 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.500419223 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496915075 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.52829225 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.494092441 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.46680133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509087574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701136926 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187453796 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50177575 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.196334045 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.921573546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834001517 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512696342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.469995381 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.525095475 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498855196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497864637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496672447 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498905482 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200324986 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.498351012 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.876318909 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529310256 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.79991918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798249345 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499044746 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791032575 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50821749 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550712629 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.466198739 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499252035 seconds)
  done (took 1053.246510983 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528504777 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.523162128 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.541325682 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.590633278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.532783184 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.505250703 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.50104954 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.500322702 seconds)
  done (took 21.568297129 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.498534556 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.528835545 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.508246475 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.523412369 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.493520021 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.124432583 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.491842643 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.527801196 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.544878088 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.496286713 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.496392104 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.29488261 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.525174255 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.497877209 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.515150216 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.530040237 seconds)
  done (took 34.952392201 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.744925525 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.682228515 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.948307393 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.574851313 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.523603386 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.508286424 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.872993207 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.512847199 seconds)
  done (took 28.715335869 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.53388528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.536692411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.53568921 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.534842594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.534599267 seconds)
  done (took 9.022224824 seconds)
done (took 1319.513800916 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.530151564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.530020752 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.532790867 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.52992947 seconds)
  done (took 7.471489007 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.471177305 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.470965756 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.470697775 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.5098853 seconds)
  done (took 10.268699043 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.998192088 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.199808928 seconds)
  done (took 5.546036337 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.503212804 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.349970482 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.334934771 seconds)
  done (took 8.536533662 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.894664049 seconds)
  done (took 3.244815489 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.032044927 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.082478924 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.491767214 seconds)
  done (took 7.954755001 seconds)
done (took 44.367424937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.492826916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.269347589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.653639544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.508330145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.658281615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.653493157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.783337253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.511118278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509685065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.497423311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509696729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.659999083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.772974413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.266911526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.771323435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.265409938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.750317691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.493950732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.524372617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494645304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.805957587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.504875935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.495896999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4925875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.658233914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.645184769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.50930925 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.26824305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504251763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496975418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.661371673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.512290215 seconds)
  done (took 86.950459066 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.494547596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.509723059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.495767164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515235702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.496735514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.513609657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.499890244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.496400834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.493787164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.515669765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.494718288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.495240771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.499306302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.496850752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.49976893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.495219958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503101826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.494063177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.495017907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.516372508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.49883613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505968532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514921066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.49957994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503668239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.495201171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.502515928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.495473621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.496836155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496863254 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.496467183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.497223006 seconds)
  done (took 81.375474775 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.496850193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.49695265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.499681908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.516906933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518047092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.516896387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.514667403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.497881889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.49860251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.518692286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497640238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.49700978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.499014504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.497043723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.500404835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.498895356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498024645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497655184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.499332352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.500287293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.49773166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.496583469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.505374532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.496599602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498057749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.499288003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499813558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.514834464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.498064383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.497685216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.498972879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.506167509 seconds)
  done (took 81.42316778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.82759316 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.536414582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.540830088 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.509078913 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.539305453 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.538990538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.509049509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.842887074 seconds)
  done (took 16.196316166 seconds)
done (took 267.293460021 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.516944718 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.50741271 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.571262868 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.509433916 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.559518148 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.56922881 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.818745945 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.566745185 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.811282427 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.512056317 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.557560078 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.513118323 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.528334993 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.733573313 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.501823242 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.55325995 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.509875942 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.503912544 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.510956386 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.849496225 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.568897274 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.503288372 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527175558 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.525793468 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.47936466 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.61601395 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.616387391 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.7551322 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.713975708 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.613876039 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.504122557 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.525509215 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.512898393 seconds)
  done (took 71.522043971 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.532043425 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.539006042 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.540385059 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.540205078 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.54065283 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.541226506 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.531223069 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.541885249 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.540857116 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.541274906 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.542402983 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.541962354 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.541144164 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.54105323 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.540387154 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.515277676 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.532737648 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.540933522 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.531829642 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.516384381 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.541824488 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.541741726 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.542950678 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.543001872 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.541817853 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.541825396 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.541838526 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.543168653 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.54539624 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.541618945 seconds)
  done (took 47.51482741 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.541269109 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.505173738 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.526666275 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.554115157 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.535677127 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.540063788 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.92471829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.545346932 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.538704817 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.537226766 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.515540558 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.546309556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.604213846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.518880439 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.538562969 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.549371327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.54472332 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.537153014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.506991287 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.558699887 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.936915163 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.543633098 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924420348 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.559062853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.539607306 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.536645896 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.547496228 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.507417319 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.539017846 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.519261353 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.50897932 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.91897147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.515462616 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.510339339 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.51818468 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.552191868 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.545856564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.525519691 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.53837356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.538396468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923972176 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.537643579 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.524619296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.511124075 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.558881475 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.544021345 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.525768046 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.50711344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.842862071 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.549748959 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.509569758 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.547498184 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.549364832 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.540217579 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.844826217 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.542469472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.537630309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.507418786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.557388687 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91659477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.546635574 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.541019707 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.526414287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.545183504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.516171365 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.54510158 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.562886314 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.540176233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.520012566 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.548141353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.509883903 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.540486329 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.546556793 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.509345567 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.525759736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.533575254 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.542304996 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.520762173 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.516516032 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.930712697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.550161582 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.510236323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.959869408 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.549803784 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.550433753 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.552302846 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.549744839 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.722305818 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.916937621 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.511801536 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.511573294 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.512251383 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954865699 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.556747894 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.53999695 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.510631415 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.555548161 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.549957855 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.517354476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.518120217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.543549637 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.563878759 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.511603047 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.5663158 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.935137632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.559631571 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.512093193 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.548308762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.71232962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.551079365 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.563163304 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.546863118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.959473547 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.555631551 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.552722382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.514791231 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.54710798 seconds)
  done (took 224.848543805 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.514245212 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.533586708 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.517490876 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.534029223 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.515246107 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.545890159 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.514839841 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.51792096 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.542634995 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.513131663 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.515764679 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.544961409 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.545520977 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.515029321 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.532352334 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.516343733 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.515707968 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.533364543 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.515601111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.51550452 seconds)
  done (took 47.863796019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.550785334 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.276073305 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.244874436 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.552984915 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.554138344 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.545813193 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.619407887 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.555819843 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.553955011 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.950867215 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.770560977 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.552368985 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.552058121 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.553165106 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.245728665 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.526918612 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.950788714 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.279359338 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.555902675 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.313124526 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.533124987 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.553394186 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.544613041 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.319550412 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980330669 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.942626992 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.62676811 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.320159498 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.55990025 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.556122535 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.27678415 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.563077958 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.547322044 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.264144205 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.555221583 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.577165155 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.554964497 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.62206472 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.624089069 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.95555643 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.285256596 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938625366 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.576060546 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789191559 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.560951501 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.526588333 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.290413047 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.555436484 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.526978047 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.556289595 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.567695236 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.271834428 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.552043873 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.27048705 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.561713958 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.558154637 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.30176044 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.279751357 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.276086016 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.775849429 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.545547378 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.927457256 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.556603113 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.290738997 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.557142008 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.556672674 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.556108288 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.776299137 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.284526964 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.931579638 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.957332214 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.956496702 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.558872187 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.63473756 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.558257513 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.956271255 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.633959598 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.057233675 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956708881 seconds)
  done (took 143.825269055 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.924136093 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.68867752 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.083144232 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.292443753 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.224830476 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.753062173 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.691407615 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.87352386 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.550236591 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.714469906 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.435259331 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.736476196 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.446069992 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.644218654 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.678311816 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.739602851 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.103768503 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.535129922 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.352195625 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.403368334 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.53346288 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.703477377 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.442284106 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.041373068 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.526134154 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.395605963 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.538845897 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.23977679 seconds)
  done (took 60.665186825 seconds)
done (took 597.592084036 seconds)
SAVING RESULT...
DONE!
