cset: moving following pidspec: 8664
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.218351742 seconds)
loading group "string"... done (took 0.605756114 seconds)
loading group "linalg"... done (took 7.046278561 seconds)
loading group "parallel"... done (took 0.148784834 seconds)
loading group "find"... done (took 1.104665289 seconds)
loading group "tuple"... done (took 1.693257346 seconds)
loading group "dates"... done (took 1.2068922 seconds)
loading group "micro"... done (took 0.212574143 seconds)
loading group "io"... done (took 0.914888797 seconds)
loading group "scalar"... done (took 36.131731618 seconds)
loading group "sparse"... done (took 11.385799533 seconds)
loading group "broadcast"... done (took 0.882535501 seconds)
loading group "union"... done (took 11.852476554 seconds)
loading group "simd"... done (took 4.346275309 seconds)
loading group "random"... done (took 8.708087064 seconds)
loading group "problem"... done (took 1.71924759 seconds)
loading group "array"... done (took 20.367615061 seconds)
loading group "misc"... done (took 1.617722156 seconds)
loading group "sort"... done (took 3.193082727 seconds)
loading group "collection"... done (took 16.755543583 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480034295 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118840718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.110462394 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114504551 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140808115 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.106261806 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.118180858 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.079951675 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.814447965 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14943939 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115230693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406269644 seconds)
done (took 4.991695647 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167420872 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079176695 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078023153 seconds)
  done (took 1.233911008 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061311704 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117377053 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062517351 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063742881 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063660018 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062441488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062461025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062451501 seconds)
  done (took 1.572294274 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069366771 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065365651 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065422654 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064635576 seconds)
  done (took 1.339407521 seconds)
done (took 5.461338682 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746193485 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198789551 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178739647 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392233446 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125869224 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15551333 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641005992 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303289756 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.179640103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078435824 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100508004 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.312183361 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.103475506 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636627115 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073772424 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087209607 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.133254123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425231 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064398862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.07900262 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085773997 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124993041 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.082127262 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.071521956 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14074892 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064591193 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131358106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076643235 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063679578 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.203697649 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.169460929 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652044482 seconds)
  done (took 9.994442746 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092136825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093401371 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065829041 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119661163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092500621 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066249317 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067464833 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063676503 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083438091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12435278 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085280591 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097831281 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062547824 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065779799 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081152494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200884418 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07791589 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077910319 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067410325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071955037 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104849036 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074693914 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074191765 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074502096 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124963297 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176336978 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094974406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095745666 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065485005 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077771437 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111750251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12439863 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062757569 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063170342 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120731008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091083896 seconds)
  done (took 4.407863032 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.941464239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136129507 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087081526 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128240228 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061375392 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10338243 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061874537 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077475335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195690295 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.407818766 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.562491018 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107628465 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09995785 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064088447 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.065286916 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063553763 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.312288521 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.090302913 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099787747 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076546916 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06575763 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.064635372 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.337537005 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.063572882 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059873202 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064166783 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.053877147 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118948287 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064077484 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.907521723 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120577016 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063019281 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096750112 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156864938 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084132911 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134028794 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063132877 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.188590004 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145473269 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.066170501 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063076786 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079753203 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099678221 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107852067 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062273381 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063743007 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155289807 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061401449 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075464975 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.606891496 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150628026 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105567281 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.071263124 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060591374 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244776161 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.081996112 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065524646 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060537717 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17217905 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133974382 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064690556 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063662133 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064679171 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066317045 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.346000934 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062512634 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731722844 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066820245 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073345056 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065020632 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066016187 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069893464 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068834288 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084177619 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06306143 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072058169 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062659289 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062560397 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063253596 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080684371 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353838895 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063003568 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064263551 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060734691 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082821299 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09319887 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063054228 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.061953653 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096848653 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064235518 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062350598 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100727812 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06273334 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.079958825 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06571254 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109190606 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.062954648 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176246275 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064482352 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061952989 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061234339 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.092647105 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067337795 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099954433 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077036286 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06456051 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.38890934 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061502707 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.061815144 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061212531 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06223585 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064746421 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.062062604 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064423247 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076726843 seconds)
  done (took 20.007545705 seconds)
done (took 36.425245822 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.227766011 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.071469459 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.071474143 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.071387456 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074672141 seconds)
  done (took 1.686617613 seconds)
done (took 2.836660788 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.115692485 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094802034 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.060747206 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091892847 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060698337 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096393927 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095438351 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077030009 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095540114 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06092692 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092862955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060727115 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060725811 seconds)
  done (took 2.23191065 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079300674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079624492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065927909 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079354076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.059954326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.078630464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077128663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084734274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077208795 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068571332 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060683687 seconds)
  done (took 1.954165167 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.07839476 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.07983467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066288036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078215707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063302103 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077632064 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077512881 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.081727298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077898576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069668085 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060593787 seconds)
  done (took 1.952838578 seconds)
done (took 7.275995614 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073878095 seconds)
  done (took 1.208110468 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578949967 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.061461546 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.077739502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107583814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.178787619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113882118 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26398649 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.081407495 seconds)
  done (took 8.777945437 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098765719 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065015074 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068302661 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067719176 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065088263 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065109384 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066485538 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068105146 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066371409 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065229169 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068806509 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066497784 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0680508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068623908 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065578777 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067092408 seconds)
  done (took 2.313874829 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088524164 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.086873866 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070648883 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07130754 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068283182 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068327683 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070734031 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070243209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06693831 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068577037 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071086057 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069714936 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068074395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061762909 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070662498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071854162 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067926164 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070372647 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07156252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071071912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070873011 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061474744 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067671751 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070084827 seconds)
  done (took 2.935951267 seconds)
done (took 16.377551203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109319703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067780211 seconds)
  done (took 1.317360518 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.077961663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0801293 seconds)
  done (took 1.308935679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079745403 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062653521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088811154 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075499675 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062854056 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062086117 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085636225 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062809279 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062099874 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062579827 seconds)
  done (took 1.855598747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064769218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075421864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067458682 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077507021 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070398525 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06139585 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069098243 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064219718 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075014343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059465623 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068141926 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079002741 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068251295 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08054709 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069119043 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06551512 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067499432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064152637 seconds)
  done (took 2.400673916 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061508337 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063007886 seconds)
  done (took 1.278762354 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064367237 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060181362 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063339626 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063426223 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060338712 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059321124 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060014774 seconds)
  done (took 1.581848611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.366328834 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10640781 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293222465 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067802767 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078204831 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244877801 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062003467 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06682591 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06691944 seconds)
  done (took 2.547671022 seconds)
done (took 13.444165839 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.074853697 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081560465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090951053 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35478442 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08789874 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062433343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11012465 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184077413 seconds)
done (took 2.211258553 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206360113 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.601818181 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380848059 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192436651 seconds)
  done (took 2.334425402 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323339022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082945472 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.055173125 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06287854 seconds)
  done (took 1.691117855 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062673362 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065494884 seconds)
  done (took 1.293019152 seconds)
done (took 6.689489422 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063462097 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081235073 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062644859 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060029084 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062933666 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060150058 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060458096 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060129972 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062682607 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062631176 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062732972 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062576293 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062174147 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062166059 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062266836 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.05998264 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060227634 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062455642 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060090734 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060601704 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059965152 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062653939 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060180344 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060087147 seconds)
  done (took 2.691070933 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079621855 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062541072 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067247715 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067037287 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066696339 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067704458 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067845562 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062848246 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067737018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064483277 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066271134 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066490237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064404393 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066748128 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064763143 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06635659 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067865661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063062755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064688738 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066636806 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067782566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063060886 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066549219 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067585289 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066259772 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067750834 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064951989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063532408 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067798828 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066249842 seconds)
  done (took 3.165034452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066096188 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060020944 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06084189 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067586565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060765812 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0615206 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059981104 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060665321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060997582 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.059959852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061233778 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.05981027 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059961705 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061356113 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061249249 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064001064 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074856855 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060837527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060202605 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061183726 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063374506 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060319594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060517707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060494592 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060330781 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060161178 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060914138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0600717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061098922 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060142783 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063397785 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064139627 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060298945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066514627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063399953 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.059891618 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064050431 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060196479 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061056898 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059566413 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059885565 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.060543282 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060656035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066777548 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060259174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061681804 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060122145 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061286276 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060718568 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062490767 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.059535994 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059772245 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062029349 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061113848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063675745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059586936 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061129002 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05954156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061287232 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.059743086 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059726936 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05952451 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062174469 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060792899 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074631426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066493985 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059960734 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061597995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060759943 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062638117 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062013741 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073001035 seconds)
  done (took 5.632767125 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087646279 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083348843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062088053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062121966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058357508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060500889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063810952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060720031 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061722547 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066210375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061097669 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061796825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17278864 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072873433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060455135 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061814124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066039503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058601745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060451887 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064423098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061257351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063753477 seconds)
  done (took 2.717342301 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149362189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066178137 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10232785 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069497585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064119614 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068933229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065934818 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066447841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066256417 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064829828 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064731926 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066063967 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064314047 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064134435 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064467506 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064371592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066284869 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064613329 seconds)
  done (took 2.482108785 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073342581 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062881201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082006807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062363978 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062447042 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064967503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067018713 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070686522 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064939159 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062392487 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07069564 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06466593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064522044 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062457519 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065170261 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062098847 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064764882 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062179519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070955592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067206444 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066976001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070563402 seconds)
  done (took 2.647651301 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075731808 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064585963 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078973293 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065483391 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058375587 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061066554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066918009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062376522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066635265 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064048476 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062403368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061017584 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065706534 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062628283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065524949 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062301586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063869167 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062239481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064167805 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058855996 seconds)
  done (took 2.474515033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082592118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063853966 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064161681 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072172038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064362802 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064086843 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071460782 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063936783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06377272 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083639286 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064050719 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063863923 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071642861 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068568553 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063926468 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071649984 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071315354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071976277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064274414 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064120556 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084097847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064084341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071730828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063853566 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064123467 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063765573 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064259328 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068508823 seconds)
  done (took 3.096807361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063588987 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062104201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060321714 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059782354 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060045498 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059903668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059823476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060334077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06235561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060232224 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062446372 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06239495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062231656 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062224839 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06254407 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062176448 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062233583 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060167465 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060219322 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05987042 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062377242 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062202082 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063078936 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060057712 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060226784 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062385131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060350187 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06040606 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062332759 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060048702 seconds)
  done (took 3.024483294 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071801101 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069467625 seconds)
  done (took 1.329253466 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059584663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07671956 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059930664 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067061892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067645026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063177902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070332166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066331196 seconds)
  done (took 1.715339445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.077526547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.073436951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063711198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077625906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073082043 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.079155321 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127537542 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064186502 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.069431709 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061124114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0761911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.061985249 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068437217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063096839 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068051202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069008502 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060746825 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068674647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065221823 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061497632 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063823655 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071259525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065056112 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058493735 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063767995 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.083859655 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073377947 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062776546 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065485085 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07011536 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068197938 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057125297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062791974 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063335193 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061116346 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072424121 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077308758 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06548 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.071155194 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063944005 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073106031 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058023337 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06722059 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069108629 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072202616 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063223677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063794246 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057812939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060307941 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064694325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058312957 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063001037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0577527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071977609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066179929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073154027 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061755285 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064481961 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06538932 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065731113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.068844286 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064376642 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064811033 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062496788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072011802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067080048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071431534 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058096421 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056965483 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060856095 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07217107 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084421224 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.068677305 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063396755 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06357678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060773757 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065848597 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063853268 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068180113 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.068849007 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062664597 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068478277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070072423 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062661598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064696919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070554429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.060838141 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065194639 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059690684 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077238426 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060705321 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059804036 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.05950044 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.071425235 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064748175 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06127062 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059784145 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068896735 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05605588 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061953404 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062464247 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.061943864 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.071423255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066064762 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066012282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.069855302 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.068519299 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061353502 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064218496 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058467624 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06235697 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060419843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.068163989 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055849827 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06377575 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062233828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06217901 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.069522377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.059722572 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061311862 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.190768899 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069444113 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062577137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060600164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066849876 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063016401 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066687599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07046356 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06260393 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058519839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058063238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066997314 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064039838 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.066429165 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067350888 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.065848855 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057329948 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061493903 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069072458 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.071772013 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063989033 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065209168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069341012 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.063759497 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063195643 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069750763 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065246588 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062961926 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.06857457 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064455651 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058726853 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066588814 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.065254404 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06142312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067048304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0663433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065391993 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064117807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062158757 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070505619 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06398553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062024102 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063144235 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062124755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072973399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064628218 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05891921 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060561298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072759815 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061410998 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063065314 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061982714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065304751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064161396 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061269774 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062674069 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064308102 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073779764 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067868408 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064137035 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067563941 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074289496 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062660319 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064799045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063218706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064055684 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063468076 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071482539 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067987371 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067798608 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064670164 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059031264 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068141343 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069778208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061585778 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060896945 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061429732 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06683287 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.06779717 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067046824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063793426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061188266 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063286054 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066190279 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06527395 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062737155 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061863212 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06894626 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061008693 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069598603 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063012927 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.071938069 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065869383 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057815305 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065650757 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060050314 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.067370197 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057105085 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059812032 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060951639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062950157 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061200177 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064054701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056111207 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068040177 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068825767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.062017265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060861141 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.061709013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.067924447 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06310747 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065379728 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064896119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.067003337 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071345412 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060700243 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064385817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.071174387 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061426784 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056096975 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066104294 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060660017 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060387936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060611739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.059590738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.189904522 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072572684 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070231921 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058227907 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065622054 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062030755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061985912 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058979648 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.068023637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06607998 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064274281 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069553485 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064495577 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063630031 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067338605 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063126187 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064611208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064751808 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066742193 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063819698 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064791564 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063750728 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066019044 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062514034 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061844641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065629092 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06345781 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063809148 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068380763 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062782709 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064004249 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065898112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064091122 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063750816 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063431798 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062467941 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066111759 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063051728 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063089383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.064943511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058020864 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069259107 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063411355 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070887421 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063944163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059377787 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070755485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065366477 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06827462 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064562942 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064731661 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064661516 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063093419 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066158077 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07025695 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060811209 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073680679 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070794813 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064187086 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.066388656 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063416978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064379236 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062507696 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064113528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063391233 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063416355 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062977887 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067610658 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065686261 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063483294 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064583887 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063738049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063229649 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064249809 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057460197 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062251314 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062412409 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062809204 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072260891 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063306567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062694381 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06179202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064045368 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061989546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059748552 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07119112 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07198527 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063446677 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069673816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061830993 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064197671 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072656017 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057319172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061030494 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060373425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061088917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069655269 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063056839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.071442913 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062551682 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062007995 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060011826 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062723272 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06094456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056519729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060147114 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065248827 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060616341 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061126513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062310635 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064187288 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.062980681 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070692574 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061259568 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063104876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.061789276 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059397177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060866343 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060845891 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.064079556 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062261642 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059389569 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05918804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.060956485 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06208101 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.062605103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061386688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.062774614 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.200272183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06392222 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067121754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066930038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059252007 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066123725 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063640865 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063711374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062394459 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066688133 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066827404 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063629725 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071401176 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063095721 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063734687 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063486279 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061311999 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063165616 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063498818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063785627 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06324142 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064753588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071410055 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061243022 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066712073 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063606639 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063523886 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070355668 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064169052 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066492059 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070925599 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063552389 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065353466 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070504605 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067919519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066130993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065026049 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064706488 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068653042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062253017 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069456841 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063026515 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0638691 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065148534 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060967225 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062777803 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063221408 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061951558 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068877699 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064363812 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063354016 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0623689 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060878351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063938907 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066546538 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0706857 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065649996 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066724932 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059150614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060476705 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06453586 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061584922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064433265 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065578068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069189441 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06589293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063983336 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062114515 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07241869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069081486 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066094078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061400255 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066562833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063952351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06645435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064260562 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063273175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064446519 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066936271 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064427459 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062544938 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069742578 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066277874 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064163229 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064645234 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063549343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063006906 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058124799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063501703 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064726033 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068301265 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064727638 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062758547 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072666679 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060514022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063222575 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065942389 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061889198 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.066995601 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058085256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.063969737 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063377662 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063859174 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058104955 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061726108 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060750581 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0647437 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061114105 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057520341 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.071529462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.070014527 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06462311 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060526716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06061112 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057187828 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057049786 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061188426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06268147 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063623846 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.071049819 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060910515 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061293287 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057149253 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061860466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064375893 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.064900373 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059189376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057339532 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061341122 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.195289698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069810566 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06341642 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064131792 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066824572 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065948979 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061972765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067339506 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060234677 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067563227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075987669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063681322 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064185826 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070011561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070627835 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064505375 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059040603 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064726214 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066473597 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063610833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06461704 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064717369 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078633731 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066635834 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063038564 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062291642 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065930079 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062494342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071481474 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065093354 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06445103 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067965092 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066147027 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072197442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066321596 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071162465 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065954581 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065858087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062277427 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063440165 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061618679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062221283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065624777 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064273223 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068705484 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070867428 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062446476 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07372801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072517665 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064995207 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059945243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062362545 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062428484 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058314804 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064508757 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061172914 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06130422 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062110847 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06259103 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.063874777 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068412165 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064076257 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063958502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063185391 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057704774 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.064985431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065440362 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063910698 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060200932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063440783 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063505064 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.066917411 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06655491 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060841001 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064400466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064266533 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063351653 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058212365 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.068971832 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061864697 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064443498 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06172565 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063066872 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063448526 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066058896 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067846989 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063965239 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064871309 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066361402 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065251365 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060341253 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060218979 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06796078 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060817022 seconds)
  done (took 40.340180769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095915934 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05972412 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059328483 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059111738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070481305 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059955511 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058981064 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059865575 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060282226 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062378282 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05902325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059195294 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067586321 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074628045 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070397398 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063594676 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058776604 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059830405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05880615 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059916396 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067350446 seconds)
  done (took 2.65235396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070387037 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067154835 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069139931 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073211085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064471355 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067261953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069808122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067497307 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072445455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063919462 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072887159 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067854802 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064033898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.064141193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064083239 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067678987 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072906348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064288254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06757695 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069047527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067780042 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069224557 seconds)
  done (took 2.774820703 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063633886 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062850153 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064824476 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057885759 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062248754 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058063953 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06652403 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060747275 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074883224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.061936683 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.061906001 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.061927413 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064622944 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.057966413 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062204645 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06064391 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104889531 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065895142 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062395272 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063461077 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.05875011 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064510206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058422583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058751649 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061295491 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065594036 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063244521 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060428553 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062514053 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061303361 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062093328 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060461026 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063751306 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.062417025 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061045971 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061079823 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061929493 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061861284 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058030915 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060749795 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062857381 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.058682746 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062661964 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06365546 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060263867 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06010179 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063732986 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062231855 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05774391 seconds)
  done (took 4.360753292 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075650355 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105482745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064677709 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084823007 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076954461 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072443477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06605991 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086007096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060035382 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061083903 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077809495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076314726 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062823736 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067027002 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069069177 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062778824 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063476548 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06140813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066174714 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062044877 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0662347 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068808749 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076992221 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075044741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066318198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061457036 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061704072 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066563832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074758394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066589176 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066602292 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067708839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076794237 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064349803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061524693 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06465267 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078079931 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062748145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065019116 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060213433 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064310206 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066595698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068936511 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078211164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062459833 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067597792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062143383 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059911278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074961692 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064431043 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069535598 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076355431 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065975905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062398848 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066792819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076715962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062434963 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06056115 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065176127 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074219682 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060473229 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066141854 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075895618 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064384359 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069350712 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076194269 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067239028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066254217 seconds)
  done (took 6.08852378 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072190163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.068580149 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077705354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076517552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068808614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068843238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068554171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069032832 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068628673 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073646093 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069087168 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089573659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064507427 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071165865 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068987563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06889676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069262391 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069037403 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068618657 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068783787 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069239431 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076410255 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069051311 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076524631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094887354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064670101 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068503817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068753923 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076426148 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069318759 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075921169 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068762761 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068779739 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076862383 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075795967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068935414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061937343 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068414548 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.06899486 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06870744 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06419165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076663575 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06851229 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063975367 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068856992 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068119362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076092971 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075589686 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07094778 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073207092 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068651347 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076717347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068275955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068794583 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076449627 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.101228421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076902977 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077014349 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068970288 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0765356 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076811116 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082613366 seconds)
  done (took 5.786065243 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080400301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07197601 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073384232 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058537689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061022913 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066777742 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061203915 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061194693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071007981 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07087381 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073576446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066415315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069966596 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073346781 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066350548 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069385957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066484757 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066439118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071238078 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066462774 seconds)
  done (took 2.670983633 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070432712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079246539 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06315154 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068017941 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065442894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068019568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064744145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06617311 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063276986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065355433 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072622926 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072584501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063531203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068250843 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072051023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068216583 seconds)
  done (took 2.388700882 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071392246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068757228 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076209834 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063465378 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060791059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059083228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062516045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058257269 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059467846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074023952 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062446483 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064665847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062485401 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061307131 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059370953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065192649 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059172959 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060053687 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062863699 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074698418 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073612792 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061364215 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063164905 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062497718 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062556679 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067858815 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061949862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0604595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059939369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062912968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063286464 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065841326 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060403575 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060754642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061686963 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060117628 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06266761 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063512273 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065416109 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062967758 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061011769 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062491364 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062706393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063535747 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059221701 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063409749 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059160833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064966604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060917356 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063158804 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062621407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065296964 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063425363 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06963113 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06563059 seconds)
  done (took 4.794432656 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075870992 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066241502 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058317481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060637377 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065678896 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064355901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066257728 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064052566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064711733 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061264347 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064514957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06576892 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06494874 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066195319 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064312071 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066668587 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058875237 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064588336 seconds)
  done (took 2.472900856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067886184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062726493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070224231 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063139077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0628156 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064837093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058724121 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061753212 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061673563 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062670335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062470922 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065164045 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06124583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065072452 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062574031 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06290079 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06499196 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06152233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062806253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058663869 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065311017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061338512 seconds)
  done (took 2.693748575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088706462 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.077633507 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133920092 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07515727 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.080219646 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068684777 seconds)
  done (took 1.830075832 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087113359 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07586293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062774113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084307476 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069830362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0638518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064009965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064465362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072291959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07237141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064923529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072603571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072660753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07223885 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069689439 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069675598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064442006 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064208638 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062961999 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081078348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064195486 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072529619 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064878292 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063871624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064321107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071896163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072928518 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072733273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063945335 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07243893 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069652822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064441521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072503385 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072590219 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066222635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072848337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064751072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08092709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069808661 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072111806 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066105861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070633819 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072934629 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069018153 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072770495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064523905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068860006 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064270807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064323441 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082845932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07006336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072150972 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069986696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072888407 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072860422 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082729956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073071722 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07177041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069782184 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075279546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07203907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069599378 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071686429 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072726126 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070431234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071959693 seconds)
  done (took 5.963179406 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078615091 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082834177 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064016541 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072815808 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07196233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064235699 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064748654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064045984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064017041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064497132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103673395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064316849 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072140108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072290453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064365889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064287312 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064223726 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071918402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063860638 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082723845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064410249 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072039159 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072051806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072250065 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073126678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07010293 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064769268 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064197232 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064416934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063955294 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069044257 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064529091 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072381289 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0639877 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072092227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064424069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064194658 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069065632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064045875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070113902 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072323743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080555628 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064762222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064264861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073106774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064903058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064471608 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063829098 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06418451 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064134355 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072527463 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072804891 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072602127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071917298 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064629977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064544029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064317908 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064156684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064427836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07013879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071860293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064210144 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082960672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06460901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064433789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072380208 seconds)
  done (took 5.872753965 seconds)
done (took 122.825830464 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181762768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163010706 seconds)
  done (took 1.644268591 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06578377 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094221688 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073420275 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125519904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063003849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096680892 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095858108 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074611749 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062773588 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.062693793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.062857988 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065138949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128315801 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06284889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063019097 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065569556 seconds)
  done (took 2.575247185 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.093813668 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.153999975 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.095391977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06155077 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092927992 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.069167444 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061138702 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071695444 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067696549 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.061434805 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069793035 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067412124 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061599803 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067058161 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067871645 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069575303 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061602144 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069431408 seconds)
  done (took 2.678181982 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098340619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.087925939 seconds)
  done (took 1.503646433 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158887299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1035451 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140563889 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34324063 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162593266 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229006749 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129801822 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125938105 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117638393 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12154658 seconds)
  done (took 2.946496195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094012537 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147514634 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.249495836 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111289602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068818755 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091008108 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.112291086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074463421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077170695 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076856619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076869997 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073163356 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095737279 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070395836 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070383765 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072402089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099030403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069390316 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071239507 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073380542 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095812445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062591604 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070391452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.06894013 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074108417 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073902139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062583121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062307455 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073611544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071602501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073866677 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09077862 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074099285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104130861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067612564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104663301 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073230403 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071237302 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071198956 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070765618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075664284 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075354447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.06896748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072593656 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.062291604 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072780694 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.062262385 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06231977 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074647171 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063629551 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074679732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073460935 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103264905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063439686 seconds)
  done (took 5.736828988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099149519 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10170216 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068451228 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107722487 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096463355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068963304 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097359397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090005549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099296598 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06657167 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064778259 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06711938 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079089373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07982161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109402135 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101247617 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070322634 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067981602 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100520234 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099375111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065192039 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090893548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086222303 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.09817102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064263443 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067584244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064683686 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066973804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073316727 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074899361 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066694659 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07740812 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081693371 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074882774 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063732093 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064802336 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064861049 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076859684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076359335 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075578877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074171248 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064711449 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064505932 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066347793 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066709642 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0659076 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075633553 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077128629 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076017333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065869958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066710092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064661797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065785244 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07669701 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074358269 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077726407 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07680497 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06496513 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065153487 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069176516 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077530164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076050329 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076103548 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06612223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076298899 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065118844 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077362996 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081732195 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065215619 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067084493 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065863749 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066371144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066488424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074573778 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075389101 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066396194 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0660073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064673965 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076528072 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075097858 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06433169 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073000108 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063483229 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064804788 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06586222 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065603481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074142183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075751069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065970832 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064336153 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064597916 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063907372 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062519387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071904831 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075073787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073530592 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073660895 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06474304 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073765088 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073580835 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065291404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074459561 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063636478 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065421858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065041187 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073495072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.199366842 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077220362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066900003 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065133302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075944786 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078312513 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065347356 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075720814 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077090941 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076606491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065131776 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078675798 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065032407 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076636271 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067093211 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077741809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065644249 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076806329 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065929025 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065760914 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065999937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0764401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067838253 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065651472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06644774 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067355202 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076556046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080388872 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066868733 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078787842 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076098715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066951498 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076310568 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066105194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076384738 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0663577 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066846289 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064325744 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079396446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065788002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065468209 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066191533 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078084984 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065095626 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07654859 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075766454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065663329 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077763295 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077309147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074193459 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076862493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067376647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065675383 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064908045 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066405556 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075341603 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076643336 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067706202 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066451402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075316164 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076217598 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063753428 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076132968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075106226 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075782194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064811076 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066035894 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077417866 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077753489 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075580702 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075338387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075282149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065717789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074810496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075257914 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064867511 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081733207 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0652824 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080131401 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076175144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073609222 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075576448 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07725167 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076644197 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076881512 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079284015 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064765512 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06456858 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076296444 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064485079 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065977543 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074518623 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065563235 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065340983 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078875808 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06437977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074876431 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063586702 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074239317 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062868623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065891673 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078497983 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063858955 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065615387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074674399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065357678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072752067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075395668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.203696397 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066812485 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068607126 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078039497 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076740253 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066063049 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065927552 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068260991 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075767805 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075234418 seconds)
  done (took 17.853750207 seconds)
done (took 36.260688705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204901951 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14741124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175630035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115215221 seconds)
  done (took 2.064522429 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11928377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097717147 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0919696 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06187258 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098473822 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062302726 seconds)
  done (took 1.892047242 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306972624 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209411374 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17859165 seconds)
  done (took 2.050867031 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194174519 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183473278 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390038329 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.24933592 seconds)
  done (took 2.48278088 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140200554 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08591967 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06380327 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079921515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13130093 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157126791 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098205617 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122685217 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075013617 seconds)
  done (took 2.363175765 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143636973 seconds)
done (took 12.353681034 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090937474 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161458801 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077436266 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.175830217 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073739496 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.199487558 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.224555598 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.181646006 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.078469107 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107978329 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186909005 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100142135 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.074576876 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192705619 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070459999 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103890918 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090899943 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191021944 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075824204 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087918811 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.228158887 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138881529 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066643745 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08551172 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 0.123182874 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.183310008 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132615411 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.173609 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.15317298 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092925237 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068467675 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.186042689 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15319318 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.146864687 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109887886 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.047942268 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069215067 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.048849305 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12586871 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213643122 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101625755 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.145580614 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068118576 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.134738503 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069287068 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106896458 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078536373 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.110418446 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.152448839 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062585479 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.058776008 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165977666 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088101213 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060717787 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.0856621 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.180527453 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078937915 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087626305 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161040206 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17929458 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125334118 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083513096 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069006622 seconds)
    (64/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.14241423 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.06814743 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149591985 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179369035 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.057001192 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068772654 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095296467 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05870144 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0754344 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063789974 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.087187196 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085865108 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070764706 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.146087895 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070962686 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075148746 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.048209215 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.151953223 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.082665916 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.068828518 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.224648455 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069217006 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07394728 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063391982 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147606023 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.064041635 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072853256 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066463668 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085881602 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.049704912 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201441832 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.048770799 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104553588 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.173826593 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135709693 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069299622 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164290114 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.096691788 seconds)
    (102/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079422575 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109313657 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.048718053 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065350741 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148175724 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.04854413 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062522395 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070112752 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184050655 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181597966 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073647612 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048271837 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068480645 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113232689 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.04927774 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172610825 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.069672067 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104169719 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132558427 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07752221 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.084234677 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062753884 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070466372 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063809299 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072275019 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077127737 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068373169 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07231638 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.048488701 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121814902 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06173289 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.130578541 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070607834 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062186951 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08224487 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.047941354 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.069095962 seconds)
    (139/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.094973771 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.057401418 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062655533 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067300329 seconds)
    (143/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.048549944 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090695751 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068981982 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048371664 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.049330185 seconds)
    (148/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06431646 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06935658 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069634365 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070594206 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.048125033 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072344811 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.061892497 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069340242 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086207189 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.128666649 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.155309027 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.08908597 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087194805 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.048004465 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083008466 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085060632 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070438217 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049261 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071192464 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063658878 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14617985 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063657899 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049165614 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067453803 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068534888 seconds)
    (173/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104709509 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.147974911 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061821778 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067789955 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06222932 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099110973 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.048478399 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.181460956 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070596715 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.049354951 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.048064713 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069320446 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061273813 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084744755 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153231778 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.143965062 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.103298288 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081569265 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068201458 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.047217718 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069170416 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.094392543 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.047044992 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130747725 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0604615 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.223867176 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 0.34596584 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049227684 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070129967 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09805996 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134664252 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105621169 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073129035 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08790699 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.087685137 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.063013429 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.061555665 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075939238 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062399761 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105538294 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048816056 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134511621 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062735701 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063458189 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.070570842 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070077811 seconds)
    (219/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068351775 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.059349543 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084964522 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.049277661 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170577884 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063499511 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059667109 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.04907268 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075048202 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06795984 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069033199 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062644279 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160894581 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.058294017 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.13899437 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066636877 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061698144 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.04838108 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.097044376 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061805062 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.049699306 seconds)
    (240/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.060114226 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064617369 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 0.135840303 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.127666325 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063863501 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061857105 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063059865 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.048203535 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070239867 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063197317 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072487403 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075653211 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062321393 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.049081815 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.049583874 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.068607649 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.061906767 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065318149 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065099644 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.047888933 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.08644518 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062104239 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.048059583 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068152391 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.064087514 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.058690376 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.06961805 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.058777971 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.048562132 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.082954627 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064947431 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.104234675 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063078499 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061767039 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066279052 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168401298 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062175421 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.050261906 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068041114 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.083604156 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10417176 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.048756755 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062590191 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.062464722 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063016619 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.048683901 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069697323 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.048444392 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060683766 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.049375452 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.060727439 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.048961127 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068758518 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.068945834 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086079481 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.047966178 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.049081757 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.048554929 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.048985732 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050034669 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072844195 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067239032 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061861794 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.048585708 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.047761583 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062989082 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.048368751 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.048209374 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06716335 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069739747 seconds)
  done (took 29.327455137 seconds)
done (took 30.69703564 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08163776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08961222 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071495745 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.088846748 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076832085 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07283199 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069058574 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075127015 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076276156 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078311129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074533127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051541278 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070594708 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070457037 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070919654 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087360505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074447025 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069519136 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069252131 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061128204 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069170008 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062175487 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063704976 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051534161 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074195842 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068450465 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.068851968 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070292233 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062249121 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062540415 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065651308 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069605096 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061882038 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074125402 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068589701 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069291932 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070790259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072787948 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063870112 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062563826 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070825988 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061965674 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069217018 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069730648 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068109375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067945724 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069468132 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07445155 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087293511 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064616762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07053264 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072175025 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07268428 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068828252 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065926135 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069545998 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067429317 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087082135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069686302 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064424811 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070001161 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070045581 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067522662 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069164646 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069053606 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071368188 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071299928 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0676459 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070553579 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067424475 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061674332 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068995668 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06512562 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061891894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072290932 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072967431 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061046027 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067660703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068395865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068019708 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061659606 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064120982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063528015 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067694032 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063580977 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.050715735 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065750416 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.067656414 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061067922 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069666427 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068062035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068489286 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063407405 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071670329 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061471675 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066911341 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061931842 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061685238 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063810519 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065864888 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061630013 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063993585 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070870671 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063091196 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067852566 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074689329 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061288163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068082288 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060857969 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061183501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075706424 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070516515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061797541 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064539712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061076108 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069280661 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061001039 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061450377 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061070705 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061503144 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066997145 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061150355 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.062888453 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068167233 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072409704 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060472633 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.064543866 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.062737572 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060383982 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.065750001 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060572244 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060570059 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062438248 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.056734664 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.062739387 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060526046 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067540205 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197632333 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070939684 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065003946 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07098246 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067377108 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068797646 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067452965 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060968562 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.054899381 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064890635 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064138921 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064617581 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062213452 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063887379 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06189717 seconds)
done (took 11.865754725 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063022898 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138654703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094691737 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092357134 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081808425 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063099173 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072377124 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098128887 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064143932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098806677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083818788 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081318505 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108618359 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061054656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062165837 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06629332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063845646 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077729575 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097558927 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082897952 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111916976 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062177867 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090705458 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086116355 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083231956 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088449896 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062983344 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066474454 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06595949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096447461 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082298894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066454616 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063179852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096819546 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089222169 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079557179 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063380952 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078978852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063020232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062677405 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063844213 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094263746 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07622034 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076958311 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066266951 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065851991 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063558842 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079654133 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0851898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075319896 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082918075 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098785044 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064931055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062657321 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061359744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081790594 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061720579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065545765 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062640511 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064992389 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06253439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066018333 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077677812 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078795318 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06643274 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076927262 seconds)
  done (took 6.540313764 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079332374 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08640375 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080389977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079540628 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062223863 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063078527 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062959106 seconds)
  done (took 1.989873465 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063855957 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084838644 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085001307 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08518969 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080794552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083626621 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07217298 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063074034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.076765212 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064064429 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083588038 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098635371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.063569768 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.069344463 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086994751 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062803977 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086415108 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063306842 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.065610992 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086353193 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.064704829 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078488076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066229781 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06300041 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076986171 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063122797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109098442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067178269 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064309077 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065924868 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.060926836 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10284283 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076884029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.071928952 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063147997 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077668691 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077301007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061621839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079004426 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067888947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077194655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063479302 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064076587 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06150142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067928205 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073378675 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064685257 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064643957 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065821847 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082699181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063572416 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076055896 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06631474 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065445391 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064408919 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067319966 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072745091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063882243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082662731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064784845 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079801306 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079199534 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077223701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079728777 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065604618 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076835534 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.076778762 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065814595 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065185884 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066693402 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079171815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061543297 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064940328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073934723 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065400352 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.085835841 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.085926331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064253923 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.071977494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063447868 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063349172 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063148547 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085535596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065884952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063006086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066963193 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066219231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.061645116 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062204943 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066400832 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061248083 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.064822433 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065940672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065976687 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065724556 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079084219 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064885235 seconds)
  done (took 8.404516234 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064976814 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064713387 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066358026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064288544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064559063 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064134226 seconds)
  done (took 1.889543506 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08934935 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066337252 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077456785 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069116249 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10107288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082779229 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083039217 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074894549 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079818974 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075294288 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082937882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084588307 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08887546 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069530259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083063435 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06829011 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083279108 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072213244 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074403931 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069330261 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082908902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069560494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069823116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07801578 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072167269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0687154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063556758 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075211228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075310048 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075105635 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069195796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072306779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06728945 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074878455 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083611821 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067024661 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068670016 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074011486 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069226049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071829688 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083965802 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069639723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070922368 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073864415 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074772714 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067502899 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073640321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072398137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08273874 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073708997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073790937 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068181365 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071430482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073417474 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067145699 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075103704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073667273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083102624 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068970322 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.067276803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065623933 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072016286 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074438593 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07170357 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075350539 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.0733307 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.067151063 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069231459 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069470203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068685105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073940797 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065678038 seconds)
  done (took 6.814868235 seconds)
done (took 27.102144005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539659847 seconds)
  done (took 2.007387122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.593482502 seconds)
  done (took 2.084336241 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.531594935 seconds)
  done (took 8.018392988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390983114 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486985008 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.679001484 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126516096 seconds)
  done (took 3.203086509 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676242208 seconds)
  done (took 2.175183155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.203217828 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.190813969 seconds)
  done (took 1.902322095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368463203 seconds)
  done (took 1.85642885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.084604052 seconds)
  done (took 2.57347595 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257676737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159092907 seconds)
  done (took 1.909646994 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452778649 seconds)
  done (took 1.94289828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.811609992 seconds)
  done (took 6.302566425 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.201504133 seconds)
  done (took 1.742519876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235313515 seconds)
  done (took 1.7309358 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.674007147 seconds)
  done (took 3.168321204 seconds)
done (took 42.111667031 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076553773 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077924472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.077478267 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074901525 seconds)
  done (took 1.786490011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073404187 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.06943263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073305423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069725684 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07284253 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070023157 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071112849 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073723874 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069094909 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069574222 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069488905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06908922 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071493902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071001708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067707758 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071622101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072706973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069325077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072521292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069181921 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067472608 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0712567 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07155428 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068778393 seconds)
  done (took 3.18910724 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074339081 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070184162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071667077 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068889545 seconds)
  done (took 1.784884615 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074610848 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089295249 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085789155 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074069942 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08862606 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082993841 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066239083 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065813223 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069945764 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073758017 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064767345 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092553151 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084553115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07367087 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0757756 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06293526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06512764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08356187 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07381637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074533805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067153259 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073863887 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064827609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.085055981 seconds)
  done (took 3.309795558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074152261 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099997401 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07487557 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085156134 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08657826 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062414744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071333757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086139073 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119886798 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06205087 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067091197 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062499473 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069412501 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062247951 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072933141 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101669957 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10557059 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06518208 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092167436 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062368292 seconds)
  done (took 3.091722445 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069990796 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066665755 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.063177859 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065317155 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074920046 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070030351 seconds)
  done (took 1.919609388 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064793087 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064731256 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064102567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063904266 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068171988 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06392002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062621956 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064225668 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064228035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063996957 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063372126 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062678659 seconds)
  done (took 2.275842289 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19195899 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065292027 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065904243 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062458241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067304872 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063310003 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076458574 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065093138 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087254666 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063441153 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063346993 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065146504 seconds)
  done (took 2.444070064 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202270713 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0731942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232477301 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13308391 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109223421 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112177241 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100181439 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110053983 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139846658 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098852416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164491118 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162016244 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104299064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133638072 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086148383 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09414878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151941712 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158989817 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100740641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162346187 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141128658 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121404754 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14397371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098082293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102569753 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119007443 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068409394 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077231496 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167220825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128045847 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143348234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107527971 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090080054 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171588822 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166329825 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137886731 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130622567 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080639431 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099174657 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129366782 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196331727 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088015329 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158674222 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102574399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215015291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131194335 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117731635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117135656 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104290059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087110952 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143281612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178539469 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135068877 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084082921 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109125758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112921011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113054437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100673497 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179779181 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157650453 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12427726 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073758691 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095941275 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149045929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129818929 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105760121 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123292292 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090413817 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13043953 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150888992 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115610122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141340118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126364941 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085703507 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115928435 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136513839 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125257723 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166747526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120665105 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069484465 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120849467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099713385 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077667841 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.136906354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071787243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171001239 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094940771 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10284024 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109986103 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105197306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105331704 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157071134 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138594096 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097403726 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061534026 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241187834 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118654188 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146046284 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084464183 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106236807 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11383011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075239925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136486322 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.071965559 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121297081 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.072310856 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122390184 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129749438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073265358 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120242973 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098023855 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097255538 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129819365 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156850222 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085744748 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079442433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162685993 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119011757 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101042228 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14137829 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152291596 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.095969962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099552916 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146722375 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177653317 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085975005 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159179223 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104462806 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081306308 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084124315 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121254314 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109499853 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119140451 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079137558 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114780945 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163547214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071583676 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091308426 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129386233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075486688 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07754219 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099626786 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096729862 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091549021 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096524875 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100443115 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133660874 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119406021 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100816638 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119748337 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0932254 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309504473 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087176496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098195916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100619537 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067112392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134202907 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154040343 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077207289 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162174636 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120636699 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102542474 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116353919 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080082823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137585778 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075833124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068105445 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14129453 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108217574 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107132151 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148092406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102819905 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124198789 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117543766 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131645096 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129588167 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12591214 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102119138 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085002065 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108997979 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122868356 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070271112 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088125737 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077375539 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100823749 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092512643 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079795206 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139382603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121542582 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096792551 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108842541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09358033 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143143464 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073083658 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124933797 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115513958 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090538645 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147895831 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148269669 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127543259 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095723634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140966562 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06675822 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070189489 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085515983 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118016406 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078224495 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078934722 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257256769 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144888244 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126077546 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134334265 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109006187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117720222 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151023271 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066769077 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113323999 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144218035 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118716697 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100602796 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087733039 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096595005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139169637 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1051011 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179236007 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111558532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124150977 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149437449 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096959927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076692494 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099542725 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133220195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101536837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141019247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096202783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08531201 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10722893 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071482912 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096647531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124099376 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1165749 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131999828 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111406329 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129699079 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074187545 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11368406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117262248 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118663102 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060758886 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115957303 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157061423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090321029 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114979575 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149196286 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076415171 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121021119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171598551 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139892207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081015519 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250198739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116751429 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126214811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117580067 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137867979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106781457 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132109167 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106100549 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083099149 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085277484 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093809396 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102169362 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091560184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105056769 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112237774 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092246459 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12839422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100990821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106941258 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115117985 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09381432 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.086527058 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094199988 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170685086 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116808661 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168200896 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096204273 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142332612 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161673165 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071896768 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076430874 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075248844 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136409674 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080392293 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127670174 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.094329397 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102753087 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121191404 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138744749 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091950418 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06565991 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105565747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130414134 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108546455 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094505955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100380727 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158528188 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096741387 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076061435 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109567938 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101295025 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098633846 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168263002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.058219644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093727967 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072398456 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076852709 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121184511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290950038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078115743 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100510408 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116491734 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108339216 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125226669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099047914 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096092764 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111551897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145928563 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126193418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086820643 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10975208 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125995707 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153683868 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101776022 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092875299 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168828582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148697287 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156990537 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085700356 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111190038 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11132233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105753349 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13592929 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081109935 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163964674 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079135745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133674843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101249835 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087295466 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127078599 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095443289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102521486 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144675239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114355074 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079762922 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075022223 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114798002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116484569 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102852508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071984694 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135226963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070034962 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128200622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16437781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078069027 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100963115 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092403194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076463001 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104019417 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098841343 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085679226 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.233942246 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173183614 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085991621 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147241973 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139941929 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111428457 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13503329 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096632164 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632965181 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075642354 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149841622 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114068067 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170296781 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094808512 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115293059 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10782689 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121724566 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142119851 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101965048 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173009771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129557972 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112874558 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076831276 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099895005 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099860886 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086118298 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101844296 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110243246 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113426328 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090670351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112750783 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119910537 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078741485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092288044 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152395037 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113766511 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140320352 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137143896 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081665294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114233425 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134868245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076696654 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11799958 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148061072 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102425454 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094541266 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076630224 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09837118 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165381203 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069446065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154340788 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259893804 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10718368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11161803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112248893 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128687644 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104735973 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118385916 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091030246 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108189637 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108989631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078629921 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075180771 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101689365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110263063 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094613922 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09552844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095307593 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148695158 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068914735 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092391791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100904877 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141919563 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172052813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084880757 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079399474 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115957541 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110738422 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110845206 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117279603 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076239688 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079493227 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078641886 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073850076 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10473923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109331109 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101119902 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108366696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160513072 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079880275 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218499694 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092093928 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101474358 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066432222 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075459679 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09264931 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094193434 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105446828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097374496 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165883657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091619261 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086696004 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089429752 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070152767 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079421184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123930469 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106010784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113989005 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092942425 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058958353 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104304556 seconds)
  done (took 57.149773846 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107317267 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080554724 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095070131 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14760791 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120225757 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209384093 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154182522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196428398 seconds)
  done (took 2.760260558 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065280912 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.090737166 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097034765 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081531767 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063937571 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067135519 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221574584 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078959394 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063414995 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085243642 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077097304 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067046828 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416796383 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06286708 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065845048 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060633598 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06412783 seconds)
  done (took 3.345116624 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363143668 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595338025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369076197 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070306472 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.457572196 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085599197 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.086796441 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.123874495 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070515936 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532532132 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706930183 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12339415 seconds)
  done (took 18.20991032 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07239935 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.066628422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080849508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080967123 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069105929 seconds)
  done (took 1.993131399 seconds)
done (took 104.806395796 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077284896 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372880465 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050829297 seconds)
  done (took 2.074251028 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079559476 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081761328 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081166865 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080256834 seconds)
  done (took 1.956681701 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071438363 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073757982 seconds)
  done (took 1.772366551 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221579526 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154935459 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083500953 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079487022 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076199068 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076127817 seconds)
  done (took 1.863902337 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069725132 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072153275 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070077928 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074284177 seconds)
  done (took 1.913566663 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073356534 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.049226861 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052676048 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.053213823 seconds)
  done (took 1.857654881 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083476371 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076165481 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075311322 seconds)
  done (took 1.864722897 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09777898 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081918915 seconds)
  done (took 1.807420971 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078573178 seconds)
  done (took 1.707806481 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095542108 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111698 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12839691 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106857242 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135335184 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105654449 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08245367 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083316721 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074433032 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083950355 seconds)
  done (took 2.637756452 seconds)
done (took 21.615005169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074716026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363647059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357656355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08598491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665550507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353614938 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.979373482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089179036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110826503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064655498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0811158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645908877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97074991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316669287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956146288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415124928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648248916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065088156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064920444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064881035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962680768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064231013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064537602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064912422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645402863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368005875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065172425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.416332886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064815692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066587424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35177201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065318123 seconds)
  done (took 16.189673037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067477942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114454156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070625083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080940652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067345717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066647498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068601836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066368977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116625155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064879872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081231018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064625962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068335085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065986504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083902856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064858368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065428551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065172055 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065532109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065202258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083058019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06423481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065046141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06504153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064527235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07629622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064867627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064632861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065213512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066414629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067885371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065446789 seconds)
  done (took 3.925430424 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111771451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122229916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07123284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100271892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1090354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066996305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140000037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08910007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124129787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06529733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081369601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064781241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097749827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065858505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084842793 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065764488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066214529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065782225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065567732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06538712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084296721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065288527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065854562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066096499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065603307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078360834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06548898 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065676018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065771403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067113084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068693682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065935191 seconds)
  done (took 4.188299705 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06928346 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072081711 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079146412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080493796 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066279209 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068251565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069686572 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066724773 seconds)
  done (took 2.211964052 seconds)
done (took 28.150370139 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075610071 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066191571 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069470987 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078291065 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069969816 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075306849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064250361 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071449654 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069149202 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069822128 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07190627 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064460592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068351906 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06430968 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070697777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064867398 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076267557 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068933471 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07551594 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07597969 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066852219 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07069003 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071243133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076028363 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076735719 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.075969098 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074493504 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.06973658 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066488511 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067924257 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073471187 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080755548 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.066030976 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.076184508 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065205709 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065468626 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068622699 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065289527 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076101175 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074153942 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066953383 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073604016 seconds)
  done (took 4.598296602 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084801658 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088159284 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081262733 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.057851817 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.063041938 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061294223 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084775318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05619501 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056249691 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08443843 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052716541 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056219112 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059557366 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.051169785 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056551705 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053913367 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058207737 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052982067 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056196965 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.056446708 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08548272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051169224 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074160267 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059733341 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055812719 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058404683 seconds)
  done (took 3.304377734 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071435376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080547084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085344107 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123059446 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100557448 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073470327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076566387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089328572 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.081751876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063933088 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068088592 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090788634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085223201 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071034417 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.064661472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082092219 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079715639 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066021255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070468067 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089491487 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082593692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082565048 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089922947 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078037074 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064380914 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066910328 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068533586 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078569155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069278501 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073672106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068517775 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068119337 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066748854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07579973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068777687 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066453227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087838253 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074218505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075794283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06529306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.068288519 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065769295 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088918225 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123632097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064407481 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072652659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072681612 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074068342 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064954056 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08334347 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075656621 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064397909 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067552163 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06370175 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064463248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077716172 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066508489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067106317 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073594606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067329631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086410436 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068290189 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079662803 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064007435 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072089594 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063762957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06522682 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063516852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089555706 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.065810833 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.105260298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065617848 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065401103 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073296419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072148647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081538393 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064661346 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079839841 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074570837 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06800165 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072987649 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067471238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067132778 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08468305 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066665517 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06620354 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065513929 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070882477 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067267218 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066076795 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07718714 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064384002 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067597744 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08093641 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064182286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065571008 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070633612 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069816569 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064173269 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075601246 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069537802 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06484328 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07358155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064588767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067018834 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075780434 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070260879 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063547098 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068549677 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070440122 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064640321 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065655896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067257063 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066104241 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072215314 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070592106 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068658634 seconds)
  done (took 10.229990496 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157407672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150250581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06777193 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142254151 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073052323 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.076181212 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144039298 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.091646935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065058036 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065020145 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065966442 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106877693 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102285419 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112164114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075416243 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064153302 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.080484192 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110790812 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145311571 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.13899887 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080529188 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073934474 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066918196 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066341576 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067975891 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075340092 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082100112 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073537683 seconds)
  done (took 4.309352646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078571937 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093356689 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071943998 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085859888 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088025099 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064682204 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067017496 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066977994 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077080459 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075730785 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064842926 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070201968 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071548626 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068189444 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065220537 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071641783 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071611297 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066421457 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068537659 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070029046 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074270925 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088008681 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068490852 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064017635 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069615187 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064139566 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061633775 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081448273 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065136818 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088312037 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062846386 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072439325 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078954404 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065370637 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064526149 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064222309 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064591229 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064439456 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065998418 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063539572 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06355223 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054615238 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064147627 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075982695 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070568933 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053360067 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069653596 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06955615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069609447 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062241086 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06701173 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066960653 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067122503 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07136425 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069467765 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070007479 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065510188 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070791085 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0720237 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064282908 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061203291 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063110876 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069306048 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062813596 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072252365 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06910852 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063417408 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064288791 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066015066 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070443352 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064144237 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067409892 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06238079 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066571794 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068877905 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066120679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065599565 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063196723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064244165 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064746576 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052566176 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064348644 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050441462 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067427131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062993041 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06319907 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064439091 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069306847 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077320127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066194837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070029934 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065441564 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063779184 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06737436 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.057156088 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067303638 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079588962 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079389938 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06447911 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06295744 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078802367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069448653 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063750495 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.052972776 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072015424 seconds)
  done (took 8.835458648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086644555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067054611 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08099607 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087609431 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08292643 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07168584 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073678535 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066745206 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078769843 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070529422 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073406569 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065063962 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073876151 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073543725 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066900083 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07365572 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069006524 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.07985168 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078934309 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06520111 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072860797 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076847715 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085784683 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07711284 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075346071 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077215858 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.085982628 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069436313 seconds)
  done (took 3.79887919 seconds)
done (took 36.708520492 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727318605 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.902992646 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.725049346 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.067007157 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.992177829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.816051515 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.821356724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.719323714 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.056967964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.761006032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.005507763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.785766728 seconds)
done (took 65.03898319 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.748490023 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.861839788 seconds)
    (2/2) benchmarking "String"...
    done (took 1.990888009 seconds)
  done (took 5.515913724 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.036947712 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302206951 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.953968372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.718889487 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.725782334 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.952462551 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.522394696 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254466791 seconds)
  done (took 30.093264416 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856612502 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.961398754 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.39917772 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.438781217 seconds)
  done (took 15.365241169 seconds)
done (took 62.507443635 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.740879375 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.726620889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.739298432 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.703646121 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.779237362 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.727007205 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.047693385 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.730856996 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.719110474 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.713739914 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.723709049 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153066965 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.737608843 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.043311191 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.72129539 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.727404009 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.769656971 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.178957608 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.878176075 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742145535 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730783659 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.753730934 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.724671919 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.729627152 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.740425734 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.723954482 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.157359734 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.725505093 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.349144307 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71986821 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.750314934 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.250422068 seconds)
  done (took 202.319757699 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.718936707 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.718703472 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.765063844 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.737452371 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.195319433 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.900014713 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.834512573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.212041253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.723785918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744911384 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.838743326 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.7212971 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.851106469 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726709524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750450296 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.822588058 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957558329 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.854369336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.75064733 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.882169143 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.737949818 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.629098086 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.603670612 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.822749938 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.74807932 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.733044553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.890771461 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.732499907 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.915383331 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.947806669 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.725832979 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.752880119 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952685674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.593841998 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.740874905 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.724535397 seconds)
  done (took 167.618809043 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.119913688 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.723214591 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.72332028 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.720872464 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.733009835 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.721470101 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.845006037 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845590209 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.186859134 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.173595892 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772776032 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571042408 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.723197576 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789506551 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.734454887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.721252095 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.736767038 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.752578577 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721523409 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72181765 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847483227 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.734410136 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.17892222 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731562598 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.722637001 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729822361 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.092847436 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.721507019 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731677018 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.985847442 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.723673026 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724800501 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620209271 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.573479509 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81620959 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.724398769 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730180518 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.72312942 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.944460383 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.723657751 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.724339899 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.727398741 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89920884 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.723462725 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847678199 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.723798541 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233465544 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.725388051 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724038965 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.487997415 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.425068685 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.725623924 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.723455756 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.729017682 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.72598065 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.724944187 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724040221 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.730741343 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.507103673 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.798164203 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.724114217 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.725843202 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727282047 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.724047502 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.831239351 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723840938 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.142997792 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.784413875 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.94026298 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.846330557 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723026654 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791462787 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815331489 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.720525895 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.727314937 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.72394034 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.721258454 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.805207436 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721073898 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.883860074 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73267417 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.72703102 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774687098 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.795554674 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.722499047 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616618736 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.724281024 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.724251604 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.057356337 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.792079086 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.723528803 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.725074573 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725803817 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.880603042 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847444518 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494281272 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724364927 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.491194826 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.737012623 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.729309143 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72732269 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.876909747 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7270402 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.917447036 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728622524 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810201998 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729718481 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.728433147 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72864249 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.727832096 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.727508673 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760478711 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.729963139 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.787387984 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.097264897 seconds)
  done (took 397.360772368 seconds)
done (took 771.138649165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417056297 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.381616038 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483148755 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.400120453 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372148278 seconds)
  done (took 13.719966036 seconds)
done (took 15.386173018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.81709038 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819967055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.752434598 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817170621 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748243131 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.820272322 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.799365129 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.754077813 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.784031879 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.754944836 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.791516135 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754346676 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739550816 seconds)
  done (took 24.82441878 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958683886 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.963657366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803742497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963579572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776657571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.96867031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892663992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883037351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882090911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746008346 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742938752 seconds)
  done (took 22.251686919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96952753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976691262 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.808690882 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.967695357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.781975734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964263413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894565035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882927723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880874625 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748245923 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742177858 seconds)
  done (took 22.285632895 seconds)
done (took 71.029646369 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.737764501 seconds)
  done (took 3.405646527 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.761584628 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.900014805 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.746730087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.7422107 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.737630163 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.738199283 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.741707326 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.737249319 seconds)
  done (took 15.775096635 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.739501489 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735143194 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.739651639 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.739268873 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.736060174 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.738368826 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.73700671 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.738544858 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.737376113 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.735998167 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.740745439 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.735402429 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.739732672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.741599874 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737843598 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.739892431 seconds)
  done (took 29.486745456 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.738965821 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.737283784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.73756522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.737932889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.737903109 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.738994907 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.738759809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.736470185 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737523315 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.738597484 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.738355407 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.738601804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.737527765 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.73672132 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.738241825 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.738549742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737836496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.735476586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.741396124 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.738312464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.738935088 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.737211948 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.743632396 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.738668232 seconds)
  done (took 43.396266961 seconds)
done (took 93.732891353 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.642052378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.166837429 seconds)
  done (took 8.480108303 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.742999397 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.741514436 seconds)
  done (took 5.201635739 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.746549326 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741873451 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.74157094 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.741622701 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.741455604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.740968448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745418324 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.742416273 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.74261181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.741111367 seconds)
  done (took 19.098141419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.744027516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.739713265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.739310026 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.742765432 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.741526452 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.739316879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.746702449 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.74276289 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.742449637 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.740424056 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.742195578 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.738341878 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.747412215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.740418405 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742398894 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.742843006 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.741328575 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.741830105 seconds)
  done (took 33.029486097 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743011698 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.742332352 seconds)
  done (took 5.163341218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739746241 seconds)
    (2/7) benchmarking "second"...
    done (took 1.744935833 seconds)
    (3/7) benchmarking "month"...
    done (took 1.738814039 seconds)
    (4/7) benchmarking "year"...
    done (took 1.740420981 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.740675787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.740566642 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.739745614 seconds)
  done (took 13.858374893 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.74387198 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.90193972 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.971337102 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.411286643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.747197895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.745870092 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.676205033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.747279733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.747459468 seconds)
  done (took 19.369413698 seconds)
done (took 105.872003166 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.57616323 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.738956038 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.117004841 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.801202501 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.801962013 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.079042146 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.774029647 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.96203521 seconds)
done (took 42.524878922 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.829922625 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.288252744 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.336784105 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.974000547 seconds)
  done (took 12.277293012 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.723606161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.260026685 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.780292741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34416053 seconds)
  done (took 19.798305336 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.107947508 seconds)
    (2/2) benchmarking "read"...
    done (took 2.115512736 seconds)
  done (took 5.904602783 seconds)
done (took 46.486210047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744443346 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.746325302 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.745271995 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.743145798 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.745483905 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.748194838 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.743483783 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.744583111 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.743709585 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.745143799 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.741488409 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.747874061 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.745410841 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.744205217 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746142176 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743932991 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746467769 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741813352 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.741351259 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741300901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741564739 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74364181 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.748185504 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.74270145 seconds)
  done (took 43.54653381 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.745659307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.74285542 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.74307406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.749677957 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.741959183 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.744719857 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.745859558 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.74344186 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.744435135 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.749847082 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745279858 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.743424861 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.747337292 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.744981777 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746472439 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.743455587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.749061624 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742859945 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747352008 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.744518154 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.748580292 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742650821 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745847252 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747788341 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.745358361 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745966766 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.747423544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.744781845 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747251566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.743510582 seconds)
  done (took 54.042192837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.753027136 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.754217319 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.747244048 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.74787165 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.74805275 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.747317072 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.748885579 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.747647182 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.74777023 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.746538511 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.748334654 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.747622127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.747877654 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.74820731 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.748543567 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.748115272 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.749412532 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.748359303 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.747792597 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.74810916 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.748489893 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.749691707 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.747546966 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.748912078 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.748282494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748567885 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.750372993 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.748122447 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.749390236 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.748091361 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.749661646 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.749282686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.749012165 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.750259659 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.749843618 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.750006081 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.754585814 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.757536088 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.749681995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.750676207 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.747544013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.75161144 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.749973812 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.749113496 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.749170333 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.74896359 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.75113102 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.750596727 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.750886333 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.75116813 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751200881 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.749649099 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.751757438 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.74893085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.750137254 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.751372859 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750240589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.749959019 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.751548663 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.751724487 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.751901835 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.751877275 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751385104 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.751116712 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.751938716 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752535771 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.750126781 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.75017815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.751533648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.751266365 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.752407874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.751009377 seconds)
  done (took 127.672077309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.753005013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749371887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748834702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748624668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749952132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751067339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748154025 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751631652 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749826817 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750539243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751394729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75022291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749609361 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752464176 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752242686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.748656618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752433964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749727794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.753297854 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752540035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752545858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75119198 seconds)
  done (took 40.199930501 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753261315 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755373768 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.750990351 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750668967 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749646263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75453082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.754724496 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754528345 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753917747 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750517831 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750071706 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753095878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751094799 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751715473 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750184254 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751437775 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753420786 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750715335 seconds)
  done (took 33.224168705 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.751737427 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.752612361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.753844284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751220499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.751781103 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754557049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751922817 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.753939648 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.75475998 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.752530578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.754687416 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753174186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.75628034 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753080734 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754081666 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753810851 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.754919256 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752421012 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754575761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753108977 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752055435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754220413 seconds)
  done (took 40.259609868 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753978897 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755160192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.752671952 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753151698 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75236639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.755505205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.754367015 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.753132673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756785235 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.755977574 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751879854 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755337603 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.753200979 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.754488675 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.752756349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753019228 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754739723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75522766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75575199 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.753838384 seconds)
  done (took 36.769444086 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756130103 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75725158 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756673714 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75628066 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757790493 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75539071 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756038616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.756649233 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757639813 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756927207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.756207369 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756838196 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756160617 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755702578 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757803279 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756254042 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755651334 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755143742 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756074721 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759968573 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75493805 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754410119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75529635 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755839941 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759349073 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753304516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753439739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754369018 seconds)
  done (took 50.861930728 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75412056 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759585686 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751778572 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.753380562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.752204454 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.75255241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.751663343 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.755067195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755054757 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75232723 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.755837289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.756403469 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754371375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.755735957 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756431666 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.755591285 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755789552 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.753077202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754390835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754192777 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75556944 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755796717 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.756230915 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753046421 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756616514 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.757001424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752030392 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.753411824 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756134648 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755695267 seconds)
  done (took 54.326617683 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.774656391 seconds)
    (2/2) benchmarking "in"...
    done (took 1.774200941 seconds)
  done (took 5.236148951 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.754207106 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758471879 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.75188571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753075234 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753662806 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.756647732 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75733506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754187971 seconds)
  done (took 15.72589641 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.755220026 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.755833659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.756486649 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.756678282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.757217689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.754284573 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760258522 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.755710415 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.756344383 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.755887077 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.76606423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.762166252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756716036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754188338 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.753949464 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759588247 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752189896 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.752628144 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.752047463 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.752330958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753786051 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755491855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754115851 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.749091156 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755714155 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.762019785 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.754866556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.754424144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751608212 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.754489618 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.750922414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.749570141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.75352712 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.75252752 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.751812871 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.752121844 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759416152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751244567 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.757163204 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753148922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752451101 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749514767 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.752969499 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753343675 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753910863 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.752163427 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.751989961 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.748454596 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.751046347 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.755456378 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.757751894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751391004 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.749401744 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75593998 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.752995463 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758930084 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.753990121 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.755401599 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761764068 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.761701697 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.766254433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763174659 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754138197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.753194337 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763410997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.776556675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757385045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.752228527 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.749879409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.752745793 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.758547507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764804878 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.763964156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.753705187 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753902011 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.752233136 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753730459 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753267334 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.760752408 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.755655726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.753726851 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754323975 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764249394 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777063577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.755202595 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.75414144 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.754658369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.754490476 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.754952352 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764820929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.754475414 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.754103286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.754501728 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.754280363 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.754659768 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.756592426 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.752788685 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754502548 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.75164801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.75508277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75517868 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760113926 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.763495556 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754373025 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755634509 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.758570384 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.755400601 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75422821 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.760553659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.754576004 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754343859 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.75631192 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.761515925 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.752261838 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758197903 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.763546719 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.754696996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.755813592 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.757148191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.754457375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763151091 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.779032452 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.75466181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.754985846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.752760741 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.763913554 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748389702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.753531339 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748241992 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.748313122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744560203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750157064 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.748260423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749546432 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748655275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750860744 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.744201635 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.747732599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.74857058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.748756678 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.749736803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.749367169 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.748578909 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.7488151 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.747621671 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.748221991 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.75285019 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.747604579 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748455828 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.748168075 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.744137654 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747443944 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.749518534 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.747841884 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.747238147 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748785819 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.746792056 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746832344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747657392 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746963116 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74750437 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.747860813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751109109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.748193803 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.7507737 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74609443 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.743907518 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.745535041 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747007255 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.748388252 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.746622445 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.745863531 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.75037861 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.757340717 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.74711224 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.748573742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.749386968 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747930632 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747522227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747996415 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.750740708 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.755578865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.748018 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.75256301 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.747622146 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747640488 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.748216672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.747975583 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.746370677 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746351964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.750347653 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.756533229 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760666604 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756175332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.749344291 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.751840286 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.749355744 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.752563662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.752684294 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.749028621 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748606707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748805652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749110313 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748729467 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752387316 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.748458725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747780783 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.749371435 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.748966637 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.750575001 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748429064 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.74989596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748408414 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.745941071 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7484631 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750236914 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.748103228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.745585316 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.746569844 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.747677735 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.74816054 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.749756402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.753380661 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.744484683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748525653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748790636 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.748570375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.746757821 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.747547959 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749077306 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.747091647 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752701169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.750241842 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.748103091 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753058957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.747093444 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.746446254 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.749534104 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.747597071 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.744960025 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.749875854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.755883782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.746113854 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749359446 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.748877659 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746631608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746323045 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.750895576 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.744288 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.748599648 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.746946379 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.74751641 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.74416805 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.747627368 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.747722178 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.74929642 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748802685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746650683 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.746092491 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748073285 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.746697762 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.744828075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742603243 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746403902 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.752541787 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.747594196 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.747350536 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.745790583 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.746398414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.748263743 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.746608457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.746895589 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.744724867 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755890805 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.755800732 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749044967 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746796109 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.744108961 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750950401 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.746865139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.750787169 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745745135 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745149955 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.745739868 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.745104612 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.740863538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745341773 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.744943473 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745426348 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.745569451 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.747133394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.745206585 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.743218473 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.744571846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.744431125 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.744479107 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.740854569 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743158652 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.746482768 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746532801 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.743026103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.743587629 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747090453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744216173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.742847502 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.742773715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744704801 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.744876744 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.744932564 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.744952094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.746409748 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.751421062 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.747859336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.754327179 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.743777935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75164982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.743068081 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.747006417 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.753401341 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.740293318 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.742181926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.744565913 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.744346728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749961552 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.744511577 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.744431835 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.750366847 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745136471 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743287291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.743670473 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.744091978 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745809693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.744031432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751302332 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.747912626 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.749784784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746956973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.740816768 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.74444686 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.743585397 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.744454635 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750156457 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.744353583 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.742069207 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.743380334 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.74290957 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.743075867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.744741187 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.741714062 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.741689515 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.742645698 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746496192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746063109 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747684076 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.741375519 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.749059846 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744413519 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746579802 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746041834 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.742021218 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.741714017 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.74177211 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.743136693 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.741476805 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.74179033 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.743373401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.740108366 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.744357404 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.739780562 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.741093909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.740822647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.742989592 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.73947348 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751264828 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765194523 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.743459972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745331515 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.739286838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.743335823 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.745333628 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.738937152 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.742102629 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741847461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751462372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746871613 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.741345495 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.742710668 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740888588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742091043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.741046794 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.740691318 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.741910382 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.738718006 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745275889 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.738318543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742719614 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.739003063 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740547423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741321584 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.742329798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.74817377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.741405089 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.740701652 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742545575 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.743261164 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.740900902 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740513223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.739483225 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739233497 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738238841 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.743137018 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746088847 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.745609059 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.74169606 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.741031206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.741013292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.743989332 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.73943641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743000585 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.740500141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739662378 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.742838526 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.739576986 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.738803981 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.739131594 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.740691973 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743156688 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738757078 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742264225 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.74527617 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741098538 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.737022022 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.739677854 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741937289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.738895945 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.738592321 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.748149697 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741834545 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.747845504 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746191442 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743173762 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.738571034 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741054443 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.745204996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.741444112 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.739342698 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.740132409 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.742032378 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.739202675 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.742084848 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743921221 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.74361505 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.739790558 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.738958982 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745861402 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.743095322 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746651272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.740083146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.742120922 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.73765691 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.738090999 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.740863516 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.738551138 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743835135 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.739110617 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74097972 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741035678 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.741778169 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.73978392 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741320993 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738666842 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.740271683 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.738081882 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.745175337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737260052 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739084728 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.738729058 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.7404744 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.738767579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.745948522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.744680012 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737217544 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743188565 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.740032175 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743324631 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739104439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739926197 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737483393 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.736861535 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.740594389 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745291189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.740127432 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.742258354 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.740690723 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.741544543 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.740280036 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745609529 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.741876933 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.748939757 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.747869393 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.736825996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.739067 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.744426675 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.742911529 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741401656 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.74038127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739934181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744663375 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.738552663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744166157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.741367231 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.744507204 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754864281 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.74483371 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740752062 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.740416456 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744894534 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.743896863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7398388 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.743805074 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.74444227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.742525777 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.746121072 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.741696561 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748845114 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745644229 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.741500647 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.744439732 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.746483136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.747659136 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.746744408 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741917114 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.74317941 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.745157519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.756678899 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741919138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749941248 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76962228 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.743228846 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.745187975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.742285571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740913006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.745868544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.746413974 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.741287914 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.742342165 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74518576 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.745474855 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.743238589 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749070583 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.745336542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.743064828 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.741072516 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.745847783 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.744798367 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.742756372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.745465638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.743001833 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.746446503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.746928637 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.744335977 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.744124436 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754639086 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.752231634 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.743003139 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.747387262 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.742775455 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.748255352 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.746867508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751522427 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752847442 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.74571777 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.743663144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.744493939 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742640907 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.741639077 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.749233243 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.741376555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745669637 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.742511801 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.755616364 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751008654 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.751022558 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.745037897 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742661357 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.74572237 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74729334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746820211 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747111129 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.745371649 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.746579262 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747842561 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.745425648 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.748062142 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.746647988 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.752031543 seconds)
  done (took 1043.327894552 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741984027 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741545211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743242437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743797993 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740521346 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745155423 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744339938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744030573 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.746083791 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.74420133 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743172511 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743028601 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.745445661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7449498 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746223584 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745383385 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743352071 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742358391 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.743644792 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744843427 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746466202 seconds)
  done (took 38.30015357 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.748628965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.744648756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74384284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745224862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745130653 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.746453504 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744897943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746468085 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74680335 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746024292 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746919044 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74487672 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.745337947 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.744289482 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745801184 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746807443 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.7472881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745627266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.745780268 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743552991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747551948 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.744870914 seconds)
  done (took 40.083649375 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748351298 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.747395447 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.74583122 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.748136099 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.749248903 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.745536327 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.748103692 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.748747152 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.74975096 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.751696309 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.748314479 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.749493646 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.75455357 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.751326608 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.749808305 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.746030735 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.893508188 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.749657017 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.74841872 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.747469054 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.748455606 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.755425356 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.747552726 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.74901042 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.747610242 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.749328619 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.748898997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.750349326 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.749107283 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.748808386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.752752388 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.748348965 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.750027327 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.750158495 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.749981131 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.750053407 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.753622605 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.749342399 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.745640298 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.74991856 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.758078461 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.768627974 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.747598086 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.759603528 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.747876315 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.748093275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.750576753 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.754009565 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.746517561 seconds)
  done (took 87.575015601 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.749411313 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.749934163 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.745736362 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.747997695 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.749653449 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.750051846 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.749939734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750690112 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.744190726 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.746174134 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.753072434 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.743466995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.746381786 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.747523081 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.749535673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.745357527 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748516983 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.745027953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.747558327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.745683814 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.746127504 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.74850224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.752425461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.747301642 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.748699958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.746833929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745941624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.750924073 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.745786009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.747152425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.751976303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751438389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.748779366 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.747844279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.747621681 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.750398452 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.74846093 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.748684356 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751278726 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.748323674 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.750925161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.749330678 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.748882411 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.747402539 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.747992962 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.74749757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.746517327 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.746573977 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.747026192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.749729309 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.753297591 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.748760954 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.749996433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.748181129 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.749125099 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.749177332 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.750852947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.748459466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.74967748 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.74762921 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.746942949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.750179557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.74989921 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.7507255 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.750913386 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.748042307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.747283004 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.751580366 seconds)
  done (took 120.588741261 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751714835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.751087837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749990827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750330186 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75133194 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.750731817 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7510354 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.749716662 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.751367688 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.750733507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750811441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.75142694 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.751658594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.751133393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.753433606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750814927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.752698784 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751731428 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750793803 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750736558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.752379202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.753901941 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.751834288 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.752810706 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753857442 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755341086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750787641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758128311 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752389155 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.750659598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.752685239 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.754222151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.751663492 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755079268 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.752657627 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.75596349 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751426142 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752645544 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.755580088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75231412 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754496549 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753973052 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753871018 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.753438251 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751602639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.753646526 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.753469375 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.754416306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.753608983 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756040427 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.754893296 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7536979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754898169 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755109121 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.754494217 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.755934312 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755198394 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754469315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75502716 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75438436 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754532361 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756749695 seconds)
  done (took 110.371629457 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755487954 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752802031 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.754723729 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.751203552 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758253252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751656071 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755512794 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.754802225 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754940255 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.754725211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759624974 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752420891 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751962595 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75553321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753916773 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755735657 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753440685 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.753386142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754094165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755850645 seconds)
  done (took 36.777829864 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.755012722 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.757173523 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.753102389 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.753504233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.755522831 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.753153808 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.758277059 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756536329 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752242818 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757971258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757138028 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759354528 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75146326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.756201056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.757957969 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.754306446 seconds)
  done (took 29.776728231 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.75738972 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757575714 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.7576343 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757525543 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.753869536 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.75615894 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.759522341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.756969968 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.75467761 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.757764738 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.756883011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.758025625 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.758290938 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.757790946 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.753635509 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.757907128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.75622687 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.757765759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760317907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.758269622 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.756443002 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.755097496 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.759793443 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.763059328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.757355108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.756624834 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.755933691 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.756248461 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.757371577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.761592789 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.757093614 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756961807 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.7569842 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.75764944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.763837415 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.755786956 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.759579175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.75708139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.759768874 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.7607877 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.75993699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.758128625 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.758946305 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.761112417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.757346301 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.760175338 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.760447042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.757653488 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.760587015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.757323739 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.76002846 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.762582375 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.758190982 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.761441918 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.760568491 seconds)
  done (took 98.391895254 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760077855 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76304887 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.757518334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.762005217 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761915644 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.758841972 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761792524 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761526061 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757117033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760469673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759063204 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762278598 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759317467 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762819353 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761350334 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761490482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.759429837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.7622142 seconds)
  done (took 33.384012018 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761125797 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760028062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.763117919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756345013 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.756357321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.76133413 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758366749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76201374 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761721313 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760655773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760587126 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.764439433 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762513099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.761677999 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.76176771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761793579 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766689956 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76222455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.759985227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762511251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764177571 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764043371 seconds)
  done (took 40.451466157 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.762969563 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.762260625 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.774548569 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.779533848 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.782632384 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.793544298 seconds)
  done (took 12.350990663 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761744595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765753695 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76161397 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765190806 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764079433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759231276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758403025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762368722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763232346 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760916921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761996488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763599786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765138533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758800517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762352015 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764335579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762297946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761734739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762786507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764215764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761665797 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764065032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761472399 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760989169 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761444275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762816644 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765094294 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762632061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762819772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765650493 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764471506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762884027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764551749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763682869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766952271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765743111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760814544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767110442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766676024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763438994 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.7663395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766602059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766881931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765786313 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766562312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764767645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763732651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763512299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765126691 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767094257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766967107 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763877673 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765145018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767483395 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764397512 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766828617 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766190492 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764266162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767437715 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763974119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762037776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766426513 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764165577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765769504 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765320087 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764656946 seconds)
  done (took 118.12103305 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762565019 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764824649 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764233743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764863106 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764479531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765224208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764493789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765261811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762788496 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764118681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767855472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765641445 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76412791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764817088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765549358 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766627181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761428675 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764499925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7653276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769189566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764227177 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766086782 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764811301 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765704542 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766960755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767416798 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763648303 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76696472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764489433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765280205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76615541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768117348 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763594123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766364473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766492272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764404684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768199556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765106874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766984127 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769265192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765393508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768562074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764486867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766624313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76842858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767278734 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766014724 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768805542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764474736 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767561582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764330381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767859771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77052814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766559609 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767463467 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76765584 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766142298 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764616978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766814236 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770871646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768200607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769025776 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771795093 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766938137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769697732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768319865 seconds)
  done (took 118.270911289 seconds)
done (took 2431.311904424 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.818968414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.061332324 seconds)
  done (took 15.579781101 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.942359847 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.897738716 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.780031702 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.808041284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.780010215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.775600135 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.798197863 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.77965498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.77953078 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.78056191 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.7803113 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.969388132 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.776948078 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.779826283 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.780003086 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.875358825 seconds)
  done (took 50.8022398 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.783365275 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.784205891 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.794709576 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.785943848 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.783057731 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.802004187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818132226 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786561781 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.844144562 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.796919842 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.912234298 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.79643415 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.784529208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.844774956 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.799091659 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.798560473 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.871273978 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.862099478 seconds)
  done (took 34.363277897 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.86170453 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.786829479 seconds)
  done (took 10.371902076 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.812902023 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.802708146 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815562313 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.810248974 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.800328507 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832599421 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.809775522 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.813079608 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.797204487 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.814528452 seconds)
  done (took 69.829679665 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.789052456 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.784582995 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.784741003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.782057287 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.777401348 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.780637637 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.784223293 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.77570286 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.476983561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.82074073 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.793268299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.790037222 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.785329632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.785954489 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.78276827 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.80718615 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.904807023 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.783396463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.782637475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.790623133 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.785404338 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.850174581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.800153097 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.786116128 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.816417908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.474477404 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.793178674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.79165737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.897445288 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.783331797 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.784464233 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.787148285 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.787836602 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183352451 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.106329272 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.788002736 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.795169535 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.792485633 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.782414012 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.922943718 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.78639469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790932677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.741847697 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.09181996 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.878000559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.82906014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.151953526 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.790345159 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.787310212 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.81736865 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789068098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.788418199 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.800013226 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.303931329 seconds)
  done (took 128.137531121 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.78306081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.084341467 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935391743 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781975788 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056925074 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989620773 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.783478542 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832779416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.782776176 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988798111 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00751285 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892280165 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783735984 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.780164699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78474199 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.780026128 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.944277188 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852499805 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783469038 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.779370313 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811755631 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993049023 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.913763296 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787064101 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.802992346 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995260816 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.906769008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.895015302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.313027676 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.781026168 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848519027 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.783849011 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784205391 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784608725 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940516267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.883491902 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875185623 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.785592579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783160016 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.782850818 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.449558929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980340416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.883780326 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.929440598 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039651132 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991890964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.432093286 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782151619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.425609465 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945813918 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.997809831 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.995829091 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.910514406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.787763287 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.939181287 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781825949 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.782178874 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022855227 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032644099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889692414 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784961002 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.783423107 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783617124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029966267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.786613925 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.88496707 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783900254 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.784627153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.885388945 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892473722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.034444311 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002024332 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.819319215 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.084208467 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.25694759 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000880629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855935238 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024336619 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785327416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.784201349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871506513 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.534461705 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986388833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037139049 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009272903 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822323566 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410085802 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.785130913 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98112445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974815881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.982277278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02770231 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.942463287 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.126047847 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.785016736 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.785059864 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.009998681 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926071098 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790702691 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146396574 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021146248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.350654067 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818582623 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084093111 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921733711 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.150785334 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.418796473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785667789 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954728986 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828541434 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.787504656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787679155 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.979165654 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.59612013 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787049211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.52846324 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.851417021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790286998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993327133 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.788372396 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00076956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791527669 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0241316 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.982482086 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822158391 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.970097578 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.030704489 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.581045977 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0376715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033617143 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.907948705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086112534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.516473132 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786892324 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064805887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789400461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.788724871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954889999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789296444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018375567 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.790880551 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01819006 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815621269 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94930422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793819483 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024741781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.826507521 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843256462 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792064165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921820958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790250693 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756894834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946152392 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788890486 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788527619 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.205823825 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.790653279 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936333574 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.022408069 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816019683 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858598731 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318394004 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788466733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878047166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817707831 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.215971525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.790321247 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.008609331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.73574194 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.217429319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.788904543 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031695476 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047883423 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.792781347 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.788401472 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.531339896 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.499795341 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788432681 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.949153427 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.123001335 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.44495682 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996640967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792298301 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920509008 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.792783787 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.864082994 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.137525094 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.790190907 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.791679406 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.791519319 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.791713436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789962611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000729877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823077771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.30925407 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009597263 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.102266743 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.014786668 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837352626 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792985558 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062415652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794080172 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.858216948 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.792443857 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815185124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026665998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797324564 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021644905 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055614405 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713337246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842510703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.797265626 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792082048 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.791528318 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947988931 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886386939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796471438 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.791524045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904540317 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.921962721 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987451631 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.382682063 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.96308356 seconds)
  done (took 881.827336835 seconds)
done (took 1192.611026225 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.792615355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.795028693 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.781418408 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.791385574 seconds)
  done (took 28.889613671 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.800122254 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.797217699 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.797399832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.794015586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.797738289 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.795765858 seconds)
  done (took 12.511358995 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.863008253 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.794005192 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793734953 seconds)
  done (took 21.179336045 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.865778328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.207083299 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.910250063 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241850739 seconds)
  done (took 9.955895072 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.800241066 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.797687174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.799224537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.799785737 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.799127101 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.800945236 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.800075025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.800566069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.800866342 seconds)
  done (took 17.929809404 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.203290003 seconds)
done (took 96.399558427 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.915145983 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.894559977 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.791107311 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.987641033 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.796083421 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036098514 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.643204958 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.97032338 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929083721 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.594263415 seconds)
    (11/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983960701 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.447628742 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.842834863 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.154679675 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819726008 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.809333536 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.842568158 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.793931965 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.879872715 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.578340682 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.99889817 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9240802 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.860288444 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.803359523 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 5.546789723 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.783210483 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.366534348 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.864006786 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.2731971 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929428654 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.199137574 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.241963573 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988282721 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118631495 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.604351451 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103143532 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.181942163 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.35477161 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.79983104 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.781150909 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.125093663 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.901926152 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.900959946 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.79561978 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.825190763 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.869583593 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.623795109 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.344901193 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.967525628 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.803117377 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.865255637 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78538569 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.543856959 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.879962941 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.759774433 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.106476672 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.066686557 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.798594939 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.680755229 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.037828228 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.922706034 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.704165554 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.916676755 seconds)
    (64/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.069489484 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.059360269 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.89123164 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.143082929 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.973515994 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.812238507 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.93362075 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.095172646 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.490425275 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.862687872 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.859225885 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.1288215 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.850572875 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.892851627 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800479629 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.814597965 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.143954459 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.282555583 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.820673408 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.823394593 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.762035068 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.028462753 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.943691368 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.095057122 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.005500175 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.511829489 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.370285276 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.923972035 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.095993116 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.78742097 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 4.008336083 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.793525339 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.314041812 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.261834749 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.82307619 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.825610709 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.797863606 seconds)
    (101/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.942134809 seconds)
    (102/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.709605178 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.906035791 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.074507592 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.865702333 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89144688 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.104133106 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.209588615 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.086378555 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.786776466 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 6.821156017 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.902493929 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.160317799 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.904629926 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.785725279 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.838768083 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.839832253 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.01860356 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786730483 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.83199299 seconds)
    (121/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.331008122 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.836726374 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.098457814 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.889423638 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.883608433 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801631404 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.349666397 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.142812366 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.926029614 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.943433724 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.900096125 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138380852 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.24977471 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826909639 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.046718363 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.084783301 seconds)
    (137/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.100415672 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.835794977 seconds)
    (139/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.955490989 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.97441632 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.807725285 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034872113 seconds)
    (143/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.110551825 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.807158581 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.151171435 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102385002 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.160023177 seconds)
    (148/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.913751808 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.932458891 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.255193307 seconds)
    (151/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.922343119 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.397333012 seconds)
    (153/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.813435547 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.039502168 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.830742692 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.123068848 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.805686083 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315428207 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.822359152 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.494837754 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094917911 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.704548412 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.726186936 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.835618046 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.447227079 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.213104295 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.037971641 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.955860272 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.954007033 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.178322605 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90509668 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.82328899 seconds)
    (173/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.303618121 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.874294845 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.080975485 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.977183061 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.366245942 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.897196592 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 4.065120927 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.161740385 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.926231879 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.7900644 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.794836372 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.831707862 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043057607 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.806658187 seconds)
    (187/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.449599313 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991278293 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315747767 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724303483 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.840550295 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.426152738 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.84818042 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.972763994 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.008779243 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.901363033 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.942887985 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.89218945 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 5.607442023 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.993696767 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.896004659 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.938251233 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.808828059 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.497489501 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.291713377 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.056498923 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.86898859 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.464117603 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.862591756 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37007675 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068862426 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.885427109 seconds)
    (213/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.005843479 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.806970644 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191373315 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.807795159 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.528236061 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.026058564 seconds)
    (219/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.831501826 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.092667493 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.055256075 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.292821017 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.811427234 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.808578805 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.103468479 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.318701667 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.488611904 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.838064348 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.833134009 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134680969 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.809255282 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012331696 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190712844 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.930037161 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.846386195 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.017094758 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.890487393 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.909503509 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.198517978 seconds)
    (240/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.409630029 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.934053551 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 4.856239762 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.704661836 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.899647628 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.947987339 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.811446661 seconds)
    (247/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.423305483 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.817329007 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.807000902 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.655064323 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.932319514 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185974498 seconds)
    (253/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.409638534 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.794780871 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.529827143 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.904518484 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.875244713 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.338960153 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.17413552 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.459447637 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.116306088 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.918527763 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.838196557 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.973930586 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119271508 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.193379462 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.012921662 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16270303 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.475349903 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.973939099 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.795359541 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.909494244 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.196118647 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.392131611 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.811226547 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.512993087 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.035552883 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.991755331 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.89281708 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.744232135 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.953980306 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.359250985 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.507005373 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.810074612 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.857820296 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.90852268 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187544128 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.894672801 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.022758471 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.949014656 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.761535926 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.839907434 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.546169689 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.204920524 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.11896513 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.840440654 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.884335299 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.407628724 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.797897154 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.924108648 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.852184009 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.14414308 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.944594266 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.894590969 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.813006717 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072326276 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.702895155 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.834751262 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.835933052 seconds)
  done (took 996.445491753 seconds)
done (took 998.253813891 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.844576704 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838572105 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.821990707 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842921215 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.934177024 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.858275491 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.832353473 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824292984 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.870133916 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.870615494 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.822759003 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.856506135 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.824356931 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.822691097 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821570601 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836559697 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.13016461 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.850094657 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.839786699 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832529121 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.839376691 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.822735313 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.8712966 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.856734968 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.82656885 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.82568913 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826484316 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.843372959 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.936411303 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.827122896 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.826529958 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.836105412 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.130320921 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.848916268 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.818655554 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843731881 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.836416313 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833766112 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.827522746 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.857199763 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.269730581 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.831112736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.826906621 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.825446581 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.824877879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.828668922 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.826392274 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.830283701 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838377126 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839555369 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.26721355 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.846206189 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.82930836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.824971507 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.835426958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826244948 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.827483914 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84088971 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.845497584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840845649 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.122191732 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.856135187 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.826694376 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.842423047 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.83374262 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.304087745 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.82711073 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.828222062 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.270728153 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.835991548 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303490545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.841140087 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827733155 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.840712362 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858316438 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.132425086 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.846258952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.824834603 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.83399495 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.824513437 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836107158 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840298909 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.830958268 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.827224444 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840568807 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860958597 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.837538255 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.829519008 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.836345493 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.847520122 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.835724575 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.840076733 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830517549 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821542628 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.836459742 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.831332618 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.832466813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831752866 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832595538 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.838810711 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.268987368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851190148 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824883455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.82456449 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.826991257 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.843479633 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.270343054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.83644367 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.850829064 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.875908693 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829547038 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.12522689 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.858470909 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846569165 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837618409 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831703684 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.823627459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.124246678 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296793551 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.851075934 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.829311975 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.82855095 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846821145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.831119504 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.8248846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135721765 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.855793112 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8449228 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.952324015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.839371261 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.862530036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.829416052 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.833023085 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.862678112 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846151306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.862434289 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.832316964 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846081182 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.845868713 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.826833106 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.841830364 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.840530372 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.831468097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836259988 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823584249 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864573163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842989817 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842988012 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850784843 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.952427231 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827596982 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.126103161 seconds)
done (took 287.405340535 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.896774601 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.820353728 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.926128158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.826841863 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.912349971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912303432 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.82346042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.823953145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.82380291 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.200658918 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.824277154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.825996029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.822024898 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.824817336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.908877871 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.826632467 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.824514921 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.16442531 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828398997 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.902124108 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.823090125 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.825293442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827648643 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.209478405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.818906894 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.825554731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.90105585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828537928 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.17518443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.824225807 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.824020037 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.17766922 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920158323 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.845970499 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.838197815 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.835242312 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.914616547 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.832859495 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.908334557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.908255409 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.927064704 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870284205 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.829742006 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.823597087 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.832064775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.82956574 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826195447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.856310232 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823401688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.826216963 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.167267243 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.83944396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.827616041 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826475293 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.826620209 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.860312733 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.826810086 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.829372973 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.921606307 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.830288431 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891002375 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210862706 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.203541125 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.829039367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830951883 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.826873378 seconds)
  done (took 181.535281266 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.896836826 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.903359623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.895897218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.835519168 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.880330907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.903147521 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.835199147 seconds)
  done (took 14.911394561 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.837072349 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830294716 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880405286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880458618 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.831561572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981927336 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.830914703 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.842776298 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829115693 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.883762838 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.830175736 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.830944048 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.838230634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.825085559 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.878656028 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.84200033 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.946475622 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832230204 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.832251981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.985507785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828710661 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.83794796 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.885801914 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.843802943 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.831813598 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.83755263 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.428325624 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832048991 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829467868 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.83141594 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828733994 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.876677376 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.831915007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.826813979 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829097747 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.948020398 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.832379333 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830053664 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.832292704 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.82827559 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.830660475 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.832786823 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.832861446 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.829846722 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.832622142 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.857090147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.831838546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.833341332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833202934 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833911893 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.884161248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.833648308 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.829885109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.831075317 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.889564564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840686921 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.833637159 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.83093538 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833129139 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830874557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.987430432 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.880450806 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.833191329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881804575 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.83300309 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.832985536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.833232438 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.831793746 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927649125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.83334544 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882339835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.831101818 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.993686641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.857575623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83563833 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.836131536 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.836158602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834880289 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835421944 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.840038263 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.830811796 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835495724 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.839732597 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832508006 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831895316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947385625 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943666611 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.83208901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.847600664 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.841814011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.832983265 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.88808895 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.834965061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.832558057 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888499159 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951628584 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.890828009 seconds)
  done (took 202.231363522 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839603084 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.842759818 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.836341745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.850329855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.835421052 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.834687632 seconds)
  done (took 12.805398979 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.8380831 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.836864114 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.836609681 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.835351488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.835963718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.835486161 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.836061825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836469157 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.840184659 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.835414054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.83577845 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.834886858 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.833864355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833910189 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.834873832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832252649 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.833794962 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831565001 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.834486858 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834343212 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.987312283 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.835198389 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834076794 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.835614673 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.838008036 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.833238094 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841852119 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.834069974 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833369432 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.842322841 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.838274227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.834666137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.835451356 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.840232053 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.839420671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.835232124 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838791242 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.836241011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.832661338 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.835971089 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.836096914 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835084228 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.836131464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.83587793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.837622201 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.84030957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.840015957 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.844712135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.837090692 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.836807028 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.836836672 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.835907728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.835852927 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.836943311 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.838300282 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841164673 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841924582 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.837264347 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.836711998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.83707112 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.837527309 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.836516665 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.837231016 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.840377859 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83309891 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.837510178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.83779984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.840658619 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836859562 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.835685303 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.837486507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.834554495 seconds)
  done (took 135.15998449 seconds)
done (took 548.415866193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.122156968 seconds)
  done (took 8.88950543 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.874090815 seconds)
  done (took 8.742305836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.364079442 seconds)
  done (took 10.136785066 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.852641341 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.876533512 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.841850991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.839454471 seconds)
  done (took 29.188046122 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.950607367 seconds)
  done (took 8.720792015 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.84578879 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.829860009 seconds)
  done (took 15.481616643 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.873253484 seconds)
  done (took 8.642191578 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.920203551 seconds)
  done (took 8.692762675 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.851597795 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.846820477 seconds)
  done (took 15.482529197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.818811162 seconds)
  done (took 8.587316965 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.52847324 seconds)
  done (took 11.302544938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844836826 seconds)
  done (took 8.630987276 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.833452199 seconds)
  done (took 8.603152924 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.985461736 seconds)
  done (took 9.754194902 seconds)
done (took 162.621229054 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.835307535 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.837400866 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.834130478 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.835069505 seconds)
  done (took 29.110551444 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.87263909 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.875176863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.872956447 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.884505226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.875876006 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.873619386 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.866092307 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.864287302 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.883858417 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.876360916 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.876049697 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.874960571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.874344889 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.865720191 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.875156687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.874525623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.885370888 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.874493147 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.865191022 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.877344619 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.841040105 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.885969096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.877569694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.84172451 seconds)
  done (took 46.705251788 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.038056774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.912147054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.994318693 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.894980881 seconds)
  done (took 9.609760893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.892613263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.893602299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.906090411 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.944771132 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.970390838 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.90353805 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.868866774 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.862938808 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.848957531 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.894909604 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.970620424 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.909892021 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.979087475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.841581549 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041348537 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.841327927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.840652089 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.893701593 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.944635072 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.96737841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.842093017 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.893016846 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.897597781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.910695616 seconds)
  done (took 47.532535052 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.839483344 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.849268485 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.845910402 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.841235037 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.840223039 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.840418603 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.847639698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.841870534 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.862413842 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.842213288 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.840280634 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.841083653 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.840269339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.841925132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.841458647 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.854506874 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.855333381 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.84218752 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.844984339 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.847980621 seconds)
  done (took 38.67367106 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.83640442 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.691254102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.187777661 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.09274645 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.836243335 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.838742883 seconds)
  done (took 31.256447943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.854734062 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.848057741 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.842177923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.898930261 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983990058 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.849327435 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.842798235 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.852551399 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.887379938 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907257189 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.862583871 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.870059822 seconds)
  done (took 24.273855918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.838838945 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.839835943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.848096844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.855033378 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852911896 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.850505806 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.850251248 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.836052202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.858427765 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.861440365 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.850921725 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.857760041 seconds)
  done (took 43.977550764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931215844 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.88555696 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.874687596 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562309997 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219404953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052275235 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356900028 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177385222 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.844818714 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114697374 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883689462 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948585614 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096443216 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351422879 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87373107 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299543589 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140458108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056476079 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871129308 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534690549 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90575965 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.030379585 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.613077576 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901673839 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053705872 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.97201295 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.102632759 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842499517 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975564657 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880992357 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852888462 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842209056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116832938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221640482 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949016914 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852386098 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468563453 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.55974739 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.8344094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.607682142 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595533536 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970613868 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853290551 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843092367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.776861984 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.005101575 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21814336 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848125143 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.554580437 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842805358 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853807296 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930618081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.846652637 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.659958215 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762217123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846479749 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841219816 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850358896 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417880176 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.963924009 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031439256 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.818853984 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.937249987 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617322427 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238908123 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996154815 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.848462233 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848653745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778360919 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.612117627 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900537375 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1726131 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.865379531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495839159 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15288361 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.939238805 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788136274 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119969369 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.37310311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.817717571 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07352424 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844943005 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781361076 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.886754439 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780010269 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120737347 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884807457 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.643377165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891503499 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178543468 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855869629 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865443137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86960566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068898641 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.729784434 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845789805 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.661734908 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989790074 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868491622 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217581992 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781524772 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.849555763 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101320443 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.058402881 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.912485494 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341773856 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014384416 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406619024 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.899000894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.9961736 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894745862 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.118092584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907025242 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970327641 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901359318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847474056 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166157101 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430209303 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.983774338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.92101955 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975795174 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17085343 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877110678 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912371273 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853712162 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847441599 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652779708 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402438356 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.847015273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.849696923 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91213027 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895063276 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848364116 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79821791 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.471828689 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917807009 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.862763957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071932222 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410775866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159252445 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782577139 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178166126 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940816005 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.07092845 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494526369 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.927246218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109209788 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917106407 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.950978833 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895841086 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866978873 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946208137 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869424809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.992151663 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140172483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.850603712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.850602231 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64480258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88565448 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845928119 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.849789009 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596305218 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121178215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876139742 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852372232 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73250266 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.856879017 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908058483 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845954509 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.851072813 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383650768 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567872643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.845446107 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.423045278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063480078 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849361893 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.604027185 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966681849 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.930942839 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125732636 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909873891 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.781954786 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.558910034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.538988488 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846736232 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779187104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845116759 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852659942 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854962766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.041869214 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120406422 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887439352 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.547808542 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.894700767 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860971716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.85397321 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850822039 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.358145144 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000471586 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042096563 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897982455 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992532927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.863263848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.784562121 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.854017513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857591491 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848668831 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.850970644 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883429293 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.567665738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234630259 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112296055 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.460839143 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863456973 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.617473674 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.912043791 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.907823572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695692656 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025920044 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.926205695 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861361459 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.861012162 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.64541718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54716433 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421127351 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165103807 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163236651 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29221408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.069051342 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880100174 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194944974 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78423547 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407569136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911703773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628799451 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796245602 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936725115 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.498363673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199532003 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865734034 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080916533 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238111826 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.618099779 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033406047 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064594259 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892622977 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.013407153 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816193803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.142206523 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995046422 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596812045 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064833678 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186973336 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.572144569 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.987620848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.853613727 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.551940553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948160773 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.570925383 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.025041921 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.040668392 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.828511565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333837004 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86374416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082439446 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211663618 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011324301 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.977744894 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79236823 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868588975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867182084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.856925782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.85172082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.74063826 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.109594044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867827499 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790707172 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956220181 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152820642 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.761006927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.860856359 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8552423 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173414406 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398135828 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026406678 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.95423922 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375747094 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866189472 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793239649 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792419288 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.549401627 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865065167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833522467 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068988252 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.963786762 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768624134 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928620766 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980377497 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112971578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.8709388 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129923027 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13362441 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575986315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883419605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.957835181 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563076902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.973608681 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857793068 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093447255 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612611095 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084708639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907387529 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.824562399 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857622245 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071962893 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855444234 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.802331391 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098963536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.581542076 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.96615581 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176119795 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933690266 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.793320556 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916640523 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.951283026 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868706488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943151629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868670828 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.866611223 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869118561 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902059734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.805097133 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990000749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86480156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945257283 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007866908 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379973323 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.858631778 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132443134 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212826626 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189937094 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917218847 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855828716 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862480928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792417955 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001195381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082937375 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129616637 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986958064 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.970988149 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882919614 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559990521 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065727682 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096029095 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131843276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.750571494 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358722391 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891969562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.853169013 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864263421 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.063325789 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066682367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161935556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001155843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.923247783 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214076076 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125501398 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852556445 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852587448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422843168 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.961369163 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.553129404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.904619178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781431813 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137985549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869124234 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239746498 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88014947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015660417 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.374638609 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579985854 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15406072 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844864039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918495477 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135324611 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254517674 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172322712 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92386691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869597727 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.966545088 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003658002 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.735862866 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854936269 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857245799 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142891261 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.569864314 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867391507 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144780431 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170024141 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.852147237 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.734904701 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877761699 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.86845216 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082434315 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138932343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115835442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867371785 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866253508 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.677572999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138429236 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919499701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791725682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.859472515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95935937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108567813 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87933489 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.311672318 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.570523624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137274305 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.864049381 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878275725 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.021153036 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232694711 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187798771 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396165117 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069827602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.450346862 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428156908 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157992841 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.863402281 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.014739937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165995099 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.863028764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.930457771 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899301328 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.129700164 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168993834 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.944291418 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578203272 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.833181877 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203333675 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418691928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803308315 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859708041 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.924770954 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86424749 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.992249485 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871873082 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.752341829 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006697542 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.621732215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13591551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.865771252 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.850360441 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.622769388 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161649924 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891808648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020882781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865883679 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.586751085 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.22392792 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.121468111 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.952575175 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869422185 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.868088592 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864849658 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849046543 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061579001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.058527307 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142873868 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.97377058 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.899431743 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868008022 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.082289928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076336233 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.78314779 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007827697 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947431471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903297281 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.017850142 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.368032086 seconds)
  done (took 1667.996382525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884044034 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950336755 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.937350687 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.975494598 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922765536 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960245271 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.012088502 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.874677832 seconds)
  done (took 57.312299603 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.861869528 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.060066093 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.870097414 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.863871486 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.870364355 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.86452701 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.027749218 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.870939618 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.896320268 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.873903698 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.863425706 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.858457719 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.204779707 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.88453302 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.864524959 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.873092508 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868911058 seconds)
  done (took 74.295837074 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.866446592 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.948166162 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.885050914 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.881478015 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.815297238 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.867906905 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.796834266 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.884558833 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.863845534 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.09246672 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.500615171 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.874824856 seconds)
  done (took 90.073443412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.876094307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.872252351 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.870552921 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.872568823 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.870056717 seconds)
  done (took 11.162770696 seconds)
done (took 2173.776470337 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.111031127 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.082249061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.100602346 seconds)
  done (took 5.97977557 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.008435928 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.053718497 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.173321744 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.182722166 seconds)
  done (took 10.211970124 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.141669475 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.24707699 seconds)
  done (took 6.178740743 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.247056489 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.864001098 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.238035774 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.859829435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.859779248 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.86070875 seconds)
  done (took 22.376088074 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.862356996 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.864775724 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.863785452 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.864815438 seconds)
  done (took 9.246391553 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842585974 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.523560643 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.840199445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.860370632 seconds)
  done (took 20.85706729 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.610218123 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.619776856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.606231005 seconds)
  done (took 9.626622431 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.397030418 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.762198084 seconds)
  done (took 8.948069139 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.122839138 seconds)
  done (took 3.912576529 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.997385192 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.170731675 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.37990307 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.387859086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.476814595 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.575420249 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.179135713 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.105058292 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.265532398 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.305275376 seconds)
  done (took 24.636003419 seconds)
done (took 137.22843528 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.238790537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.099727727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.069123585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.237531323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.079465999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.06432756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.080345706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.223019218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.700113718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.700376121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.193722545 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.078474099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.031206465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.096411519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.028347836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.226496192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.08268767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.246507722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.890377497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.087530416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.079042308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.834666322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.035915637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.844740577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.07938852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.014737588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.414168485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.22538499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.047662072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.415541504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.013249836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.243324697 seconds)
  done (took 170.494209843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.621662989 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860084271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.865128932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.860974388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.472205704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.870237769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860189605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858376494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.967067699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.958480699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.88247529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.519053157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889087691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86196752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.868658941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.860524907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.075019396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.713852923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.880686916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883977777 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884262985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.415101142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.880982463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.457856867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.08742604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879831921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862384114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879332758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867133129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863436324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.874948936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860076545 seconds)
  done (took 208.237290564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.86454848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860883781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.861835791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.860887368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.864856521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885271431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.863533521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.861158099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.517515847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.513156839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.871563376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88371341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.86995025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861876182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870559563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861861908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.865664657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872671184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.86867006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871437755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877320286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.677512526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.874742274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.676782788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.86857436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.869909709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862423688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873185103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.866988771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.868384072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.874114319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863501241 seconds)
  done (took 220.516943862 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.069219673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.872157143 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.874392884 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.824308759 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.872858342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.872345998 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.866640807 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.063063223 seconds)
  done (took 19.129081395 seconds)
done (took 620.180786637 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.328614785 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161393503 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.046660002 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.898441271 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.133834432 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.924122116 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.892644423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.954815782 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.635381092 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955600034 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.553716924 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.908094688 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.638566748 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912625881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.024559433 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.950836262 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.423933221 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.513017459 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.0727788 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945589088 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063674952 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851838981 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.962387305 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648250159 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.662998355 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.889568675 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.057472839 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.427097038 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.901035779 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.059982012 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.617719016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.259967671 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899652997 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.891671444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.944006509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.926772681 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.226088526 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.897404921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.016248756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662397814 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.944288008 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.508754489 seconds)
  done (took 102.991780099 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.863816979 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.860350344 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.859757365 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.860779856 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.862237778 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.862067038 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.860977472 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.861857631 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.862295366 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.861328367 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.86105305 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.862985683 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.860871526 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.863124135 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.863429066 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.861266183 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.862181742 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.863277702 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.861052407 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.861614958 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.862087441 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.862673941 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.87640781 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.861833576 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.864044659 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.863179401 seconds)
  done (took 50.235233884 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.876232204 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018682566 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.100553116 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.891309116 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.876567023 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.880489945 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.894063799 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.87791882 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.879097187 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.878753501 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.972459907 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.880817291 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897113822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.100728031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.888495998 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.877500783 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.879362084 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.877908685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.024753216 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889557944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.896164769 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.879701731 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.895670082 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.890630246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.879695233 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87783705 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.880466722 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.348555503 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.88385893 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.971333138 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.919261141 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.89383695 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.31442121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.109192872 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925633613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.881544165 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.877959885 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974008358 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.882628275 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.876905068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.89453518 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.880057327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.100051757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.374236228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.891540351 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.87850657 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.362003672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.985330926 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.919569579 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.887050831 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106187358 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.892480061 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.880484193 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.88026097 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.914806901 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885039994 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.876752662 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.243916267 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.889857832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.897994854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.885187874 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.880271316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032300689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.885416568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.022447389 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.888249853 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.887228694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.881909362 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.104043407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895895067 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.385354413 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.893185042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.88149669 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.972677864 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.026535238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.394054482 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.8920294 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037367116 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.330823278 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.902473793 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.887711856 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.343208728 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905658115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.886408536 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.881930286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.883599109 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.880703917 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9241127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.896375929 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.321538382 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.383200149 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.257073985 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.902762492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.894221011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.881756673 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.242825768 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.885132625 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.881423784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.099151073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.390025294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.89064909 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.889153495 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.370222935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.893266476 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.900274307 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.887340538 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.108291134 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.891085908 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.925294526 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.8824633 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.888665346 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.885384941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.900242165 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.888167627 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.883003029 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.358816317 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.991336137 seconds)
  done (took 233.108785523 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.879537724 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.876193307 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.877424348 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.873995379 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.876297396 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.882292923 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.875098089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.876086013 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.882367871 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.876790479 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.877396309 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.877217889 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.875514004 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.878955833 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.375374825 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.886254649 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.492837322 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.878205744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.879182942 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888482534 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.556704182 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88355467 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.877947403 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.894247917 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.880571787 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.878312584 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.879694544 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.909086759 seconds)
  done (took 168.256690267 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.885249928 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067327378 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898934956 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.920731619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.891588485 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.881762833 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90830746 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.90309671 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.889186135 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.882039754 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.882608147 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.945940395 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893388597 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.017073013 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.914493139 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.917118963 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.986733899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.891706473 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.884096043 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.883935263 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.913435718 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.880967834 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.945103632 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012607092 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.899511302 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.001879596 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.889047197 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.885969752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.884976863 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003645536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.897567081 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.945485451 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.912143636 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.904754442 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.006140767 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.000245935 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.989431295 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.913266308 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.888846874 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.885372365 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.883559544 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.874142062 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00316765 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.902112664 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.888785057 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995696039 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.902982585 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.887337271 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.894925756 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.884470166 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.900654403 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.902025306 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.950558488 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.016855779 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.919944391 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.911259119 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.912481289 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174675992 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.899240962 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.988232318 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.879097429 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004803626 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.903873797 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.874252148 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.886888762 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.892908213 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.91639725 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.919069836 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993024893 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.892569056 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988516232 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.919835542 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.894698208 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.88603663 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.889747023 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.005851046 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.006987227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.919632764 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.922530381 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.918585598 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.880488445 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.88902475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.877919768 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906555766 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.89025504 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.00408543 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.00315026 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.892960653 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.888414333 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.888650579 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.890430024 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.913802668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013196528 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.923093693 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984732297 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.954573127 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.959634331 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.898606174 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.901441975 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.890972967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.952706036 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.899608213 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.899412636 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.229136323 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.96050505 seconds)
  done (took 204.419882152 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.366997498 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.945155135 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943658897 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.171888511 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317190668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.73797307 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.93412865 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.938292543 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.962018547 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.095454756 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.994930533 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.950358168 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.923980148 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.911755849 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.941178423 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.957511376 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.940763601 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239383537 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.062678745 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.060827499 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.922190664 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201977988 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.257006086 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.322536157 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.970150317 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.264513894 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.620052931 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.182434931 seconds)
  done (took 61.957827746 seconds)
done (took 822.766958374 seconds)
SAVING RESULT...
DONE!
