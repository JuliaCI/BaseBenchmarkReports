cset: moving following pidspec: 19767
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363240788 seconds)
loading group "string"... done (took 0.553617221 seconds)
loading group "linalg"... done (took 7.021480497 seconds)
loading group "parallel"... done (took 0.150311406 seconds)
loading group "find"... done (took 1.123619265 seconds)
loading group "tuple"... done (took 1.750624379 seconds)
loading group "dates"... done (took 1.203509745 seconds)
loading group "micro"... done (took 0.214052074 seconds)
loading group "io"... done (took 0.970178805 seconds)
loading group "scalar"... done (took 37.544118657 seconds)
loading group "sparse"... done (took 12.04031311 seconds)
loading group "broadcast"... done (took 0.960797766 seconds)
loading group "union"... done (took 12.374843908 seconds)
loading group "simd"... done (took 4.571317724 seconds)
loading group "random"... done (took 9.252146051 seconds)
loading group "problem"... done (took 1.860941477 seconds)
loading group "array"... done (took 20.671525077 seconds)
loading group "misc"... done (took 1.700218974 seconds)
loading group "sort"... done (took 3.212607983 seconds)
loading group "collection"... done (took 17.360232344 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483364966 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119206792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111637802 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11529012 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140969601 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.106607916 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119190692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080354412 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.769886798 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144145112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114351375 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407287757 seconds)
done (took 5.011347244 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170990155 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.078510886 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077588015 seconds)
  done (took 1.2910659 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063620031 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117815221 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062663065 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063692039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063245333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063961494 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064328264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063943144 seconds)
  done (took 1.635263184 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070360226 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065526814 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066133243 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066244652 seconds)
  done (took 1.406451282 seconds)
done (took 5.711466249 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744163216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197132832 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178819445 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390194195 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127476767 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155507001 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641535844 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.296555902 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182480968 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077660636 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100713331 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.312769382 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106712796 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644343258 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07282793 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08648987 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.133465062 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427615793 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.063931835 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.07897232 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085364039 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125137004 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08222962 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.070777902 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140062834 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064150473 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132039028 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078785564 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063498866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.203916434 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.168981666 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654484628 seconds)
  done (took 10.063380411 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092833037 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093391907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065216469 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119834401 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092222397 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065873818 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067494664 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065039438 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086072502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12503294 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085110174 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097501734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061882265 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065126471 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082184544 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203380721 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078688292 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079917046 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068803513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073461164 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107056168 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074998283 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074381609 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073608909 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125012005 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179318452 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095254925 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09407354 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063606709 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077181531 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111696665 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125456545 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064269255 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064995851 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123456652 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092877949 seconds)
  done (took 4.488232106 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.944485722 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1359813 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.085648278 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128353124 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061031417 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.102776687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061797546 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076877963 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.194930824 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.40059823 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563839508 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10705586 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099820475 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064393515 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.064706495 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063608052 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323857034 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.091222062 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100834382 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077683467 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066781782 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065818551 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340413303 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067643121 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061989403 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066504022 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056522615 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123344616 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066566551 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.915991462 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120476048 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.062865669 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096844226 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165531954 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083311731 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134882479 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063248911 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.192243693 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146425463 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.066079476 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06284656 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080161022 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100056193 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.108435361 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062051374 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063554623 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155469695 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061177245 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076039977 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.610101776 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15107638 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09260296 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061777099 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248078482 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083078015 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065844667 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061118994 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172709883 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128843203 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061516341 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086317334 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06346703 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063943628 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06426873 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066498886 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060761491 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062396819 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356431212 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067117852 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075780046 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.697334171 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068390244 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065759728 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071948241 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068933666 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.081506712 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062881172 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071715765 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062526109 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062458745 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06342197 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.080599007 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353874721 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063484018 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065055986 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060622331 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061240719 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082834186 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093682787 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063422487 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062008213 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096813582 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064543555 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062901822 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102417336 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064639391 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083525213 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.066511665 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.10948229 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.163080168 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085715149 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064414759 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095952042 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070653041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095429079 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078739255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06404316 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.390520849 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061705172 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.061209202 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065206253 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.061680035 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.063707458 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063698988 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.075981415 seconds)
  done (took 20.124213935 seconds)
done (took 36.756239289 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230357433 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075484374 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07535275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079271799 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075391592 seconds)
  done (took 1.762032195 seconds)
done (took 2.967817854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.116230104 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094790121 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.060994635 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09151641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060916051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096069514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095503427 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077141169 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095448246 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.060397773 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09199605 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060896955 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06055848 seconds)
  done (took 2.289039292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079409906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080022872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068133939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080991315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061620421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080808254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078794703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087904237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078799672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070536786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062181358 seconds)
  done (took 2.030621421 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.077901891 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079732908 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067493606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0801997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064728599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080539618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079370532 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084335114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079430112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071621671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061750817 seconds)
  done (took 2.024671133 seconds)
done (took 7.53926068 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074525005 seconds)
  done (took 1.264106663 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582555384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.045123171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.077680362 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108032929 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179678771 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11566641 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272372871 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082999349 seconds)
  done (took 8.830687811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099760964 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070151206 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067132267 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069570375 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068437667 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070211815 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06940768 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066986488 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067963972 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06831431 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069412876 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066552167 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069731423 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067661362 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06950447 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064727222 seconds)
  done (took 2.388759363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088771302 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.087244211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070987551 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071761325 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068408774 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068804907 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071045552 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069504802 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067389013 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.06828961 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071071006 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069879133 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06833984 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061458266 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070916111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071671131 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06752137 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070382903 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070885075 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071189129 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071158181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061433309 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068159571 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070221216 seconds)
  done (took 2.993925816 seconds)
done (took 16.674946072 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109223809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06766264 seconds)
  done (took 1.376997859 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078421139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08127626 seconds)
  done (took 1.365146697 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080188054 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06211763 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089523633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.0749966 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062986646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063690387 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088551664 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062912507 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064380369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063983975 seconds)
  done (took 1.920333461 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065685253 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074295639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067001678 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078575709 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072758102 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062177723 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071710442 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066572906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077136368 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06097484 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069564595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080629184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069742882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082692386 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071500909 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067517801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069055564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066046746 seconds)
  done (took 2.482032874 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062716792 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063655332 seconds)
  done (took 1.339341959 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064051847 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060558029 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063785146 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063950163 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061645391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060743641 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062078602 seconds)
  done (took 1.645880561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.367710126 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.106855653 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30138543 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069114241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080035673 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250040955 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063965518 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068761318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06917389 seconds)
  done (took 2.631302284 seconds)
done (took 13.973634089 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075310763 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081562022 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091769418 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.358738629 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088358438 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062260634 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111331408 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186246381 seconds)
done (took 2.277379563 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2073468 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602895175 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381872539 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197096538 seconds)
  done (took 2.397699953 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321589008 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083400296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.056869304 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065523327 seconds)
  done (took 1.751132897 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062261084 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065127193 seconds)
  done (took 1.349641194 seconds)
done (took 6.925835336 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06287211 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083782311 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063521997 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062378246 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064236073 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061631145 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061617384 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064249918 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061778195 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064730239 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067229242 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064044393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064618629 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062401055 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061637073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064295224 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061945319 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061855178 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062169631 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061819369 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064154135 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064201421 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061870445 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061999843 seconds)
  done (took 2.790429608 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080414538 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06261692 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068286391 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068012476 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066981833 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067530635 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06754639 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063900891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069480587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06689342 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068522852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06860256 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066086911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068201656 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066560162 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068366024 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069746414 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064710274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066340099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068522799 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069652085 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064848826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068508132 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06957167 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068388927 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069823463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066832989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064724455 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069562814 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068122675 seconds)
  done (took 3.267334971 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065666797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06031041 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061814634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068521886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06222901 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063002543 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061444903 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062419414 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06282922 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061603688 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062977942 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06205261 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061930942 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062901218 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062924592 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065411605 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077492727 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062801041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061956138 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062586497 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06486382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061752273 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061924608 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061967411 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062045366 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061573098 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062892435 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061799435 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062543446 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061962552 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064976312 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065383758 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061401671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068512961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065893998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061806211 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066298124 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061329097 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062512805 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061306264 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061469101 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061673883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061727035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068482739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061989237 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063278936 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061656265 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062634093 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062276782 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065023053 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061331995 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06192144 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063915734 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062650087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065523067 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061466164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062383831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060990589 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06307613 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061215295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061600286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060990337 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063995203 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061793825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076285829 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068421027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061541556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062968056 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062540066 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064198896 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063916205 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074992558 seconds)
  done (took 5.805374876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087362825 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08482216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061487646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061714179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058513922 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060762992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063926486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06047174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06207794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.065860556 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060520169 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061604962 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174107945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073352592 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061310716 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062091203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066119234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058640708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060553523 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0637071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060884526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063800411 seconds)
  done (took 2.775005472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150951429 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066975382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102343997 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069336135 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064822247 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071216686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067967298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067580811 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068074836 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066357346 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066255305 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067925532 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06538845 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066070058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066076749 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066392921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067757248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066372075 seconds)
  done (took 2.563692361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073452947 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063311457 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082907117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061940411 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062516827 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064642857 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067127638 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071103757 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06613141 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064141553 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072429329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066426198 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065366575 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062790854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064839827 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063759292 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06690976 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063696296 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072233366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068626364 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068825037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072190295 seconds)
  done (took 2.722719959 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075634963 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064402268 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079427343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066601111 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059197905 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063001179 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068347975 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064039713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067953427 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065835962 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064416006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062338215 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067219775 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064198053 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067416642 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063907452 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064293775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064052558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065540956 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060019779 seconds)
  done (took 2.557530262 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0822144 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063368582 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064045364 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073443864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065858476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065462876 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074178185 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066203918 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065556531 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085437793 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065550804 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065450953 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07333388 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070262822 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065033617 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073048066 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072938985 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073169267 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06545068 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065113456 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085297373 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065461122 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073265194 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065197272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063605897 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063969417 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063688865 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068698646 seconds)
  done (took 3.185086657 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062462003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063026662 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0600361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059991932 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060274777 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061956606 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061884311 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06165484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063858138 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061657835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063892642 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063902968 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064227016 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064366738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064221313 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063649598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064118728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061935521 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061814329 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06189186 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064152403 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063965966 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064153 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061343765 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061369988 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064052612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061741212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061483245 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064082034 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061875792 seconds)
  done (took 3.122849724 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071569315 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069486367 seconds)
  done (took 1.386475336 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.05975623 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076276105 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060073231 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068167026 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068468369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064764341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071823241 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068191561 seconds)
  done (took 1.779077225 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.077618234 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076106441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066145968 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07897831 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075388098 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.080926907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130835858 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065663935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.070735022 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06212794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.077782849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.063792627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070166679 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064661956 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069793157 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069243981 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060759587 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068815753 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065159069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061506644 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064517855 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073062836 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066556623 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059731233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065618544 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086411831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075700197 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064027976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067220124 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071219133 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070151406 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058678742 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064217322 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064843253 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062333082 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073931111 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079883998 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066854168 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073166782 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065462503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075529902 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059377481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068779066 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070928667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074064497 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064602165 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065373747 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059188656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06197629 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066762067 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059788735 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06493302 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05972773 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073968347 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067375877 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074335283 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063495646 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066171862 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067349913 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067889209 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071475477 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067032503 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067074976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064758593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074499592 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069220976 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074144862 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06004233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058673906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062594207 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074206867 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087635015 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070863166 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066021618 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065661316 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062384155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067550096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066086724 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070342678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07104937 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06484633 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070916238 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071748002 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065084878 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067194512 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073127847 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062909054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067830395 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063150595 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081484979 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063843511 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062783634 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06257894 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075209277 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067987599 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064953559 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062496697 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072516055 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059291372 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065362823 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065499013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065105675 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075105497 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068269769 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068544404 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.071938897 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071001124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063432155 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066159243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060320124 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06428555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062225653 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.06991296 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058388524 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065880225 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064130839 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063933355 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071791441 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061502654 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063599841 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196697924 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069468362 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062859955 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059791749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066325042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064058278 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066965117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071699348 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061822208 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057771756 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059071588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067767653 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065041034 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068376221 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069907022 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068038822 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059790014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062849871 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071336211 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074354802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06585772 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066174483 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071709821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066673151 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064398376 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07152783 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067237003 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064450215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07065734 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065619521 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060120931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068028199 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067580023 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063484368 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068779991 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068860183 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066952062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066407091 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063934997 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073636404 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065498184 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063742618 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064796557 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063085921 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074943819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066644821 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060996624 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062196603 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074214798 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063536176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06465717 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064181067 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067007003 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065920842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062977336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064472858 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066613169 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075910588 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069469649 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065862636 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070092018 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076129168 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064011163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067192569 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064554143 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06520462 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066083019 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073327871 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070176192 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0693273 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067393811 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061167273 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069970351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071955736 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06386555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062240844 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06378576 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068810431 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070101212 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069072033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065296706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062585318 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064992337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067649516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067105767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064404669 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063702355 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07118195 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062634961 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072318319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066323983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074513754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067436254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060015888 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067788682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062562132 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070409817 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059956299 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062503418 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063617691 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065614617 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063500371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06705601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058940762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071400965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072112159 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06502196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063806245 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064671673 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070636374 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065035249 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067094166 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066735242 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069417491 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074078495 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063279185 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067131496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07403022 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064191325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057965731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068757895 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06232106 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062704352 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06250118 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061897073 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.195391115 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072960515 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070191054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05751241 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065999025 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062832307 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062499161 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058803861 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.068409666 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066495356 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06481025 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071408104 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06599615 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065620119 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069276555 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065674298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065725516 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066075056 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06725564 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066422261 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066660706 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06403087 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068015275 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06439803 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063200681 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067072449 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066073068 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065659437 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070385338 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063174815 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063390423 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066420739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064666691 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063381341 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063626149 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062372543 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06673347 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06399943 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063770275 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066427596 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059469101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071778289 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065900441 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073287671 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065364507 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061937582 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072784736 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067334812 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070329187 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06604867 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066326176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066571839 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064966214 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068011392 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071492767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062509034 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075524931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073523458 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065146122 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067219124 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065002517 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065986082 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063980883 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065563527 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065963767 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064394128 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064138084 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068606417 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066914703 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064861789 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066673165 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065938224 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064702045 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065419481 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059011782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0633736 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063654614 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064206356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074465746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065079039 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064155608 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063965481 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065978876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064144128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061687603 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073694895 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074592786 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065764735 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072199262 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064190837 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066017917 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075728346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058643065 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062795533 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062603401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062393355 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072015261 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065335883 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073949738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064300686 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063764342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061955951 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065413784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063514529 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059144076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06252013 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068647879 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063697358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063687253 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064902257 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066971537 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06518992 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072987069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062623059 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063935161 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064377521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060765719 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062642933 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06265301 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066018333 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064673305 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061363843 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060938016 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063271726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064457397 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064930355 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063301484 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065046998 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.205671019 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063354527 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065767839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067972047 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060336638 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068795224 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064906019 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064389609 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063628048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068215734 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068112181 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066468533 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074323491 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06515235 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06540306 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066086997 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062799559 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064724259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064501632 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065506502 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064337733 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066849322 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073074223 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06277059 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068166291 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065137234 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065467474 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071384543 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066413453 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068057214 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071999571 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06522024 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065824223 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072819742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06959238 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067769237 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066608606 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066388027 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070832979 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064278235 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071225112 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065778141 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065740008 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066969271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063545432 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065290198 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064801258 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064297288 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071078058 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065982324 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064882942 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064302388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063027043 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065619319 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06922906 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072215319 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067271481 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068340095 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060085859 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061754684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066117391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062494906 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066647034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067140111 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069680912 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067316727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064934728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063843042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073500416 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070451955 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068139643 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062716867 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068298972 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065744894 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066477079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065625488 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064624417 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065598124 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06824956 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066399712 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0635576 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07191298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067920561 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065846332 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06683462 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065766637 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065562341 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06040502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065562757 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067089155 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069899938 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066977408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065293767 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07571379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062835254 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065521092 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068652974 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064440077 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069426323 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060633064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066349066 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065868287 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06618392 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060447394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064182956 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062931389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067515769 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064265908 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060319271 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075721247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074073791 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068142766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064169732 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06336166 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059910957 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059657021 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063494927 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06496625 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065118708 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.073173508 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063321921 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062805447 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059215369 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064297401 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067109097 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067045081 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060510451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058259361 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061533264 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.197645982 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069328206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062819817 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063738266 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067127134 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065722253 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061154526 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066772651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060134142 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067104957 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075943912 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063987724 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0644984 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069280671 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071430616 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064486018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058793967 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06410107 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066276844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063800796 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064983599 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065021539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078248398 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066068033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062440632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062982809 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06645356 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063184796 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071093656 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063927247 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064366998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06739226 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.064936398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072474675 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065953999 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070315556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065919214 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066038978 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062252247 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064153472 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063712725 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063898901 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067166638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066343472 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070522231 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073042488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064926299 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076028937 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074262853 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066984737 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061982309 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064916479 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064488876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060437167 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066685136 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0633721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063553794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063427554 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064042159 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06578663 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070649414 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065953266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066269337 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065686225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058994841 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067454431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066738409 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066107798 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061226231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065076531 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066091488 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.068809596 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06747015 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062182685 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066792689 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065841369 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065309503 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.05994367 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070697399 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063582012 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066321116 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063921966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064692691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065504922 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067683691 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069616018 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065688472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066621826 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068478207 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066732687 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061800349 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061870279 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069540164 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062785318 seconds)
  done (took 41.441597743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095999359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059560931 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059576544 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060689955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072191548 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061547725 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060146986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061746017 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061418477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063950585 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060728815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060318507 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069168934 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076627503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072279007 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064867013 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060259308 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06114404 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0602941 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061244463 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069498896 seconds)
  done (took 2.711555118 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070225663 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.066897964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07040117 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074269876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065787495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069191381 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071371083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068727902 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074341875 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065575481 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074293658 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06922128 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065630656 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065543509 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06538996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069018131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074338811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065634822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069201241 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071516658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069150471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071017485 seconds)
  done (took 2.844995964 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063742366 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062133358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.063889876 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058496915 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063218817 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.059203455 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06771386 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061961112 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06805346 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072345165 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063003826 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06325415 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06568678 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.05920401 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.063887941 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062131275 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106564453 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067426185 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06409406 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065086097 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.059746277 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065365025 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059643292 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059928233 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062885964 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067353327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063931378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061944071 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063774871 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062748318 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063733979 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061384506 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064878842 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063960198 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06281625 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063172624 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063455669 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06402945 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059434779 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061829883 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063961195 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.059990616 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06451246 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064810027 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062047026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062021614 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065249543 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063827727 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059275886 seconds)
  done (took 4.464207228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076321848 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104464463 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063991688 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084045406 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075930451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071958115 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065931594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085002845 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059994016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061007007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07761178 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075639891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062335696 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066908944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068370357 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062326633 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062853371 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061159885 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066074671 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061769145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065829211 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06832131 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076227007 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07499637 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065633077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06169372 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062282214 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068273226 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076563264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068583658 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06858707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069516082 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078824695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065782586 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063166484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065897779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079501466 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064423399 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066346507 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061707383 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065749045 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068057151 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070300965 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08022013 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06441456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068857694 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063512953 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061156436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076650972 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066206962 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071252956 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077931637 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067589503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064123941 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068809642 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078372493 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064096049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06195467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067028689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076029882 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061503442 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067508052 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077374597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0654378 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070863522 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077816628 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069184601 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067548116 seconds)
  done (took 6.182602843 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071283239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.068092694 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078348867 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079217427 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070725181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070426928 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070714709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070403895 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070349647 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074896884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070355922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091784588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066110928 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073169656 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071025748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070932762 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070839388 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070565279 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070642338 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07058838 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071087398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078334766 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071127466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078143285 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095283558 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064039203 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068673371 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068843719 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078046242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069501124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075753423 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070564141 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070979678 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078422331 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077755283 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070749872 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063391621 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07009842 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070478235 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070986369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066034209 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07861735 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070512124 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066104821 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07059041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070630532 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078521849 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077589569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073493079 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075240049 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070664855 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078826425 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07056519 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0704373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077219594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102910954 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078443317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07848893 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071005619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078564064 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078755729 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085154798 seconds)
  done (took 5.924491999 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080100137 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072004081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073097299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060234698 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062555186 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06871758 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062661877 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062848885 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073725615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073155734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075800178 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068858521 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071587286 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075688465 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069051879 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071886663 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068386905 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068682168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0732353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068511363 seconds)
  done (took 2.74666955 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071565331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079804239 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066130173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070780218 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067916442 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070221915 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067325036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067469661 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065432208 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067638808 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074492018 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074441035 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065641115 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0702353 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074449222 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070178361 seconds)
  done (took 2.459820448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071342696 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069229857 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078270748 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064498704 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062607358 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06107303 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064137507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059762076 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061038385 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076142579 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064318368 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066444897 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064149583 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062530065 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061314149 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067129309 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061151844 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061641132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0639101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076520781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074886456 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063145795 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065034318 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06417242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06465637 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06935283 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063842619 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0618315 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061689228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064798697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065270585 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067567709 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061356373 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062572444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062490178 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061500133 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063708333 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064030334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066804244 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063905259 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062151643 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063857871 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063825371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064921431 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06019955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0643392 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060829494 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065825938 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061901703 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064216812 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063843021 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066071076 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064599934 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070793772 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066682828 seconds)
  done (took 4.911876877 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075646229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066270986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059125313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061179663 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066070786 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066305815 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064504768 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064145234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060560367 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064087074 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06537652 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064332463 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065809978 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064359713 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065744492 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058449399 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064226413 seconds)
  done (took 2.508628302 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067442914 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062376243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069730082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062348322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062908991 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064595824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059002538 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061353619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061484702 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062120074 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062625726 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064861617 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061104573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064447513 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062339573 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062228092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064252593 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060980351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062757689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058859815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064429035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061312885 seconds)
  done (took 2.724858842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08799098 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078532545 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133594021 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075135284 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.079624509 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068517422 seconds)
  done (took 1.865977769 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087265327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075278588 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063105907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083168021 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069772996 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063537951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063825497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063879541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072327881 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072239835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063603715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072127679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072183628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071336187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069570463 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069268116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063668939 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063997984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062813458 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080369143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063947862 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072284203 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063981696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063467106 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063810928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071652137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072049033 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072221804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063698537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071982667 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071452106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064719024 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07393848 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072474409 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065599366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072437644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063856009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080509697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069734397 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071525964 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065490333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070348402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072361259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068398347 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07248055 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06421487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068678702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064294734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064463084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08228017 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069733274 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071932906 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070018985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072258565 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072636201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083037477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07289466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072331284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070764983 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074882853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071677415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069433501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07155979 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072263909 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069986619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071728895 seconds)
  done (took 5.987319394 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077715727 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082407658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064291406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072761057 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071408855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064183694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064493284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064597223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064540985 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063641271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103287123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064094418 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071595897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072365322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064102722 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063870737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064883268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071946258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063524934 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0818759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063958345 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07156032 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071708893 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071470135 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072555812 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069249352 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064075838 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064142132 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063877455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064259356 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068627175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064244718 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071843829 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063660309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071568588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064249738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064114679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06850081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063904173 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069695338 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071428003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080056167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063825085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063659131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072629208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064257547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065212774 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064452684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064028248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064808135 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073378118 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07291401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072511149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072027698 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064078538 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064318941 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06398437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064124646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063976236 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069793961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071495716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063782612 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081837746 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065423159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065585808 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071690251 seconds)
  done (took 5.898639943 seconds)
done (took 125.846693818 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.180726941 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.162779307 seconds)
  done (took 1.686482911 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065531948 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092884036 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073198006 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125952232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.062847719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096341446 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095957056 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074018371 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.063133242 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.062546373 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.062477993 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065119482 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.127467306 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063068258 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.062593804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065450229 seconds)
  done (took 2.615242217 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.093969394 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.152811339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.095590506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.061920099 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092657533 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.06946216 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061687774 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.072615105 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06768802 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06141562 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069120215 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.06710262 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061084778 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067011567 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067449789 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.06883568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06099726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.068850552 seconds)
  done (took 2.717388585 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097087162 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088219995 seconds)
  done (took 1.546135383 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152056943 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102223492 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140215258 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.336913195 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162965073 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.225453459 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123656588 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128603728 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113365845 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120075381 seconds)
  done (took 2.962796406 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.093066386 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148111401 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.249222281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.110901263 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068494467 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090845908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11208392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074686976 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076847561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076431989 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076533541 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072416602 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094699754 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069913281 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070027462 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072284331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098384767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.068947621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070843489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072734248 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09542582 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06257081 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07012082 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069307334 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073670923 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073709062 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.061840337 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.061937685 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072921055 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070698073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073692369 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090078695 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073664738 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102967015 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.066600213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10401302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072866414 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070492059 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070460721 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070106893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075047657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074922934 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.068828633 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072587082 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.061597981 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072832463 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.062203095 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.061836903 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074084711 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063325185 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074328615 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07329942 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102680723 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063073196 seconds)
  done (took 5.756083083 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097505669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10083677 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067735493 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108063853 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096576215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068446735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097231286 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089785232 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099128372 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066630848 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064820586 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06693615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079298464 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079938138 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109101066 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100572387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070430381 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067586398 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100081174 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.09872554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06485627 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09107596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.085534794 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097661285 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064173919 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066684243 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064404605 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066556928 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073459834 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075286005 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066034428 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076995635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080951512 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074819974 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063719381 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064255888 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064806687 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076321108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075825794 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075677502 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074405713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064426896 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0644136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065717143 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066166783 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065482 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075681729 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07759211 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075054741 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065768496 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065891605 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064428781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065714298 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076828623 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074386663 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077510768 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076476532 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064948888 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064630839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06913503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077033884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075609644 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07536513 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066299462 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075754092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064623472 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076495478 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080794107 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064855846 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066654901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064865916 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066074542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065993753 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074781399 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07432444 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066154777 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065829603 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064712203 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076560432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074882915 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064436672 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073633943 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063768427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065084616 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065994528 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066076801 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074564833 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076816366 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066498179 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064759722 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065837122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065005325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063848987 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073293209 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076762521 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075114573 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073981599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064876872 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074160002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074422767 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065579484 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074678913 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063789739 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065311839 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064705682 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073159998 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.200690314 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076799892 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067226913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065458584 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075582611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079147792 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06551552 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077712763 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080273825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079637553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066457927 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080400698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065782382 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076725373 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066159255 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077244127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066002635 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076991511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06611027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064983058 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065757847 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076262288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066915979 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06498577 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066206478 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067025733 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075863981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079943871 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067222886 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078311969 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075539149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067269839 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076801319 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064897803 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076742212 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066634777 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065702704 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065812717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081713781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068085568 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067492995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068649818 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07990519 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065084767 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075890678 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074993686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065172099 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079163918 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076808083 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07391021 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077132338 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066860314 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065104719 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064707521 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065481884 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075983717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077717252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06737906 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06655281 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076641059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078605676 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064620766 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077734616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077797908 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077987948 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067260006 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068315869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079569021 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080526981 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077789472 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077245723 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077714796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067472296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076374349 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077137237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066660734 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085048938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064501377 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079928535 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075838085 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073450933 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075268875 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07688804 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07709612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076776643 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079527439 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064515059 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064609161 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077184876 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06650898 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067010947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075331308 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065925977 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066466241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081518253 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064998952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076858481 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064324599 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074272239 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062495268 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065029209 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078678229 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063369958 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064697262 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074537329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064642924 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072571037 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075207328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.203629458 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065468895 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066521796 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077693567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075324507 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065162937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064740647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066568199 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075189818 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074304336 seconds)
  done (took 17.93868815 seconds)
done (took 36.587696278 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206734672 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149776236 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17612912 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115155157 seconds)
  done (took 2.108232672 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119551056 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097274718 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092728285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063961675 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100898665 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062055838 seconds)
  done (took 1.934078973 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307584964 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207401752 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179072182 seconds)
  done (took 2.084960722 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195290092 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184277034 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388856179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251673506 seconds)
  done (took 2.52498278 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140277002 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086418068 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064162907 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080608187 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130614975 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157097006 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098436833 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12294013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074867063 seconds)
  done (took 2.404447685 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143540347 seconds)
done (took 12.601841968 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193676754 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125600319 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146525824 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098699939 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09742777 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100802683 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076883203 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.180564809 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110313795 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068391297 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067511397 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.074329961 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070657262 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.190848053 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.227159873 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06428769 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162865008 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.234286139 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071709608 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.200015215 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.106493691 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.215901926 seconds)
    (23/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077700934 seconds)
    (24/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.152270592 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072998192 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108059595 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072561981 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066187672 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.151377306 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072978573 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207168189 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094009298 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081367832 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105510797 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174657687 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.182993953 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.061428186 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067739636 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067991668 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068758786 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11853773 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063209373 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176120012 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0840133 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155850558 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086244842 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146015147 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.103172378 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086813811 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086201834 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.06888356 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084008261 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088867759 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092735424 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.068354627 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166880228 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135171131 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.048462754 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088519403 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132387371 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0647342 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.165792761 seconds)
    (63/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185814929 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061722846 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.095850264 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069363453 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197799831 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.060969863 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086063732 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1501144 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08288586 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170060782 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106726143 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063180591 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.051003808 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08511775 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.06272566 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181508454 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.048254836 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085063546 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072085695 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069478829 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072723018 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.144946221 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.290998171 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09266386 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062988865 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061531049 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087429815 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181213468 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068026918 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.171440824 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072904763 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205843355 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070769118 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048381103 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.182789867 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.069068675 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076949122 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.069746781 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172688214 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.147964524 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.04920924 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071598191 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133192693 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181642591 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177752414 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.051505831 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068353489 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.048000199 seconds)
    (111/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.049553364 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073151883 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065065557 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 0.139233342 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070100923 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069540114 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089117164 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.049579366 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.048561008 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.047851346 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067406625 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061971462 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068354755 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07310293 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.146028551 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065625884 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119135172 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068207383 seconds)
    (129/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069072916 seconds)
    (130/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048513407 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.06977049 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076678649 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063066841 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077036032 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062375478 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.047831249 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.047972807 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.048001417 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061668517 seconds)
    (140/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097792436 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.061719831 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069163315 seconds)
    (143/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102141908 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134363946 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085555932 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074089473 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.047651519 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068709689 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060931878 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163932296 seconds)
    (151/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.104965457 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069948325 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.136334321 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.058609361 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065688703 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065117357 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049981979 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063900875 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.154530324 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062709153 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077651642 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062424595 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09235485 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088372446 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.142909152 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069742658 seconds)
    (167/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.095801792 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.058398616 seconds)
    (169/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.059019415 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066798224 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.04931042 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.04796073 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068532694 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080577381 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132110197 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113730746 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169348594 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071280875 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071471882 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.095193891 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.047829121 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.120890592 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084285722 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087321371 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.160289118 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.049009813 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05172489 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049775594 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086633788 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06226877 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06023149 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111614821 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087073127 seconds)
    (194/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.058545888 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.048301255 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069493817 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.047919517 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.06886321 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070820304 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.333550233 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071553442 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.050533028 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.290584144 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107600567 seconds)
    (205/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059802397 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070657696 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072432255 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050143054 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066429214 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050110278 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051434082 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085378722 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.13700898 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048614049 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066989509 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063364328 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092693829 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.155881919 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06345729 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068212123 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149494935 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051413341 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068919544 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06662255 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068037308 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061640354 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068402821 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067834761 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.049988108 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.088761442 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061675734 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114412613 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128223924 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07519855 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.048064388 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.049259691 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062972352 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070597832 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.088164037 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06641099 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.108755854 seconds)
    (242/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048156866 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062081729 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085033229 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.064447704 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.06908656 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.048110896 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076746662 seconds)
    (249/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.047940621 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.049085936 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.04942785 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062377565 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.04844388 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088953065 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069946149 seconds)
    (256/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.058023825 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049275965 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068434239 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065051886 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10031838 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083520471 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070870992 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.048156307 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050392608 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06129784 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071234281 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.04865766 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121467942 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13469962 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065528715 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064049526 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066984192 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05053316 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064967339 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124811139 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064387549 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062833314 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06334479 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052293772 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063754395 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.063887266 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071560296 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064313243 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051402034 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062431562 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141887744 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106339544 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049846951 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062173933 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064539574 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171781498 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071371832 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 0.126328182 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070669405 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078607711 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069758999 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065285238 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119112618 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049882614 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050095524 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070719232 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062242132 seconds)
    (303/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051360151 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069525356 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065420505 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051574642 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052589025 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089071397 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087274746 seconds)
  done (took 29.599430635 seconds)
done (took 31.007916657 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080766023 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087734912 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07063866 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087938399 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076613207 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.071839001 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068191976 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073606333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075598609 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077507451 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074103206 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.050986212 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0701065 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070341603 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070772987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086846335 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0736882 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.068890642 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0688105 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061074306 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069218685 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061821312 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063605454 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051412517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07425758 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.067938157 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.068131111 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069863804 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061990842 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062147293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065725275 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069396585 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061802135 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074039642 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068226496 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.068903691 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070477439 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07243556 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063824616 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062090789 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070493296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062097109 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069053445 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069399727 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068059591 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067445163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069327179 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073917141 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087294689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065726177 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070477132 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072158343 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072095671 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068273824 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065568246 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069464018 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067267709 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090550307 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071208547 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066847898 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071854744 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071873497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069261634 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071000513 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070838443 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072873935 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073791769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069863597 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073003003 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069746334 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063700917 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071332841 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067127349 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063522286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074021236 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074681737 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062685972 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069818706 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070964599 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069591136 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063094044 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06663877 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065334018 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069827892 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066304308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052847933 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067253034 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069656537 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062678364 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070967823 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070117963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070029438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065107771 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07342155 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06334437 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068961953 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063798734 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063899141 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06519431 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067786234 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063486451 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066752149 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072683932 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064999587 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069550168 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077086724 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063495394 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070216521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062870991 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062881035 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077528146 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072841799 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063708285 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067135445 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062839975 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071220691 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063131154 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063774991 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063281246 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063487579 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069506851 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063937272 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066543323 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070938375 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075994531 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062802628 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06674269 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066189863 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062874871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068261753 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062907358 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062675447 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064535006 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.059412074 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065407557 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062863364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069672553 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201964218 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069858288 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06406119 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070153616 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067142037 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06813397 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067106095 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062076148 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057177898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065491112 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064402871 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063755152 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062196003 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063524829 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061929618 seconds)
done (took 12.040110425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063100306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137948121 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095217225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.0910328 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081792364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062601572 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072540966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097894625 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.063920644 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098537821 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084090287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081313127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108208949 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061245861 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062045053 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066268239 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063688195 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078385882 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097399982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082316716 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111307815 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061615322 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090509902 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085743566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083031355 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097388221 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063124485 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065963074 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065825932 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08765558 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082948757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066095546 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065181663 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098933728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091112712 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081052901 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062949077 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079044907 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063053327 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062415871 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06369236 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.093817882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075810658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076380161 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066398267 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065974448 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063534274 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079427649 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084712551 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07475544 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082557681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098477416 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065076574 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061648112 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061465973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081870951 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06180169 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065154051 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063187468 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067104204 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064689479 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067242754 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080065684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081006983 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068852507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079307528 seconds)
  done (took 6.582147384 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079874231 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086003124 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078645829 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079573909 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061656041 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062497483 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062455519 seconds)
  done (took 2.016114816 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062751976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084320153 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085340266 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084847859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080716644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083292203 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071870607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062887202 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.077190241 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063739665 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083400073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098948763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064301888 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.070269283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086714998 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062664283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086121311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063042546 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.065833953 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085899839 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.064979218 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.077956955 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0663202 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063282758 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076917868 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063218603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109093526 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067349554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064995164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066608385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061346287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103416651 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076704417 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.071808621 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062960448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077425376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077801463 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06175702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079585435 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068766318 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07790746 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065446374 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066170212 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063448039 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068660743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076170318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066535514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066042418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068114189 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085134212 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066005943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079489194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067748811 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06610321 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06461862 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066935818 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072912394 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064208417 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082805702 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065202262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079447102 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079143659 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077031935 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07945357 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065404667 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07650095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077052177 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065656831 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064747076 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066400054 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07904707 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061618623 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066773465 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075701203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06729159 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088363436 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088612048 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066371616 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074842867 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065280449 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065410235 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06526378 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088481513 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067726317 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065073987 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07010367 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067727377 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063585805 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064243607 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068645702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063120003 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066715951 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067887835 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0685632 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067217873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080864977 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067140323 seconds)
  done (took 8.512291824 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065248032 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064635404 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065740315 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064384736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064781024 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064171829 seconds)
  done (took 1.918101417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089965757 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066501935 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076554021 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069479285 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101430877 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083029374 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083461986 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075195733 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080266751 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075284842 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082861873 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084812732 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089025017 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069206377 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083378369 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068650681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083317116 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072242989 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074996749 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06947388 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08282097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069125932 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069477086 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077897274 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072135214 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068838159 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063516469 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075167585 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074524661 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075003394 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068825279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072179812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067319774 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074818239 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083456434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.066905671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068598892 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074016826 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068948792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071998924 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08415797 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069444514 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070893233 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073321513 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07471479 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.066728727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073164138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071901568 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08224361 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073042688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073780292 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067941577 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072151309 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073656406 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.066871533 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074450043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073533884 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082629263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068940518 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.067215499 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0659133 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072166362 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073889187 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071961403 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075425635 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073182622 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.066646263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068770274 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069332041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068342243 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073878985 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065966466 seconds)
  done (took 6.83871571 seconds)
done (took 27.359956998 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542421128 seconds)
  done (took 2.032201985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597582529 seconds)
  done (took 2.111289181 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.561622539 seconds)
  done (took 8.072603768 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389916578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484581242 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.677003234 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126388343 seconds)
  done (took 3.22697223 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673251208 seconds)
  done (took 2.193343855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.203866432 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.191798204 seconds)
  done (took 1.925761215 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368495563 seconds)
  done (took 1.880374391 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.088908953 seconds)
  done (took 2.608281495 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256972877 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16062064 seconds)
  done (took 1.934648287 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459808876 seconds)
  done (took 1.974809334 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.804321668 seconds)
  done (took 6.32327629 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.201365469 seconds)
  done (took 1.761442194 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235393557 seconds)
  done (took 1.75301059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.684942518 seconds)
  done (took 3.207694879 seconds)
done (took 42.522321816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077507253 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078295314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078625948 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07480126 seconds)
  done (took 1.821229064 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074031859 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070024703 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073279473 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069505714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07291609 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069319362 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071080306 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07354751 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069336833 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.06978627 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069487922 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069179843 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071482166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070829357 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067924599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07194299 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072885662 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069315049 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072164904 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069105405 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067601707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.071795138 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071533309 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069095573 seconds)
  done (took 3.224480754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074807949 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069744176 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070842096 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068918862 seconds)
  done (took 1.817153615 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073963556 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088835491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086140032 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074417698 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088846746 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082757707 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066034877 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065818361 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070105416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.074205642 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064859977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09287305 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084748334 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.073475623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.076218382 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062794866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065342809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083476209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07428642 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074438119 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066739452 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07378309 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064654273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084752623 seconds)
  done (took 3.343061253 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073628867 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099474325 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074549584 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084501621 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086660862 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062302651 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071333525 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086137162 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119436908 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062385357 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067061458 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062484148 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069552445 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062036135 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.073044227 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101298275 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105199419 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065404897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092385904 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062344723 seconds)
  done (took 3.118985839 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069035978 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066345102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062707732 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065290776 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07493741 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069548511 seconds)
  done (took 1.946858347 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064863528 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06432688 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064132135 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063266289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068629006 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064164812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062672479 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06459963 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064372853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06394407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063440193 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062890744 seconds)
  done (took 2.306093963 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192407832 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065213739 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065632092 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062809791 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067058289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063008495 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076508456 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064533198 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087068859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063343688 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063217043 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065056611 seconds)
  done (took 2.472768413 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20150479 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072865821 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232175196 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133168539 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108770108 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111736576 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100668766 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110287256 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139451028 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098483448 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163958171 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161285743 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103690641 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133844962 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085703482 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094214702 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152106198 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158432909 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100033095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16169077 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140013127 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121152443 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143364803 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097909852 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102582531 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118241598 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067755154 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076829516 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166541247 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128128397 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142825952 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107364244 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090287752 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172477164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167501229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138685872 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130603472 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080697737 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.098627287 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129378854 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198695959 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085721532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15767911 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102490727 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214981331 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130654625 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117547462 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116942739 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103374165 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08734294 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143602422 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179660383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135481213 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083312996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10812788 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111857982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112199865 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100004893 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178142127 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157056203 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129109273 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068242487 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094506492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149455387 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12784226 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105170739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122926264 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090798585 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129743462 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150984959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115483473 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138877078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124992309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085820559 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115820234 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13639234 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124653457 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166299222 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121364377 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069985592 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121505779 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10038448 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078534545 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137403419 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072241582 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171242734 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09496874 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102397531 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109332792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105138057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10605221 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156711577 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139741579 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098844652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061024491 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241418455 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118511617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144618311 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084519825 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106049733 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113824615 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074956056 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136993876 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072443462 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120114677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.072154729 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121998317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128626839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073136623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118680456 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097896983 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096762233 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129583601 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15618891 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086980717 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07947115 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16369444 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11879261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100657312 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140458015 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152051676 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09589271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09982333 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146303701 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176677388 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086504712 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159805348 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104885793 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080956129 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.083976372 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121459687 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109760491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119213438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079649575 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115448815 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164671492 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07209389 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092018726 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130515716 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076147536 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077943285 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100393413 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096825446 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091290811 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096622656 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100857679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133641348 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118956187 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101118959 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121117443 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093990076 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311538697 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087548071 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097699333 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101077637 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067631245 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135430284 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154453954 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07742483 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160941779 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120840518 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103889045 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115873714 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079946129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136959185 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075695103 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067205645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141030084 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108834439 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107037143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147697226 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101937787 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125084569 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116049725 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132260369 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130701867 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126037519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102091062 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084556857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108337735 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122387251 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070071084 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088958792 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077745262 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099950852 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092403745 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079927726 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139038383 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121144414 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096936949 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108315179 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093643498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14355303 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073396526 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125633001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115902226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09093109 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148686012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148098738 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127474092 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095994775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067226974 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070541888 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085972295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119090378 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079350463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079675765 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110782273 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139458605 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121340394 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12886718 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105906577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113634359 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147031511 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065368735 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.110167297 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138954459 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113653645 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099610183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084859598 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093685863 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135093412 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100565742 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165933511 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104872176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116212502 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141723181 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.093827767 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074299765 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095692177 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12379156 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096171245 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132747412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091935349 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081070434 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100721073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.06881973 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090785506 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116505489 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109241472 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12386867 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10624225 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121782876 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071717124 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106201622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111270973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111886245 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.058766768 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109685492 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147479088 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085907519 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109269743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139742896 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073364411 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.115997658 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159505369 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131912546 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077856687 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360387252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117880379 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127734335 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120093423 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139256139 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10801492 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134469597 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107978721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084579647 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085756929 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09621288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102680909 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093662466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10634003 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113794689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093587113 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130541359 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101467645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10804987 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116290864 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09447581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087652347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095959101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173193891 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116687558 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168506351 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097101015 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142517597 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163535185 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072451728 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076985137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074989388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137110717 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080918064 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129422963 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.094968478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103954841 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120737261 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139065823 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092005353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065485269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105508378 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130989384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108885933 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094860664 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101559266 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15941615 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097393422 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076539866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110541704 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10145161 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098320223 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168286973 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.058003112 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09446787 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07258837 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0777198 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123888501 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297387991 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077957114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099442038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115623371 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106893145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124616397 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099126242 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09558757 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111649618 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147080328 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12542223 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086940169 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109096504 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126022592 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152769285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101367948 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092591305 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168813974 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148049631 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156336448 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085342614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111263668 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111639354 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104898164 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136171511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080542402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163705972 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079384376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133313129 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101260012 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087049487 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126619728 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095634627 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084946313 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161706945 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113922901 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0797579 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074846968 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114686655 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117523154 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103845885 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072560689 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13679629 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070274639 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129278558 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164486296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078060185 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101071292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092898849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076098638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104202339 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09854196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086010674 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239227461 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172454287 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08516342 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147263078 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138567573 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111684365 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133245078 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097416589 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632900657 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074657171 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148885749 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114032005 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169818449 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094927377 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11470551 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106545868 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121224966 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140829808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101599599 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171869264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128475014 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112720306 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076791404 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099215879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099463974 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085764982 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101795397 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110164213 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112870563 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090176934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112498746 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120105718 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078798087 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092045726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152342394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113711042 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140431634 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137187903 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081981715 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114494521 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135989775 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077152138 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119714044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149302411 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102262349 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094783839 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077013785 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098430058 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16536071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070114549 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157245279 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261378749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106544715 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110371311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11192299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126914929 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105302365 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118581904 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091194691 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107493243 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108850606 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079039099 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074136485 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101447248 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108670813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094339797 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095349643 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095535641 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148297671 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068823043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092969223 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099825977 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142249218 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171326876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084673569 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079841284 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11638124 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109843574 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109912378 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117354122 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076269613 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079198376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078879858 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073805701 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104894334 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109108781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10127315 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108061248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160279729 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079515289 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.216929464 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092299703 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101366985 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066165833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075469467 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092717991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094254397 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105241544 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09744845 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166434448 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092490748 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087079059 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089838749 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070379975 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079782735 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125392051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107938127 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114873575 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093420904 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058967413 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105817962 seconds)
  done (took 56.906455697 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107010105 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.079853867 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093527358 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146356358 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118839813 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208750229 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154919454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195950498 seconds)
  done (took 2.793629051 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065143816 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091064294 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097869511 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079896812 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063129898 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065977197 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222447214 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0782874 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06346749 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085231667 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076524733 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066243719 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418576776 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065405809 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066485256 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.059846773 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064485416 seconds)
  done (took 3.395488746 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.360889566 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597912992 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368793724 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070193104 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.426359471 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08816388 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.047001595 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126731121 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069816067 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533855619 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704240536 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124399529 seconds)
  done (took 18.191020123 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072230699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.065944289 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079540259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07998657 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068927882 seconds)
  done (took 2.03728655 seconds)
done (took 104.953686933 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076957625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372690148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051050347 seconds)
  done (took 2.122604219 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079654569 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081229977 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081075078 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079679128 seconds)
  done (took 2.000331324 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071119681 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073333424 seconds)
  done (took 1.816442144 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220302489 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.155496568 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084099533 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078373811 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075966966 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075824871 seconds)
  done (took 1.908474416 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069449412 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072525479 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069605153 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073859694 seconds)
  done (took 1.958534857 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073705405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.049620604 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052397114 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.053057992 seconds)
  done (took 1.902245252 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08267318 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.075499041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075353205 seconds)
  done (took 1.907649644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097383505 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081185152 seconds)
  done (took 1.851903147 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078306718 seconds)
  done (took 1.75332239 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095562331 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110080295 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128267868 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107098991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1348128 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10529452 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082256839 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083336399 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.0736279 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084305622 seconds)
  done (took 2.678824394 seconds)
done (took 22.104518321 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074221919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.357352187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357676733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08632936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665150457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353117849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980729413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088904353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06450618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08116296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646619276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970491567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317772189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959480465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415719998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648512954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065396847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064891809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065257084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965248431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064414129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064714629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06568644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645572657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367470854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065069596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.415890626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065070028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066774105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35127938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065040367 seconds)
  done (took 16.236688953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067718348 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114497158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070413974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080814539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068049293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066505411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068491799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065752344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116786883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065013104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081676867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064723928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068637726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065506731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084164708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065042368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066044501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065228075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06531757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065570717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08328416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064493642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064970426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065309753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064848166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076257621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065037958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064674298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064994899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066844578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067308856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065311813 seconds)
  done (took 3.978272365 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111199303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121487778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072069472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100565204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110236328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066828593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140144636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089083954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124447741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064626315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081201711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064865007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097621359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065680329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084320302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066074701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065860805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065557406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065155019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066009439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08376912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064817955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065297434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065687317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065855625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078171627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065849846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06577755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065673448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067788736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068566116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066281197 seconds)
  done (took 4.240771878 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069493811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071685522 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.0796694 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080466585 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066441774 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069222286 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06961417 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066881016 seconds)
  done (took 2.266789607 seconds)
done (took 28.400883824 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075260499 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065594233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069323701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078191516 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070780466 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075175044 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064710311 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071856447 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069166683 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070068455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071750218 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064307012 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068069536 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064004851 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07037255 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064404353 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.075890428 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068787325 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.075800354 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076123704 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066967647 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070234555 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070977837 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.075835969 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.075982785 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.076618387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074884083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069750852 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066548722 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067710521 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073494398 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080560674 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06556959 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.076003809 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06541501 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065091945 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06855223 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064863432 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076263462 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073617622 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066553804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073269176 seconds)
  done (took 4.647151718 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084205304 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088119241 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081609304 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.058894772 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.062884575 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061590485 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085440497 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056382917 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056434915 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084209528 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052754923 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05631377 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059627142 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.051205905 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056226603 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05416859 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058286733 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052917869 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.055965985 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.056450383 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085101803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.050809929 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073554047 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059434167 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055629671 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058538636 seconds)
  done (took 3.360591201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070615124 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080501128 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.084688066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123007354 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100530913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073335682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076586454 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089454906 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083105814 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064149354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068241337 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09148748 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085202572 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070710486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06494673 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081664481 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07959781 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066409367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070577205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089680983 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082852501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082562039 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089702717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077921634 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064419154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067224291 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069229862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078402525 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069154347 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07384604 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06873767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068381658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066708365 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076038973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068591913 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06678609 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087968488 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074102904 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075064038 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065229435 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.068351531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065455808 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087933596 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12350627 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065459417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071316584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072308232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074006971 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064831472 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083220704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075601667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064129912 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06795034 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064329541 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064758923 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07733574 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066824111 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066689317 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073315746 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067924055 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086328972 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068152465 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079220565 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063918321 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07185365 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064072234 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06531563 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063483747 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.08914272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.066044318 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.104846956 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066549858 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065331174 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073178098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072406131 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070517052 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064927647 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079570745 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075066788 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067945614 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073097626 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067977797 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067215329 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084713827 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066934533 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065802196 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065663955 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070581489 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067238196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065893871 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077118773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064415874 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067402757 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081294262 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064110084 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066134963 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070537122 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069181758 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063887805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075731319 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069157823 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065033731 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073291474 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06445164 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067146907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076181614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070696802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063692633 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06907282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070501523 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064808591 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065996887 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06709514 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066310594 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072415522 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07061815 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068687345 seconds)
  done (took 10.277481003 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156293092 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161786629 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067458483 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141474351 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073083808 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075771528 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143844349 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.091401942 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064667671 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065184549 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065801311 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106443053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102614166 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112189932 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075284546 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064759302 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.079947908 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110380631 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148420564 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139328196 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080380705 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073431502 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066919574 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065885991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067519976 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074954167 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082338416 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073389153 seconds)
  done (took 4.364344439 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077844784 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093618249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071001881 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086254614 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08822683 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064388253 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067097558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066464766 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077597007 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075919535 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064777977 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070359888 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071706083 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068093807 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065453458 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071538393 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072185322 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066087309 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067922682 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070205332 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074559983 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088983272 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068711013 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063913625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069537849 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064082093 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061198519 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081772407 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065105856 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088197662 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062577395 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072351682 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078470622 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065630029 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064406678 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06460539 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064496273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064240339 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066468436 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063145503 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063226912 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054812313 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063806272 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07636748 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070653465 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05325444 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069465219 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069792926 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06937081 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062045791 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067076987 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066911758 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067199762 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071549234 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06896071 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069377744 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065686074 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070184142 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072313423 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064062957 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061504703 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062973384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069125761 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062437057 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072302652 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068872015 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062896464 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064324583 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06643094 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070647222 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064260255 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067409928 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061957911 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066169913 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068866058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065982123 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065170663 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063111903 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064225905 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06465663 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052567274 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064292194 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050619298 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067396959 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062775404 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063041479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064069147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069305827 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076836367 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065599181 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070395251 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065488125 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063542805 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067489677 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.057427034 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067087928 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079395602 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079810233 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064650086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062775938 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078713937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069335489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063647583 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.053078635 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071590409 seconds)
  done (took 8.875336824 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086646985 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067053723 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08045046 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088462868 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082874588 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071826475 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073314645 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066749141 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079043869 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070742187 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073810242 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065147712 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074266333 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073922519 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067456965 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073807745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06909153 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079573663 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07907751 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065458221 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07260906 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076923072 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.086170297 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076974588 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075906744 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077023455 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08616756 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069268996 seconds)
  done (took 3.852860221 seconds)
done (took 37.064139647 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771068732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.948201959 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.772037625 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110146741 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.851424493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.00814027 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.931928652 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.768028756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.895324059 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802289917 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.046180336 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.87052082 seconds)
done (took 65.483598478 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.821360268 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914178286 seconds)
    (2/2) benchmarking "String"...
    done (took 2.045232302 seconds)
  done (took 5.667053408 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.141482505 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.354208608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.001716125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.768884736 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774685187 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.002201356 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.568948036 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299205783 seconds)
  done (took 30.479051073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.86965977 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.996024629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.429332632 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.46676042 seconds)
  done (took 15.516452072 seconds)
done (took 63.417017121 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.766811348 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810769101 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.77127481 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.753259995 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.827535304 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.789748701 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.294113277 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.840835412 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.772214587 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.758368499 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770040628 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.21058316 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.78078199 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.258821061 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.772905377 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77777601 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.800294791 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.280533445 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.926013681 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780790666 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.777260523 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.822723664 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.775894034 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.775839823 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.799111135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772505653 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213968786 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776350612 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.398428445 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.769464054 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.800094254 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.335897906 seconds)
  done (took 204.470730939 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.770845557 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.84915955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.93202657 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.810502378 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.273372325 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.97238982 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.912784959 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.308686737 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.777215926 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.806136178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.101865758 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.773393464 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.111034778 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.720897292 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.801248032 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.88422669 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.070851632 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.092132917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.807479758 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.969814606 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.774707712 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.025091666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.966415352 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.053668936 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.805535143 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.885848058 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.793870277 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.797703988 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.966742891 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.05548051 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782284926 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.822735536 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.909863746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.649677081 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.795441001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.78475876 seconds)
  done (took 171.328413077 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.320227355 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.772992469 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.77230799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773132037 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.786318434 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773096922 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.956432782 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895893048 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.240946983 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.202631227 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.8305386 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621066065 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.773214024 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840280119 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.785647739 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.772746262 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789247757 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.802387956 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772648758 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773595868 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896128274 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.785920829 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.009210573 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781027603 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.774914818 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845861016 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144297996 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774031418 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780329845 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.035233721 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.775054255 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774719299 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.676228305 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.176402246 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.863335574 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775217258 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781023465 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774898674 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.995313823 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775851443 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.776648911 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.778155682 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961246697 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.774606834 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899284443 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775417275 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.288448946 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774635711 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775796 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.429898548 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.491353351 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777799735 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774657141 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777341435 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.776335627 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.774610856 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.780800613 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.339808229 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.854807402 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777221027 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.777285142 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.777116556 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.778648172 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781025946 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.775521725 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776215922 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776360149 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.804088881 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.834495043 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.993417318 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.345441997 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899713904 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779172169 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.842870207 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869645214 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.775412954 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.775883325 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776166945 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.775732286 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.857993582 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.777910303 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.919151301 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78454781 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.777029018 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827980693 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.778054168 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.84624763 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.776882102 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.668184551 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.780259498 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.777800819 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.126527853 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844188465 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.77659073 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.77741798 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776858068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.908724806 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900343985 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.586643711 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.77893235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.435306927 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.780207079 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.925522264 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778995458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.977117675 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.782267998 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860276492 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783322297 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779250952 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778306011 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809507887 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.779343182 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.836236381 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.77752677 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.149081109 seconds)
  done (took 403.414080971 seconds)
done (took 783.298996708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.451713713 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.409230881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.525603343 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.430039895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.401034933 seconds)
  done (took 13.936005621 seconds)
done (took 15.654861741 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868308266 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.870178014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803958547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867847365 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801056588 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868454643 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8506759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.80627989 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.834905581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.804804642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835697884 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804504463 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791893043 seconds)
  done (took 25.527738441 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017714067 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020262981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849726296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012325106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826094602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.009026883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.939666944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929286197 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.928105041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796049579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7937295 seconds)
  done (took 22.843124231 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01758118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.014381339 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.857551551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021038637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831690728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.022045898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940123164 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.934639664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.93018727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796478201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79415133 seconds)
  done (took 22.879331014 seconds)
done (took 72.971219915 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.790066818 seconds)
  done (took 3.510431687 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.810063085 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.949985153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.79588287 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.793921108 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790185358 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790055315 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793587829 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.789294108 seconds)
  done (took 16.235489966 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.789532289 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78973768 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.787323044 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.790487918 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.787948895 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789707994 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.789550904 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.787212816 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.786894933 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787919703 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789716806 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78741407 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78975 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787959284 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.789672741 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.786121025 seconds)
  done (took 30.338705686 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789427674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787953362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787647372 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.789291534 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.788993367 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787614043 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789838005 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787640333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.788513911 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788242011 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.787598646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788152887 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788343657 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787457811 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788925941 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.78897245 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788108672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.789091844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.791959081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.788815392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.790554619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788766522 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789583122 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.788997973 seconds)
  done (took 44.655932427 seconds)
done (took 96.461614913 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.663885176 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.177265739 seconds)
  done (took 8.564601917 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.792638167 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.791459387 seconds)
  done (took 5.342817529 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.790883173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.79227465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.791217529 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.792859582 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.79217658 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.791885205 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.791408049 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792807805 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.792383113 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.791353116 seconds)
  done (took 19.643691175 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.791230737 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.791711282 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.788453625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79242318 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792021431 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.790567386 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792693119 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.79344784 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.792943692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796200064 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795008712 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791526761 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.793582472 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.789685811 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.792699417 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790146373 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790367949 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.789682489 seconds)
  done (took 33.97906055 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.79207939 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.793726562 seconds)
  done (took 5.311355944 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.790574407 seconds)
    (2/7) benchmarking "second"...
    done (took 1.789516046 seconds)
    (3/7) benchmarking "month"...
    done (took 1.79016346 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790452776 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.791088304 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.7909269 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.790092034 seconds)
  done (took 14.258933174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.793758793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.948134269 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.017794684 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.446641906 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.794558394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.797823213 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.729914889 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.797394512 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.797998128 seconds)
  done (took 19.849131753 seconds)
done (took 108.674014762 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.634927314 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.789606082 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.144342282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.839097022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.845005586 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.086554658 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.831515216 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.01752099 seconds)
done (took 42.914595305 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.872669394 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.32927369 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.361996512 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.057095731 seconds)
  done (took 12.47651939 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.775691658 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305156467 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823571431 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.384842839 seconds)
  done (took 20.028929987 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156484017 seconds)
    (2/2) benchmarking "read"...
    done (took 2.148545209 seconds)
  done (took 6.038145369 seconds)
done (took 47.145351546 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795782481 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.79749212 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796133931 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.794168646 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.796831517 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.793821303 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.794307048 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796703259 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.794330637 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.796808962 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.797075506 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.796320423 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796721921 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794644829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793514714 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796518242 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.793919213 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794465294 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794638709 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.794864555 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.796723765 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797429095 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.795039823 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794616508 seconds)
  done (took 44.822350926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.796990458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.794926234 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.796889166 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797576808 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795028772 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.797940607 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.797904922 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.79519439 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.798411539 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79777813 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79553088 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.795713406 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799051366 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.79534725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798522449 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.796091929 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799155669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795563012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797693153 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.795613336 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.79867429 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795715752 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.795132512 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797558893 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.795544121 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796202853 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79920192 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.796934722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799373979 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.796771606 seconds)
  done (took 55.639042585 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803359784 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.807037078 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.798840934 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.79859727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.799688817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.797983264 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.799190293 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.798349307 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799179791 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.800024677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.798881709 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79978947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799553681 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799246341 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.799592747 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.799329247 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.799606359 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799645911 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.79984807 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.799015377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.800292102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.798818683 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.800382236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.801386469 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.800715277 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.800144639 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.800299266 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799360218 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.800520169 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.801143248 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.800057302 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.801864971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.802383153 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.801691258 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.800508522 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.80139493 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.80481699 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.809186788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.801034354 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.801296353 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800985323 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.802143206 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800714726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800982432 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.801290154 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.801387238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.801283235 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.801245692 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.801087205 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.800996979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.801764893 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.803201196 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.800522834 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.802540154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.801848786 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.802349015 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.800847594 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.802529144 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801639274 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.801774186 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.802046535 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.801698158 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.802898002 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.802314119 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.803997462 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.803037277 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.802133831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.802314735 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802160131 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.803225683 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.802387809 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.802785642 seconds)
  done (took 131.419986771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.802466066 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801307114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.800117173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799720315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800823778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802540886 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.801337682 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803092067 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801128227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803148451 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802395427 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801742447 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800856194 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803721784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804510352 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801408305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804736114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801017069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.803823509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803909107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804246798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.801278119 seconds)
  done (took 41.385661298 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804056553 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.803944827 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.802189189 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804975922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801142596 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804685163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804676376 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804072498 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803970573 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801196794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801816931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803825595 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801819268 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8017747 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802300988 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801554689 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808877369 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802703151 seconds)
  done (took 34.197153172 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.801826194 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.801559188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80497544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802627288 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.802140923 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805406823 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802188941 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805484724 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.80411574 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.802573279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.804944619 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805324539 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805648866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802005244 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805895745 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802045559 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805973468 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80249405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806346523 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803717784 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.804243304 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805827147 seconds)
  done (took 41.424740548 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805870358 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806193361 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804774872 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803296042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803858236 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806329024 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.806748259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.803763517 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809910013 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.806947579 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804638628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806912153 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.803872881 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80515194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.804666518 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803811218 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807536654 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805800938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805856327 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803792463 seconds)
  done (took 37.84852932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807508007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808420107 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808241832 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809194824 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808910999 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8081618 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808039687 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808356842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8084462 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807534736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807764858 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808146196 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808143372 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808800435 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808412196 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808409788 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807954226 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80810262 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808904047 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808550619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809644531 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80943272 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808772972 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809917482 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808002141 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808315156 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809598216 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809104557 seconds)
  done (took 52.378605124 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810362012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807613972 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.805308576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.806132413 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.805884008 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.806561313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.807078453 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.806479623 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809844183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80702739 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.809120472 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.809789786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808611593 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.80939682 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809346707 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.808849503 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808996085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.807146083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807601343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807134611 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.809356814 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810134937 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.809413872 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.807259599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808049291 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.810088272 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807376143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.807924162 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809618774 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806645538 seconds)
  done (took 55.985252738 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.827489797 seconds)
    (2/2) benchmarking "in"...
    done (took 1.828763451 seconds)
  done (took 5.396762553 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.807515742 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810280913 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.809962107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.808137506 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808054326 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810132704 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810042504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807880582 seconds)
  done (took 16.213722789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.810931579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.81123766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811366325 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810307855 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.811859842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811308604 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815936243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.811981425 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.811089892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.812311538 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818880872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.819447709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.812559171 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810297916 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.810762697 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813085185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.811460907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.812850491 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811871503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811791642 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814002732 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813234619 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814166454 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.810180576 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81372085 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.821829519 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.816350944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.812648572 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812547342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.815998093 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.811599218 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.809589145 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.812898365 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.814023938 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.812216166 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.813494177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820163315 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813035169 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.818170147 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813597914 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812477227 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.809830605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.813379991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.814984695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813248164 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.814572511 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.813564188 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.810229957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.813068298 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.816732979 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818937983 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81343073 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.811090552 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816807154 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.814204255 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819673018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.81438599 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.816672854 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822841152 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823459155 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.827352325 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.821665414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814740007 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.814120495 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824109423 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838738385 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819737261 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.811431488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.812317744 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814121774 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.821053334 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827046835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.824003557 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.81485425 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81638512 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814286039 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815770675 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815402204 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821252792 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.817866539 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.815572819 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816293803 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826029094 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838443799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.815210685 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.816327677 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.815634774 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.816688698 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.815834165 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825224636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.81669733 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.815776034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.816173978 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.815110393 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.8162009 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817244773 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.815301012 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815907928 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.813628982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.816510027 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.816556275 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819597372 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.824611231 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816175228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817550242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.821528922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.81622541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816191451 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.822024731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.817197718 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.817099933 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.817405196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.822192135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.813367985 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820663026 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.825582459 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.818583979 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.817445043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.817584196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.817030024 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827081986 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.842940458 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817515262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.816545371 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.821919951 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.8300543 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817712204 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.820734736 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.818220447 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.814597964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.814891044 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.820653347 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.818208936 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.818366234 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818961719 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81784577 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.814743913 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.818740617 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.819705055 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.818976339 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.820229021 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.818796825 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.820855288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.82049637 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.819049061 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.820192804 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.82406136 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.819124379 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.820059271 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.819960237 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815867075 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818559259 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.819726551 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.820091709 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.818903581 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818700875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.818854907 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.818624979 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819218412 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.819236639 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819053226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.819380558 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823478452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81987221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.822440146 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.818831828 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.816877738 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.818468307 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819124287 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.818167691 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.82027053 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819052981 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822977627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82793248 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.82051785 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.821555965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.822076507 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820032757 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821195449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820738416 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.823015718 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.828023752 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.82111878 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.825746193 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.822146929 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821157266 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.821103847 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.820897143 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.821373138 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822069372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826090801 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829695156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835965617 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831013537 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.821781731 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.826047643 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.823065939 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.830533688 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.825104235 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.822420628 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.821919352 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822014206 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820650441 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82189155 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.822123857 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.821929712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.821066938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.822077439 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.822527947 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.82272737 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82300581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.823032436 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823881543 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.820546282 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823431405 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822876241 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.821677643 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.819156934 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.821224518 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.821995066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.823151001 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.823178208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.82990338 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.820947939 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824728504 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823622122 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.822586529 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.822057372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823752739 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825202563 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.824899994 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82837904 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.82311478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.824234675 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82892834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.82324234 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.822863436 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.826203884 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.824505736 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822060637 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.826130178 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.833871228 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.823186421 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.825408648 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.825028864 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824236834 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825780303 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.830005104 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.821995274 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.823343338 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.825195338 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.825433593 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.823119397 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.825078479 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.825736746 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.825728335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826598737 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824004029 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.824452249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825607712 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.824989861 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.825134518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.82614787 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829332168 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.832504703 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.828848626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.824413308 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.82630463 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.826400718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.830131501 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.826693777 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.825853225 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.825475652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837716011 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.835242198 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830910589 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.827058515 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.825514189 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830029397 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.8286278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.830382115 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825081294 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825148674 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.825522557 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.825490447 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.823713338 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827011306 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.825545838 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82815464 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.828165993 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.830481995 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.827134696 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.826473287 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.827305562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.828694164 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826648742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.827406483 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.828295268 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.82893347 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828395279 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.82746071 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.826156037 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.833397905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828086983 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.828430181 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.828334859 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.826392263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.82630871 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.828642132 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.828991328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.831054567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.836148043 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.831883737 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.837441783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.829517405 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836448768 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.82833543 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.830979248 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.837775947 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.825958077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.826826979 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.826972434 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.827661752 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.833836574 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.828390564 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.82943955 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.833689865 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829534322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.829504085 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.830145508 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.828607895 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828876884 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.830102314 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836673002 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.829521452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833037792 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83187802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.826610802 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.830154993 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.828683497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.828101131 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834195975 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.830075258 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.831574259 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.829422575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.831151489 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.830381488 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.830250037 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.830213133 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.827411437 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.830525083 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836726363 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.831580665 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835508952 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.830807894 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.838427039 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830502842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8368459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.831568743 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.830569483 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.830223567 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.830222648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.830880474 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.829251465 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.831890752 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831932278 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.832420583 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834591676 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830072001 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.834206346 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.831073434 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.831476598 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.831960616 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841152256 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.855931465 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833011541 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836749707 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.829156796 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.833752868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.83641091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.831787082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.831626316 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.834027305 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842539383 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.840184769 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.831872909 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.832326816 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832022904 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834381547 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.832565446 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.832120755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.833144508 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.832134707 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831062953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.832249395 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835929984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83269359 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.832676469 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833344923 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.834231814 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.843206495 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.834770339 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.833482179 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834268107 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.833610577 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.833316903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.832443485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.834216448 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834045614 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832884677 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.83608516 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842041784 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.840742678 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.835519379 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.832463268 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.833748994 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834386274 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.833903241 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834460771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.83483225 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835452906 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835961846 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.833789483 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.834380718 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.833528597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.83366157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.834932873 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834699696 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836666291 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.841572334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835257224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832468832 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.834283097 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834093286 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.83341691 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.834501582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.841287053 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837048187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.845779018 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.844194286 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.839227341 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.834916235 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83826466 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.843224571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.83352122 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.836102082 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.836044409 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.836182215 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.836880364 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.838381864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83591114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.841059092 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.836196577 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.835638901 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.84394937 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.835643958 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.836611916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.837226692 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.839967389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.836658312 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.834402922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.836607995 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835176673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841994748 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.837374709 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836905902 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837280933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.834867688 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838552796 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841587156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836845254 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.837490601 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.832884585 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.837312426 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837940527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838366685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.834270773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.836873978 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.836456488 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.840547816 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.844599521 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.834269911 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838740993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.83846104 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.837056321 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838549701 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837550196 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.834569912 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835207297 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.837781214 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837792581 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.838323417 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.840311224 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.838649999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.839501912 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.838657794 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837539055 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841574765 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.849203646 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.846550336 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.835741051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838765982 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.838832097 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.841377028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839903165 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.838657838 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837390936 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.839912974 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.83814392 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.8438799 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.83822649 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.843213457 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854773776 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.839715307 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839000412 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.839465386 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841745174 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.840217361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.836258221 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.839762641 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.841318153 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.842080599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.847939345 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.841350036 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845378053 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839662762 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.841988845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.844128324 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.842118512 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.847988771 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.84379503 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83970801 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.840217549 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.844415771 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.85534926 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.841063234 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850055205 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870399335 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.840831583 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.841428137 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.841673181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839559501 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.843254112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.842112236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.840864995 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.84061294 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84149651 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.842176287 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.841481576 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846661299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.842341252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.841096216 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.840094814 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.840806535 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.841668305 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.838249289 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.841271935 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.841376718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.843104862 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.84241733 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.841426856 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.841813676 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85431716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.851018102 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.841836102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.842697127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840738225 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.844268455 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.845961963 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852880889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.850262673 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.84254068 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.843006031 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.843783954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843547749 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.84092953 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.843075233 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.842205278 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842495652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.839182302 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.855958395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853036679 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.845838914 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.843479676 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.844012031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.842916968 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843198294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844699391 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.844702417 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.844832666 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.845292969 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848435119 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.84311136 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.843258161 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.846677856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851177153 seconds)
  done (took 1091.853650092 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841662591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840851943 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841062587 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841382554 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840548211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841246867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841543012 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.841006692 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.841946762 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843136301 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841515555 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841123739 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842634819 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842089515 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841299181 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84183066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841744251 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842634946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.842504856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84214617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84240292 seconds)
  done (took 40.45056644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.843697767 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.840596891 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843172958 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843481182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842154014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845486733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84256377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844976112 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845142398 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84299146 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.844576003 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845996359 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.842949461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.842551315 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842479299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845975129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.845723418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84315641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.84609969 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842392818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846470243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.849058982 seconds)
  done (took 42.346716916 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.84558587 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.845009978 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.844902787 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.844689963 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.845634245 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.842281563 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.846823169 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.844942777 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.845082305 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.846188691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.844399019 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.845722205 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.853254708 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.850927004 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.848832209 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.845322544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.990793502 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.845804812 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.845887447 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.847038449 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.843408121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.849882382 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84318856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.843261538 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.844501316 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846227653 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.846955787 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.844911667 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.846748035 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.846805005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852483306 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847045199 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.845610405 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.847060535 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.845824002 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.847139096 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.851070618 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.844932203 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.84360572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.844557864 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.853527078 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.871477395 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.846033899 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.850913503 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.845159083 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.843370284 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.852455778 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.847896454 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835059799 seconds)
  done (took 92.419197034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839291151 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.838216339 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.846242559 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837409214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.83723194 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.835270094 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.837072417 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83932755 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83412832 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.834087309 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.837778535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.829823466 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831219403 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.840591184 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830999177 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832826607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831046065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.831930822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.837062877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833990569 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.8316752 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.835239255 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8333204 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.831381835 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834929648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830664513 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.832092608 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833645214 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832301616 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.832150403 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.833772308 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833290909 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835427799 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.832931822 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833099904 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.835431001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.835689416 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.833902127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834662413 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.832819718 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.836416953 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835015966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.836171646 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835064701 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832408204 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.832781102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834243165 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.833785245 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.832446166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835349557 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.83744094 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.835457057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835280247 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.8329419 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835495547 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.836392697 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.831622833 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.834014528 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.836334113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.834138608 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836367496 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836687779 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838910133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838302289 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.837166467 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.833503579 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.833417265 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.839816925 seconds)
  done (took 126.543574581 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837940066 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.838699435 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839155522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838600424 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841132662 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.838316042 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840073265 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837882901 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838174782 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842769021 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840279567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838335848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.838843182 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839190131 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838540611 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842416574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838553366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837077954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839388319 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839641056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840974312 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839989277 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.83710863 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.839353896 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838099331 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839638266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840618332 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840690086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837514749 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841927162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839476699 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840234791 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84199218 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839329694 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842681542 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839159751 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839912605 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839163821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.837306135 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838409687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.837778138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838223903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844612462 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840447866 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839391682 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.83883363 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838675893 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841051133 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.83436181 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835900982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.834941114 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834580384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833913207 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836178327 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832479274 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.832761658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832823269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833545964 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834760684 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833419136 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832797766 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.83304732 seconds)
  done (took 115.74172787 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83056373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.832607979 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.827743287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.828372034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829260268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826713859 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830607868 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829298123 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829103709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827936276 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826355378 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824815137 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828797628 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83030202 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82665859 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828209875 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824249736 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827298182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831095151 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829360207 seconds)
  done (took 38.331632861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825854678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83267503 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.827289502 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827444834 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829389881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82841634 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828165879 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831748295 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82764636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828573314 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830646838 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828839167 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823695425 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826618154 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829620242 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825703629 seconds)
  done (took 31.012377869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.825979381 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830342768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829797324 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829374548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.82882639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.829679773 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828503775 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.829686728 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.826699342 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.832347515 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83057614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830292737 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829303598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831853248 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827865634 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.828548349 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.825535793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.829305318 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828134721 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.830612753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827460251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826117365 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828226945 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.832853843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.826583517 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.825325701 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.824966236 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.82663825 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830887181 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.825975252 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828163068 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.825697532 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.826426398 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.826013475 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829895968 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.826383465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825138508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829269852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827636709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.832128573 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.826720312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827160057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.82952318 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.829614267 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.825986913 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.83101389 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.824554778 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.824261831 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.826047382 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.824845181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.831902546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.827496381 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.827574777 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.829464972 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.826981406 seconds)
  done (took 102.309127584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828998702 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825250986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.82210872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.82519672 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825005337 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.825687283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824655907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821591976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821337342 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825524282 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822756915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828325004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820428891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821352619 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822170882 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822751038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823492955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820107678 seconds)
  done (took 34.580479104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820561178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821381005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.821922773 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823866073 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.818430384 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821325471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818736206 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.822382106 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822527136 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.818687784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818592333 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821911262 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821652167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.82368834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818587358 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819697627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82104397 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821185728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.818891949 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82013236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821342758 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819233489 seconds)
  done (took 41.807775556 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.820133434 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.820355872 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.840003279 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842382352 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.842799879 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.856809176 seconds)
  done (took 12.771566426 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821799777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818077714 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817159845 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819920094 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820060936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817213617 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818455943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816797316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818913565 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816709455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815994145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82335592 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818790952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815227691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818698125 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818316746 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816471742 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818480656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816945157 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817867636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816173051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818036462 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819872093 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815134938 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815321219 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81439026 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817981401 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815456215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818462904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816958151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81788672 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814715594 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817131793 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817914827 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818492183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82039811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816207965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818463384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818380236 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82122285 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820192626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818914277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818337957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816107784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82157364 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815446951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817933596 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817179975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817519303 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820301616 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824660847 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818274579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818750556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818805068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820329672 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822677584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817448195 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816862752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819884912 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815844436 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816105068 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823929604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815467141 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815742104 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817467557 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818013879 seconds)
  done (took 121.746981823 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813969552 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816717175 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813973597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817560214 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816302581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819436858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816486384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816563581 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816092437 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816022478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818321773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816350596 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81546096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816047979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816995012 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816202264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81955274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818241893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817601962 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818049217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815890297 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820423878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813594746 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814596288 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817266029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818739867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814182781 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820236759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815464253 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815509627 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815901658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814869197 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81676218 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812274952 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820715431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815620395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816925892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816544848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817193373 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816546949 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815069467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816658433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814785724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819151119 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810441561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816001783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814148822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81387917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81380024 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819385914 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816764707 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815305678 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815503439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815179599 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820333713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812137529 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815051369 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81539223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815186634 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818577313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820486091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814851125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816275759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814469319 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815962648 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817413134 seconds)
  done (took 121.629862304 seconds)
done (took 2531.986193173 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.883427234 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894920137 seconds)
  done (took 15.525705311 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.977015439 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.929614548 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.813300884 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.856186377 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.814416136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836509655 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.829593875 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.810570686 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.814775358 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.813668168 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.813091168 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.999891542 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.81640109 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.81281167 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.813359571 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.906868559 seconds)
  done (took 51.40834638 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.818220291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.817907796 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.829198577 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.817002237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.816121624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833006587 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.850660361 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.818540959 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.853269286 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.826152751 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.891891517 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.825461319 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.817295259 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.866525377 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.826234472 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.829424004 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.905462061 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.890297543 seconds)
  done (took 34.877223784 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.894610089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.820653792 seconds)
  done (took 10.46534737 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.844851002 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.831635524 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.821694333 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.83054192 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.831353482 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.834286914 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.825723985 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.831555245 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.827416917 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.832310597 seconds)
  done (took 70.058548226 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.823486705 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.818742042 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.818255024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.816114531 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.809734601 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813026659 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815003135 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.813679681 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.496762305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850483854 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.824697854 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.827003773 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.818399497 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.820702365 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.81776604 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.846791525 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.936288054 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.818619525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.816422255 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.824270046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.820249343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902096012 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.831401047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.821889437 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.850260222 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.501122057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.828661726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.828866494 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.934547461 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.8189627 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.820870303 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.822945683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.82347268 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221924617 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.14574489 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.818351587 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.825345394 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.829910066 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.818735287 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.958635793 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.821021795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.826943079 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.801688039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.141829319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.907222356 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.863028501 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.15122432 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.821812108 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.823512335 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.852220036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.823955692 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.824895061 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.837845361 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.335968218 seconds)
  done (took 130.032742444 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818965245 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.113237179 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969646538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.818202682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09004988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020326522 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.818839821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867523967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.814842079 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.016872069 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037016253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926458822 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815693688 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.816375585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.815070185 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.814418889 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976645966 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885310101 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81513188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.811422188 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845939015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026620905 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.946585031 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818850667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.834426522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030377398 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938302709 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.922852254 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.315063322 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.821553745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880931737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.82096643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.814051423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81459411 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980404001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912142587 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907275718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.816462618 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816046362 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816928385 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.486127128 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015808476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915717121 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957710889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068234385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020255271 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.461622403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.818840703 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.462197372 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.9808834 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031155325 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025408371 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.939664358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.817592148 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.970068689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.817375495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818886005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05312757 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060093007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.921535206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819289786 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.818155444 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812660938 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063155305 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.817068933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.914695132 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820433325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.815151399 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.91990283 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921368059 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.063739924 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031921908 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.85253137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.120475243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.295353734 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033926353 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886088853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053334971 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817016112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815204185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905020779 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.570562919 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019685106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.066595161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040658503 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852628503 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.44727792 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.820605325 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.016276449 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002021202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.012989743 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062039679 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971834351 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.145390435 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.819637045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.818634086 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.092079134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95539142 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820063923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183276306 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055996115 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.397170437 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.853847711 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117325418 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954997039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.18091138 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449732241 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822304675 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990715398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.859509301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.821845365 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.820846562 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008420156 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.626332976 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821736112 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.528298132 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.887400338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.824497072 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027178957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823693313 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027068696 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819938697 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058117256 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.053080519 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856910213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.99369341 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.064425298 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.613657297 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072993676 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.063408981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939526716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117545011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.549045356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.822461167 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097038685 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821998945 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.823283614 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992837749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.824010397 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05141134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822530708 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.053000737 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846535412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981711307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822912441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.05568077 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856728515 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877292951 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823892472 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951981647 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823370404 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708998806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.979617521 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824352802 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821487835 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.232792629 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.823815338 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969470388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056511097 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845806886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892842248 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351625755 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823730413 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911993455 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848547304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.246783965 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.825358833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.043092686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.76700509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.26320748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.823543549 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.064329422 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079689055 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.826180944 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.823167514 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.569974225 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.513595853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824398514 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.982894122 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.254642119 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.478235319 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029405497 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823953133 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951532483 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.82440551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.904286086 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.172108547 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824098471 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.825552145 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824439329 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.827094957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824849722 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034785903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.851571881 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.354328131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963214217 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041550181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.135304005 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047476549 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87116156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827062568 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091062976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824531351 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.890734132 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.826017882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851785016 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061933147 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827759708 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055467372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078942529 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.744313534 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877805769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82673801 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827724622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.822498938 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981743841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915651424 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827573839 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827092398 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.936522665 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95354345 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018978577 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.425692309 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.996846955 seconds)
  done (took 889.237185869 seconds)
done (took 1203.352282614 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829792438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.828759197 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.815446679 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.828546518 seconds)
  done (took 29.064506441 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.837626394 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.834013874 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.836753062 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.83374547 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.835660307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.835725652 seconds)
  done (took 12.774709068 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.858120702 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.828399348 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.83021943 seconds)
  done (took 21.278468669 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.904001732 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.242896959 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943467309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.274328052 seconds)
  done (took 10.127013804 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.83510925 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.836281385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836026475 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.836442285 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.836160082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.83633049 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.835558378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.836707809 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.83771764 seconds)
  done (took 18.288544342 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.278433723 seconds)
done (took 97.572870166 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.844871418 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.159072218 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.836901765 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.649423751 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.873070985 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.222529023 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.949033519 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.008504767 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.893570292 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.997516366 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971856516 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.880928487 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.864485993 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.220117015 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.826292981 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.188982051 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.838699163 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.129407731 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.798060479 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241975011 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.834659642 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.915112576 seconds)
    (23/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.84707836 seconds)
    (24/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029307964 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.931331252 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911681763 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.979318881 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.348243254 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.020814521 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.947941514 seconds)
    (31/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.822344653 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.135745526 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.377556771 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.750451384 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.928385579 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.745659415 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.245366214 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.965534556 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941258754 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105392762 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.39756425 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.052728398 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.118721786 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.856670429 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422717874 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.145376133 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.0119294 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.03523916 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.170484371 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.744939993 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967120395 seconds)
    (52/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.852285917 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.840873273 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.3021813 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.100792564 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.054005637 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.84079326 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.740995348 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.636021711 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.849621897 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.903254352 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.505523055 seconds)
    (63/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.611397864 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.167383592 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.177718519 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.878063176 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.139118968 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.767493461 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.228461883 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.15012104 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.760158659 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.847689066 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.922034592 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.92949725 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.979364108 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.196394091 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.569193701 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.831749308 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.053913091 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.932759249 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.938637083 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.868710181 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842893294 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06654542 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.940668827 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.970967632 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231577782 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.949552404 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.848440845 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 6.904476318 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.876622632 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218619065 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.844671914 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.135328587 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.872161001 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.317276295 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206016703 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.931140062 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.682221978 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.075790043 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.151475901 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.078528945 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.684069442 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.928674293 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.889583279 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.202723341 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.0456572 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.832760972 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.462516431 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.445304296 seconds)
    (111/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.433371654 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.857441918 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.932988509 seconds)
    (114/309) benchmarking ("sort", Bool, false)...
    done (took 2.294633754 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.878822925 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.118489274 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.494476676 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841807438 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.164064616 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.457896439 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.067329812 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.850619545 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.166637896 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.168841879 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.286871712 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.91191987 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.946514471 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.950963935 seconds)
    (129/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.928760322 seconds)
    (130/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.835046763 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.906956036 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.974877087 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.845625216 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 4.209729135 seconds)
    (135/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.860669952 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.980604938 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.153507502 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.95795333 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.238668944 seconds)
    (140/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.987447045 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.077443779 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.875340515 seconds)
    (143/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.024177648 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.853623947 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.002054937 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.9699047 seconds)
    (147/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.042835066 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.409289658 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.170003787 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852838082 seconds)
    (151/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.138950283 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.873338434 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.192061502 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.065825744 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.855634401 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.155553485 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.970824066 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15113117 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.340487626 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.42729121 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.778372748 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.154329191 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895132879 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.525858129 seconds)
    (165/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.898092261 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.860986284 seconds)
    (167/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.987027179 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.072547125 seconds)
    (169/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990935847 seconds)
    (170/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.878064552 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.359652445 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.145610824 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.87981797 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.362172108 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864003626 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.842071753 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.88284894 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.894710133 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.899700839 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995511307 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.018765882 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.694241142 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820580762 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.668615467 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.981080737 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956977677 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.841051472 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.697609041 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.822008872 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.927061255 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143558923 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.402016299 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.25393545 seconds)
    (194/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145479129 seconds)
    (195/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.081322074 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876858554 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.025964099 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.886156877 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.876800347 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.233676036 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.984358086 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.204879402 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.922625398 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.364474677 seconds)
    (205/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.170289806 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.06545075 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.647699516 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.840231662 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.028964244 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.1546434 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372853959 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879300735 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.813650203 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229824608 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.920603143 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.184757619 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848074575 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.058278469 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.855610865 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.955440272 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.11827772 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.261661871 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.943775875 seconds)
    (224/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.956903755 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87079657 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892128502 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.112514565 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.004355349 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.843851019 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.525681702 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.025981198 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.858534304 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.838607174 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.548797401 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.052707797 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.005419076 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186191747 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.93771064 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.91669411 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.35982912 seconds)
    (241/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.075797015 seconds)
    (242/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163410987 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198700693 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.137170135 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.945662469 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.879596068 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.48458241 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.370644095 seconds)
    (249/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.84653264 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.348052453 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.208640464 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.956209783 seconds)
    (253/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964511286 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544853401 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.885147221 seconds)
    (256/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.353911945 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.513758454 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.879519487 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.920953956 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.842053236 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.811225782 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.258813451 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.963432387 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.918369864 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.978801628 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.889071478 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.077551408 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.966708621 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.879434465 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.005479373 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.459106849 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.619208582 seconds)
    (273/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.125735303 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.903782104 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.049248724 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.859568682 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963047861 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.213436002 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.845473531 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.322212036 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.519944886 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.950833979 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178736963 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.058738515 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.938795936 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.954364683 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.933822515 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061516578 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.005953765 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.5708448 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.97192498 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.581520594 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 5.626986122 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892899818 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.784976453 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.902176232 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.970222506 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.883202544 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.235523752 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045814087 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.88657538 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.843986147 seconds)
    (303/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.547874966 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.882131903 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.857694639 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.359523598 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.847161402 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.113921923 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892562937 seconds)
  done (took 1012.480091093 seconds)
done (took 1014.541590894 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.891411842 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887555609 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.868346283 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.889970613 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.981892221 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.905702267 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.88083052 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.870576821 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.916143895 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.919953153 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.868596982 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.90088796 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.873836625 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.869127728 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.867945303 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885483486 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.180712129 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903814429 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887241705 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.878024491 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.88673486 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.869843083 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.920814047 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.903369595 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.872956333 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.874460456 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.874639932 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891466165 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.982680908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.873453853 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.873848313 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.884238712 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.182737725 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.896207815 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867897337 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.889455478 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.883200176 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.877994331 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.874911507 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.903845923 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.324157126 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.872653835 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.86859724 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.873499517 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.870288219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.87385261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.871375421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.877184774 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887090919 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88431029 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.323023441 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.890074937 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.874765754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.871240346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883368846 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872464315 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.874895128 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88748032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.89051308 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886899486 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173762036 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.900055299 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876051616 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.888743547 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.883201352 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360592852 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.870986833 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.875740798 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323251867 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.880518847 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358988381 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.885711554 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874030209 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.888755889 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.905888148 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.179581491 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.89179117 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.872420219 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.881574466 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.873112169 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883595192 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887662506 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879100452 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875038187 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888809572 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.907753479 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883759754 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.875134206 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.882736555 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894485155 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.881195435 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.887174319 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87690365 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870354877 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.881174616 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.877202679 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.875500605 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.877617109 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.879429526 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.886185944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.324866586 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892764779 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870373112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.869877474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.872945859 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.889265137 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.321539833 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.879525019 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.895083391 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.92132125 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875817968 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.176162847 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.901350454 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890416711 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.883060158 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.877440968 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868552166 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.174125115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348233681 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.896183309 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.876198638 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.874427639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890771271 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875471785 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.873135164 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.183664541 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.900878242 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889460802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.996452632 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.885042134 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909093462 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.875705499 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879086037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.90867135 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89385869 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.907944982 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.880389039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89349011 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.892918722 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.872636896 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.889713295 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.887701683 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.877992539 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.882763213 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.870693117 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.911477726 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890435537 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88968688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.897851791 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.997295182 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.873931291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177418773 seconds)
done (took 294.597427087 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.945433184 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.871647254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.972017808 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.870301057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960179014 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.973405049 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.86764074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868654466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.870451084 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.251383334 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.871656636 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.871564345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.868546426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.86902456 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.958377834 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.874084324 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.872526489 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.216111683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87647755 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.945547445 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.870152507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.871127159 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.873978068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.258159033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.865125281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869606086 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.953021113 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.874200899 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.220735736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.871475717 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.8716774 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.224334493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976175956 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.891926686 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.884646325 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.880063268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.97165748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878083554 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.967742373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.955333845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.975768968 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.918789271 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.872370879 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.865773616 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.880242153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876214506 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.871574851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.906316273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.873151499 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.873180814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.214815658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.882450726 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.882042021 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.871931507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.870400707 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902910463 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.872160945 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876948315 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.966559845 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.877215101 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.958464797 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26222444 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252664491 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.875030644 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.872240524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.870874364 seconds)
  done (took 184.722588356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.939466848 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.94694238 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943359209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.879912446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.923743798 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.94542716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.880325752 seconds)
  done (took 15.257585422 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.881169438 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.876532633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.926438861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930584715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.876809877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.027759775 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87307409 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.887423807 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.874560333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.930868028 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.874260167 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876908497 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.882343636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.872140666 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.922621267 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.886839571 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.994028562 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.875160194 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875949097 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029668795 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871956349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.884573223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.931056843 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.887868396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87554521 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.879353403 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.467474129 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872724084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.872114581 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.875530856 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87243787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.918245999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877462157 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.868700081 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.871397066 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.99187561 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.873180702 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873789581 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.875361507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.871961313 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.875148147 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.874444437 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.88103793 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.873457754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.875831634 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90090785 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.875903371 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.875537797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881689761 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879652839 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928621845 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874923948 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.873793196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.874951514 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.931913373 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882658514 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878529808 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.874552106 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878107784 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.874405468 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032145271 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925389318 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.878820527 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925168737 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875114347 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.877974169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.877840337 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.87917095 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.972334521 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.880565111 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.925981827 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.874507062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035096027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.901319687 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881268465 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.882376458 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.881668181 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879368438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874039617 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.885568199 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.875522189 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.88049843 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.884269029 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876082801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876127866 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.990889722 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.986627023 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.874598971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891905783 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.884636302 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.875376331 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.934243431 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.87910089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.876521288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935381952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.99421986 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935428378 seconds)
  done (took 206.55376207 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.88581279 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.889794995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.881990118 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.895445938 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.879716174 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883110361 seconds)
  done (took 13.119628398 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.881324773 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.883642641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.878323683 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885731341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.880714029 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.880955467 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.880096582 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881299294 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.883426165 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884532384 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.879820569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.878402937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.879877086 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.878667226 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.884219856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.877673085 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883015889 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.876061041 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.878840983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885401071 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.029083204 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.879723611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880175574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.88084064 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.886599282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88128539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886565443 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.880111013 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.884678692 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892938668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.880353326 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.880438972 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.877747355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.884564331 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.884109306 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.876888326 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881919621 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.880570407 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.877945433 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.880980609 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.883172176 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884054343 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88151149 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.880538783 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.88183297 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.886095122 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.883511545 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.887632111 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.882255869 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.880416106 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.884400735 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.879120713 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.882878588 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.881513577 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.881074983 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885426512 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.887074592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.88202391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.879951994 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.880035272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.881435447 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.883307062 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.881949855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.884801256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.888404421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.880800085 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.884102213 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.884959657 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880569402 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.880282965 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.882051734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.878045802 seconds)
  done (took 138.461894986 seconds)
done (took 559.92794228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.175382459 seconds)
  done (took 8.979769774 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.044848524 seconds)
  done (took 8.949614447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.460750216 seconds)
  done (took 10.271652367 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.900303346 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.893435687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886687392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.880740144 seconds)
  done (took 29.381012477 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.968405112 seconds)
  done (took 8.784686597 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.900396003 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.884907736 seconds)
  done (took 15.630392811 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93811469 seconds)
  done (took 8.756439146 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.970929958 seconds)
  done (took 8.792941918 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.906033423 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.889740115 seconds)
  done (took 15.62587108 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.873800128 seconds)
  done (took 8.690751061 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.564025426 seconds)
  done (took 11.391356565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.890826544 seconds)
  done (took 8.720608045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.976334701 seconds)
  done (took 8.794933563 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.047573422 seconds)
  done (took 9.862407202 seconds)
done (took 164.438667487 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.890020128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.887774393 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.882711729 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883987501 seconds)
  done (took 29.358604196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.924745139 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.932188281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.928242357 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.936626576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.931337263 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.924198447 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.921471907 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.918642505 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.936624377 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.927035286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.926008226 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.929777408 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.921702162 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.915498511 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.927191858 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.928782531 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.935249792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929154664 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.918522344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.931217517 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.895986855 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.937554036 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.929990628 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.89308137 seconds)
  done (took 48.017501426 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.090875587 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.966338557 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.054701438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.944483298 seconds)
  done (took 9.875267656 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.943733936 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.944006627 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.958252622 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.996718837 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.02175448 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.951961326 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.917516146 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.9171411 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897783331 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.942935655 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.017578902 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.960808707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.028630494 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.891294263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.07776057 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890778023 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.891896341 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.944358186 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.994449644 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.009927825 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.892030323 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942990302 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.946840944 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961101684 seconds)
  done (took 48.762125165 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.889545293 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.897772638 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.896209974 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890083359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891903504 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.890839224 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.898311259 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.891846682 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.912422009 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893099133 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891116925 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.890650345 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.891323045 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893790048 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.88845919 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.900940034 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903353775 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.889455194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.894209969 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.90154772 seconds)
  done (took 39.713217798 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.884027594 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.748751791 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.237965658 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.139864693 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.886710104 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.878254509 seconds)
  done (took 31.5902812 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.903432672 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.895320177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891349462 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.948728018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.02811556 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.898587085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.891334662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899878254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.938748582 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956781502 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.909855218 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.919527248 seconds)
  done (took 24.896216991 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.886112108 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.886646389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.887666036 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.903276998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.900233979 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.899333458 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897770048 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.885293329 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.901878803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.910978312 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.901622248 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.905796301 seconds)
  done (took 44.584838359 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97831557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.933171657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.934486225 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57318361 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26913378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094725656 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420043989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224155157 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.889150703 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164859387 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996840571 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993191453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144593143 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359451164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920129543 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350525467 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188620197 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128611406 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917194095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596262658 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953721293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.055375573 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.711605099 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945539895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100711532 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026765698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.151086108 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887887072 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023759015 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927725856 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904223605 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887976732 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163337047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268868427 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987807339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898230856 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509174797 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.60828375 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.874429581 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.64029708 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.664939757 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021386206 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899721747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888419641 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822828826 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022387134 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263665606 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.889414943 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.599087145 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887813652 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899444654 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975799561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.891735845 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.704154652 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828653449 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.887475006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.885806167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895096021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458765936 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.060502255 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046683233 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.861324664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.98115502 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612117651 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28648394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.037167857 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.89186383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897422805 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825058601 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.600570323 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944973557 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218619316 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.905310972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539178971 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192420615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.063530573 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830634527 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156864397 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386779704 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.861257023 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117264728 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890459461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824245349 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.924242335 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824047168 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184995926 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926517524 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.634176573 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929922559 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222772084 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898163753 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907611384 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91310367 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113420808 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.773924099 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889920243 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.784550229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030081001 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908369755 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226211177 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822048719 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.89043412 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146527531 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.10164961 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.927516056 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391835925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048657634 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419181138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.941670054 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.008157624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936768662 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.165664923 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95423016 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045542104 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948652095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891032735 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205494385 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44666623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.026060111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.022072337 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014613305 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.224903118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918975831 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95564548 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894542123 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890256883 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.716386226 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450331003 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.893912483 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.893684505 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927761568 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938038183 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.892543737 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840292902 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.512261138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008538147 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.900759261 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113605838 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431917308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201916695 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826289489 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220397128 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978641908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.109910559 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.539230832 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.968921258 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153007107 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923726319 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.966704691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936940874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910101299 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990237302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913890504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.012838675 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183025968 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.896605589 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.893865577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.713380717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930290026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897420498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.895729366 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648610863 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165174161 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916013299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898120066 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.781186975 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.906990959 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957317363 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89716992 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903586549 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43455143 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618039243 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.897675905 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.476781742 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112583748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902750874 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.685574478 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011812112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.974249363 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165206337 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952457 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.826549985 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.602444515 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.58407333 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892952669 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828642251 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894058728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902868028 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903465409 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.091275772 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171262959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935551952 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623314553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.939025277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904133951 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.898117884 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894505622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404426417 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.072375936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054244942 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938856529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036104148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.906775063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828202419 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.897566365 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898657016 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893631539 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.893017588 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926866848 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.621204975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281093797 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150991018 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.506849795 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9067887 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.677780375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.957346567 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.956925908 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785317559 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033836208 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.015628744 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907087075 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.905642183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.704053346 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.602301254 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457753584 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212628739 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208041618 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334867988 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.078331748 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923203297 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23069508 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827473747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452910028 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951617749 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.670316383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83818355 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978247754 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541076673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242419077 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904963943 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125059456 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284560483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.697020679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076613589 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108995853 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931776499 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.019688521 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857855975 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.416927711 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041552221 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.65936806 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107345072 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230260136 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655389385 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.027298349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89732231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.584308062 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982112291 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.613729733 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067802512 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051019076 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932732498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383102485 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901709859 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.125996754 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252492047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022966117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.020500065 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829783806 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909493907 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911196489 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.897804745 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.895355914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.776045804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.149671518 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909784124 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834013505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.969865685 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193698663 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.802191888 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.904859019 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899802186 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212569723 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39920618 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065332553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.966330467 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.411703306 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897209852 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833809402 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834004094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.59155373 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906107184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875965566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110231699 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.004766361 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83516538 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940233363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145771162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156510668 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.92117677 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178778867 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176227108 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599758573 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925456949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.999557557 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.637752336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.013942386 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901264918 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13530513 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654496511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124764105 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.952210747 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.852044721 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898572085 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114142528 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900836948 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.899542163 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137676664 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621180341 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.044744713 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220620298 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977207527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903196463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951837811 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.991208926 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911660646 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980329386 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912135205 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913750972 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911445368 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949513513 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913549012 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.032150571 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.914700414 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99136658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.081816839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.427278516 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903285722 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18152193 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272009394 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239644225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96568232 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901907053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901739737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836451918 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046823998 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.129203047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175064802 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033047268 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.01616259 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927286356 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65028056 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085143704 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137073873 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177776345 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.79692409 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374693294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941432163 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.903979999 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914374177 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.11313106 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116429578 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207362725 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056287475 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.945448883 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260149081 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173290536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.903626959 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902464889 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493381303 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.906055204 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.715649347 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.944088036 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918768756 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184313922 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913644626 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289237524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922296996 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.060445573 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.419963052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6537417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197312985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891505928 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963690458 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18642808 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307497465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222519813 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971903579 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916484034 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.014972848 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050866502 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.786549957 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902272652 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903730509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954397839 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.613660109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.915222647 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191245608 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221237392 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.90157726 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.792785604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925487664 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.915692606 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128438031 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178835269 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160119632 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914376428 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913701474 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.723058432 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18575148 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969972269 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840542275 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.907012675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005724126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152207026 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926409111 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359662022 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.623540544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178830415 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.908700434 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928772207 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044162929 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278804874 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237556435 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.444546718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11305677 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495552616 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449658732 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20248465 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.915255511 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030662808 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204039763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.910374832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.954627483 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938595714 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.182946516 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223413802 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.910198015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77224383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.877013491 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250370057 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467759753 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845378875 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902808887 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96771063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9035551 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03779934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915243073 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.802957739 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027060471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.663690297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183880718 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.908896996 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.895826467 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.690496493 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17883855 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936256179 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051387628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911883952 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.610495723 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.26916727 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163906153 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.956798043 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.910615913 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.911639137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908589826 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896459151 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104295822 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.10254057 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183743567 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.981989995 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.9428309 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911755316 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.126857069 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119152397 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.907934785 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054144747 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957819235 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946199254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.814226902 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416113468 seconds)
  done (took 1689.696619049 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.941276109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.937037834 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.915431024 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934399548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930948549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95283643 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.940802649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01197807 seconds)
  done (took 57.403266876 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.912700498 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.118451115 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.924339558 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.917442691 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.92393864 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.919815334 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.088989965 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.92578558 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.924717146 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.927179679 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.917181621 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.914819138 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.227584537 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.936691906 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.921284682 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.900908825 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.926350687 seconds)
  done (took 75.18090336 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.914962887 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.029442965 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.949511875 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.934983957 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.887051872 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.92716311 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.737295062 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.941181437 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.918487182 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.149761 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.554377511 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.931749977 seconds)
  done (took 90.728197263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.929909959 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.92471139 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.924965612 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922573622 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.923850555 seconds)
  done (took 11.483206212 seconds)
done (took 2203.131289101 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.382063908 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1336977 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.160717839 seconds)
  done (took 6.148860146 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.068372161 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.113465652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.236760459 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.239979936 seconds)
  done (took 10.512254173 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.205892987 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.304767874 seconds)
  done (took 6.361468079 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302712926 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.927309218 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.30137461 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.91867623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.92314991 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.923389051 seconds)
  done (took 22.619505317 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.923178156 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.924740529 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.924289383 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.924530126 seconds)
  done (took 9.547177947 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.903941655 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605956724 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.903196936 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.914022077 seconds)
  done (took 21.18026546 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669209732 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.676165333 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671017695 seconds)
  done (took 9.864784368 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.410431654 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.814161742 seconds)
  done (took 9.070064781 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.175509377 seconds)
  done (took 4.021370664 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047862074 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.226786497 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.429083857 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.443758985 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.523502623 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.644599945 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.23552745 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.158093549 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.313238769 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35383514 seconds)
  done (took 25.220205969 seconds)
done (took 140.31268887 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.298218023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.148626791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.116560472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.288731452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.136974054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.114110085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.132395545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.276189902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.756175851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7545241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.248824145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.130289816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.078801594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.153343081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.083212324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.281061044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.13622683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.314290541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.944132086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.142086439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.133925943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.888253791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.091393454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.897882378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.133754641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.059519997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.467153403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.275382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.103561251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.472506299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.060532138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.300237075 seconds)
  done (took 172.264307317 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.829566378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.912450728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.911572725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913024329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.294798083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.916765943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.912877949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913130688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.965460999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.952328015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.913041306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260453626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915656632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914510928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923003136 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.915461297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.139656428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.9153503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.935552686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943516458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943507927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.210403808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.937920248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.250202604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.146428887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935707378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.913978682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937690363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918608197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.930271617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.932856873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914789841 seconds)
  done (took 209.11770597 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.919949987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935592605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.920198288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913530059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.924207561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.916850941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.926123627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.915699635 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.577428533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.570559743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.927150798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.920332563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925973155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.91742137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.921434005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91873019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.919907042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.92516598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.928185151 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931701121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938776602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.659086843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943514116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.661119985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.93051176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931227101 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.917091144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938041326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924682472 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.929117521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.932718911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.917982232 seconds)
  done (took 222.249441919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.123912449 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.927239328 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.928840713 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885730322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.927925824 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.927823314 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.922838325 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.118448247 seconds)
  done (took 19.6315082 seconds)
done (took 625.119274767 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.391210414 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.225030611 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.101192783 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952852854 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.191559623 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.983227359 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.950506526 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.010417553 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.678112903 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.009864561 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.591105913 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.960571455 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.680487604 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.966824062 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.073789909 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002719681 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.534143847 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.621217961 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.125322207 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008826455 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.124618851 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.8866084 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.018259203 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.715131014 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.696514648 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.920542533 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.100328391 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.533112251 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.955155925 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.116472342 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69742096 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.315348918 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.953577895 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.943377272 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.997744251 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.980782578 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.274204847 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.950568208 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.069745943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690051324 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.003018091 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.572334919 seconds)
  done (took 105.424856381 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.919711199 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.91754697 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.916857736 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.919324591 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.917239199 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.916287283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.915429428 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.917693139 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.917254772 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.91470989 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.917007758 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.918873167 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.91690671 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.915371912 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.915415742 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.91654241 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917684901 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.919652281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.915835916 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.915506217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91719329 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.915853928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.932875929 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.916226289 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.917633306 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.916987801 seconds)
  done (took 51.720732368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.931719143 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.075233806 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.156783363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949635031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.92869161 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.934675755 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947900878 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.937575527 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.933466038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.930819114 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.023654034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.937408532 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.948463126 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.157985894 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.945729022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.931508046 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.93253933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.929537107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.080679644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947862468 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.952960046 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.939108655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.950344386 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.946041788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.934622348 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931688389 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.934907934 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.398504848 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.941068536 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022758412 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.97600055 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.947818942 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.371743516 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.167292193 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.983630708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.939764533 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.931138396 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026864482 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.936999765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.933886015 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.95162446 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.938714647 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.155216682 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.435430854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.944379102 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.9326693 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.418981965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.037833417 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.975181302 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94279676 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.165242333 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.949973065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.933501071 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.935610711 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.968410874 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938214312 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.931145981 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.295683782 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.943931731 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.951602361 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.942261929 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.935788557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.088964415 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.944617883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.079545957 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.944625696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.941158922 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.93430573 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.159149574 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.948317255 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.444836353 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.946748239 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.932409923 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.025989092 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.083231563 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.44179109 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.947824287 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.088851695 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.388978497 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.956993772 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.942967431 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.391047665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.960245732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.940241776 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.93482871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.934946357 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.931447707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.976904457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.947717455 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.379338545 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.443168014 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.30932886 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959162899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.948346685 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.932801429 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.296524526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.941143835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.932398835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149538528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.453234703 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.946590496 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.941047759 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.427552082 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.945727942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.950909515 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.942951637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.162669736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94708101 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.977076579 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.935509334 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.940599178 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.936794271 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.953653992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.943189212 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.934143736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.418118314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.041667382 seconds)
  done (took 239.561571779 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.929933537 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.933993292 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.927730716 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.92680843 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.927966668 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.934602599 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92826227 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.929226057 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.934885323 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.929497746 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.929732122 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.932394339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.930244848 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932411116 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.455655443 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.94116137 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.541519953 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.933313415 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.931690197 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.930975 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.615947881 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.938105744 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.933833122 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.945359664 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.934418764 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.936571783 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.941618526 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.979908241 seconds)
  done (took 169.84831634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.941956761 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.127035871 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.961756351 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978668072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948356247 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.939222386 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.968469393 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.962109872 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.946857005 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.940580844 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.940964443 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.004580459 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.952974715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.078930649 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.971980922 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.970557506 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.045738697 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.947632238 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.941509371 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.940899697 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970923255 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.936251279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.005950966 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.073696872 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.961721411 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.061630933 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.949813602 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.949274869 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.942927205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.062323961 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.957765082 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.002734996 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.971977843 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.957779875 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.063021768 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060856284 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.046979003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.971022315 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.941786205 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.943766869 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.941336602 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.93261375 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.064613787 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.965364709 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.947057778 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.053377516 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.962121727 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.94629165 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.951988358 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.941846833 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955111566 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.959849251 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.013396437 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.080309473 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.979318911 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.965593234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.968805477 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238061372 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.950817624 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045467169 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.932913939 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.066698411 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.960919461 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.935683258 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.945235018 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.950802348 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.972342695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.973771276 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.046776419 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950275404 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048009188 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.978723005 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.948554338 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.945225286 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.949600906 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.064662016 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068406794 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97512615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.980830808 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.974169262 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.942363704 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.945798825 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.934613265 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.965022776 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.947668929 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060787943 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.062279327 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949544956 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.950104158 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.947072639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.948649937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.972391617 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.076441257 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.983965053 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042268601 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.013264098 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.023800702 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.965230708 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.960586895 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.952204861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.013096715 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964132213 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.959027187 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.291512711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.015110751 seconds)
  done (took 210.63044723 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.431778166 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.996957314 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.007531889 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.218010687 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.384803967 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.822518435 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.99554585 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00006907 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023681864 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.161724858 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.06118575 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.008059613 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.980532277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969117033 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.998938339 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017070967 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.998689504 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.293715461 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.117719062 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.098813983 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.975604157 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300791127 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.314807671 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.382521591 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.025828225 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.327451092 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.66959247 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.239328349 seconds)
  done (took 63.701118384 seconds)
done (took 842.736279249 seconds)
SAVING RESULT...
DONE!
