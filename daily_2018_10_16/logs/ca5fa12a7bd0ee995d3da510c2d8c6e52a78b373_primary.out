cset: moving following pidspec: 10430
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234150382 seconds)
loading group "string"... done (took 0.463005025 seconds)
loading group "linalg"... done (took 7.643428441 seconds)
loading group "parallel"... done (took 0.176874629 seconds)
loading group "find"... done (took 1.17048738 seconds)
loading group "tuple"... done (took 2.100341439 seconds)
loading group "dates"... done (took 1.334588985 seconds)
loading group "micro"... done (took 0.251079448 seconds)
loading group "io"... done (took 0.660022485 seconds)
loading group "scalar"... done (took 40.964033668 seconds)
loading group "sparse"... done (took 12.736808991 seconds)
loading group "broadcast"... done (took 1.122352379 seconds)
loading group "union"... done (took 13.678594487 seconds)
loading group "simd"... done (took 4.772739448 seconds)
loading group "random"... done (took 9.635892594 seconds)
loading group "problem"... done (took 1.981324043 seconds)
loading group "array"... done (took 22.50673622 seconds)
loading group "misc"... done (took 1.43942148 seconds)
loading group "sort"... done (took 3.585481942 seconds)
loading group "collection"... done (took 19.403170539 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511872687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137901147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131685421 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147322552 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203429875 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143623398 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156159445 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113441397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95993981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180532607 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153879585 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513105192 seconds)
done (took 5.102343091 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263452012 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093913279 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103141645 seconds)
  done (took 0.875770038 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077854201 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145397689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09458211 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077811476 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09494352 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077755756 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094831554 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076916029 seconds)
  done (took 1.342645801 seconds)
done (took 3.243609406 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732927215 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286287135 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202547932 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461944254 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196673914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212767311 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.721182563 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.364451718 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252383888 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099853671 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142996844 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388426332 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135560688 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.775913918 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089997379 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123379926 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181198617 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.479568913 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082178807 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110518008 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116210014 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14220458 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127750416 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090800364 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184053865 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084592209 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193614104 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108570617 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080569367 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288958763 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200360174 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.727293214 seconds)
  done (took 11.101339198 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110684657 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134376786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097689659 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139176068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136634943 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101353959 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084989421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096064356 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121605849 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177437707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131147391 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121508668 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095000812 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082470166 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114510097 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243829364 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121346552 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103581371 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100766583 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103581719 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121538056 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114478871 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108096567 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092495183 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166767077 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222112607 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114294095 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12742301 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098714463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115044732 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145004335 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146465412 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096230178 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081123408 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172798515 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125496086 seconds)
  done (took 5.156748202 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187055491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12013931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167633194 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163841119 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139340639 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15960754 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11224031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245086442 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114545319 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154945741 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162545645 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143554804 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117014453 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081087376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098064587 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096013131 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.645778681 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164564886 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1363361 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114857606 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103646072 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083802719 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722049792 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103052876 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080327518 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099240469 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066206122 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159745004 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099206136 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.152081454 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120847421 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082772774 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135668877 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207957145 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109671411 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134370362 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095755871 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079580635 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179234858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105276289 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078292393 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097742355 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102530037 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136053408 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13332694 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099061019 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096976092 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20490285 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079176843 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115429502 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.959669408 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080107786 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181786028 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10635496 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079340195 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326085687 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116557715 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079490084 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096037479 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263544752 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181562139 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097989544 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081583679 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096596151 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081625045 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.751188762 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081902329 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.086686458 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085033822 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107194989 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082788581 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096782754 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10420028 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087224529 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114783417 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078853268 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099025299 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080026921 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096995778 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07692778 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100146972 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107118499 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086064921 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097880955 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148238908 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096240971 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099202552 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128736418 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101399606 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078865437 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131776838 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098554856 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081233418 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13443403 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098825019 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091482281 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100945796 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143207521 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099320237 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.159105417 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093216592 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123775466 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099591636 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117486397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116036358 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099776332 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085318057 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096204049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078083753 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1659542 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083324511 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09897306 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081421219 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111041491 seconds)
  done (took 23.700658322 seconds)
done (took 40.638119313 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329220228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102163233 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102175364 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102262848 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099850887 seconds)
  done (took 1.483881318 seconds)
done (took 2.207606958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290681535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172727589 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095241985 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166422395 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093218088 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173266182 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159741306 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112829555 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219452814 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078527612 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162926909 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094290086 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077794699 seconds)
  done (took 2.646809858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095360286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114694533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082879002 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111210481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076855422 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111298409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093442148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118199368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109702712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085459027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094383061 seconds)
  done (took 1.817451883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094889375 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113304701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082211943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110410658 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076355204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110070055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092440843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116002722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109448827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086117318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093578445 seconds)
  done (took 1.809721591 seconds)
done (took 6.988133148 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091286368 seconds)
  done (took 0.811859789 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.922700289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.050396681 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112785661 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152332806 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301880951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.199840501 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485750874 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129702098 seconds)
  done (took 11.287479316 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.145557776 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083252697 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100121193 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082438977 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102202012 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084069392 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099094602 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098318887 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086103386 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101886731 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085797939 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101922232 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100290688 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086127406 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101541801 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087011726 seconds)
  done (took 2.333198868 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119608607 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118867507 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106499571 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109389437 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086683433 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104404091 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106312427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08870446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100675452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103201843 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091637432 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105634306 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104205998 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080566857 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106134048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108586048 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086148421 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105416214 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106313059 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089933211 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107256819 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095306236 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087203824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106181275 seconds)
  done (took 3.255653038 seconds)
done (took 18.41312619 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15982726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110018677 seconds)
  done (took 0.997837396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096563212 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113433339 seconds)
  done (took 0.941704722 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097819793 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095654009 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122658224 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110131075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080631484 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096392701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119264519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081148539 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096139847 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081079005 seconds)
  done (took 1.716163773 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082767523 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109150432 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101925198 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095737672 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105527482 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095972016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08690416 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099139521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109938456 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077255533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102850532 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114660545 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085745263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117027378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104034661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084880343 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102542299 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099054995 seconds)
  done (took 2.514273374 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079771963 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097891278 seconds)
  done (took 0.914794419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080602348 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094143344 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082762614 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097846085 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094580588 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077003555 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094402998 seconds)
  done (took 1.358674958 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472943164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13695826 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254901454 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084745882 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119537012 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305106441 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098481984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085077834 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102823076 seconds)
  done (took 2.454734753 seconds)
done (took 11.630959696 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09364333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117960746 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112816334 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467043769 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108233647 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097794354 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161833586 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250419602 seconds)
done (took 2.151412048 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151679399 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326774302 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11507554 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068245538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096897388 seconds)
  done (took 1.351865419 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0796289 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100616903 seconds)
  done (took 0.922282239 seconds)
done (took 3.173141945 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081159844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097483732 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078511408 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097414366 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077942883 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095811689 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080654994 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132702752 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080506496 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09821365 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098991704 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080553451 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095552084 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077960832 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096930499 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078297169 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095442863 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080217725 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094709579 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077753229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097657745 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077679404 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094970804 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078257807 seconds)
  done (took 2.923038146 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10010617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099068917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103332151 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086053329 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101476633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086510206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102303782 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097764551 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086232658 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098997558 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100927665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084193732 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099849601 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084695278 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099759014 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100979122 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086597245 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098821453 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08348291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100631081 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102781358 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081759142 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101940301 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103367523 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083858056 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101814268 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082822409 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098273471 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103045383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084132183 seconds)
  done (took 3.591850976 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08552326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094931727 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079035077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101837159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078226822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097667115 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078401321 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09676141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079090633 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095253767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079493837 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095545026 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078646112 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09690454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079788715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098730632 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108227893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078922007 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095580313 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07913949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099670457 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078106697 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095465407 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078325837 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095588509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078056036 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096242809 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078845724 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095848196 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077983908 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098050215 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082073288 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095380894 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084500593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099119955 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07757726 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099325386 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09586642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079197978 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094853489 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078269498 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095059754 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078401891 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101521024 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079085166 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09795267 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078911164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097511801 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080117979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099369986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077593975 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095617835 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080968519 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096503483 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099164208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078706281 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097691285 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077814949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096794725 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079415998 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094890303 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077984541 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0986599 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079661254 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111171676 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085474218 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095858091 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080235752 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097320287 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081926407 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097015271 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109859161 seconds)
  done (took 7.185237253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083963525 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107130152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080403436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098198197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076991566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096215451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099660929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07884598 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097929558 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085707732 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096574982 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080864645 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097758059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108203627 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079257176 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097494317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086080368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093983003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079473638 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099544858 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079581801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100045262 seconds)
  done (took 2.757297612 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210845551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106152706 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143196269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107785745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084809142 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107536656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102681512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088145018 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103463687 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084711119 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101054185 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103020877 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083356024 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10199365 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102095448 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085666289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102655712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085638643 seconds)
  done (took 2.663702077 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093024486 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099843376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103648476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098381234 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0995467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084532642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105303852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108845366 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084044085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099272184 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09122345 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101745875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101903114 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081794038 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101956922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082347528 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10141391 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081789715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108089699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104241925 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104863187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092145137 seconds)
  done (took 2.890941113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09819892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101130575 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118504979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084700615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09625369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080318144 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105506492 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081441737 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107205494 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100717818 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081922528 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098249785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088368124 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098662485 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10363897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082185721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100802307 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081986592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100986417 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07866468 seconds)
  done (took 2.651722746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103766302 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100521423 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100296653 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092780403 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100489549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083292868 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109416712 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101640456 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083136001 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12600997 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100929763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082968064 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109352248 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106463567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101264516 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093637666 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109789644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111123652 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083450764 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100777581 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125221157 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084068314 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109589151 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.216287258 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08383749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10118707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100788712 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089487049 seconds)
  done (took 3.675222118 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082098983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099707405 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080253442 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09658491 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079201738 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097130013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079154227 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096907269 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081051948 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096554494 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081755714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099502821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0814029 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098847705 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081485982 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099484854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084366211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096427038 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079607807 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09622862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081925632 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099669902 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081515844 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097068093 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079475177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098898748 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079772283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096676353 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081768438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096556515 seconds)
  done (took 3.447848481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091421448 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106971516 seconds)
  done (took 0.966059148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079312134 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11599692 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079176667 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103663867 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087309484 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100247538 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108766372 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088048389 seconds)
  done (took 1.529259583 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09737564 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11172786 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083586642 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112609294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111580972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096264371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16237352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101776657 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087914698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098317897 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114081966 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082055745 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106602864 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082142114 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106294528 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089102329 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098209089 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088399225 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102424804 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099114598 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083505618 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112219089 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085279227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097199371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083305287 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111044537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109566426 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083323474 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10354626 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108891498 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088023675 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093986003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082739585 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101425214 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08060532 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109257656 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112421467 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085556619 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109231364 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084500438 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112014686 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096446236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08831784 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105895359 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092549445 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100970617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084225044 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095694181 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097334584 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084759416 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095834742 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083577808 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095237005 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090154931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104624345 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113160628 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081628155 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102752161 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085704338 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103573893 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089287891 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103451548 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085372491 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100867395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107431366 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086539803 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107894093 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078045038 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094724251 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081293319 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108927121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123690288 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090663341 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101577737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084704987 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098431513 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103444876 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084482449 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107582099 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09132199 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10101953 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107865396 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090857119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100503374 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086445306 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107772942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098758535 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085566914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09815549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097796485 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099555838 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080725295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098345915 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10880274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085367411 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100852551 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080555285 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108978397 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080773975 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101254735 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084093539 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101165356 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.1094371 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088334645 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107573203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108481859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09076764 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101064101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085514984 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097563478 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084099563 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102968672 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107313434 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077103003 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103856625 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084708266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102653074 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090947512 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09885165 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084007487 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109177304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107723668 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082174193 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098064209 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086110682 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101134597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0865364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108243612 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099985216 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078441325 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095705645 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087031473 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10120389 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087596854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106167353 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103870617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077358403 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099900806 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088529583 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108856684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100144218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08438359 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104928032 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083152112 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100345211 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089357093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103318091 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082051477 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105945588 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10312802 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078438823 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105356166 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085980289 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099575629 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087258877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104921117 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104660268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083912675 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099944101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088979339 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102289515 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082175605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100713456 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099133977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093166384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103672817 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078253637 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099015866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090781569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098815589 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08292695 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.1008156 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104078965 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084640939 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098720261 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083263639 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102933613 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112867607 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088364693 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103029754 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08799769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111075301 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083362449 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103391855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101098458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084518306 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103125768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090650177 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107992707 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107766952 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085415861 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097273936 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088784557 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109124003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082650944 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098921683 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082568717 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105862189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108401025 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08722044 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102682818 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081207461 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102485299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105568462 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08668597 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101502986 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082762578 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106523352 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082370747 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10945884 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102887263 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092879714 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105288198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078373163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106214294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100411582 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089421305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09649068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081284629 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100012439 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085165648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100146619 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08622446 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095766568 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091362811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109563739 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101630056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082803212 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102200718 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092313589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104325112 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086936657 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10483113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107131035 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096715621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101130674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086218661 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111479915 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10202907 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077802192 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108076268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08329331 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101621775 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081978602 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100891273 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085829608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111100209 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106942783 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07724906 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104111482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082042568 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100675361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079298026 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107986712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105706809 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085460754 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110588359 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085127973 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103040065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106310344 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084277694 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102836524 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084899096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105647304 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08423033 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104524576 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082444785 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10469412 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10078324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081998834 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103418183 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084570811 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102571198 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089646635 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104403743 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084103039 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104120936 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103511882 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0853263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102716888 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082610344 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105862135 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083832996 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102547443 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086323868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097657032 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110159764 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083606172 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109730034 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084629481 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099374491 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089256184 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106459331 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109184669 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084851009 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103582067 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085311011 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102265513 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086563348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111749961 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100462959 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093077009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109236117 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085530539 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105988745 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083494506 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103911961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101520493 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085190384 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103850364 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084609312 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102182037 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089591396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104902396 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084009124 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104502501 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10326481 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084941812 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104054491 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078532079 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101477769 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08316677 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102793576 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090239214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104031758 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105862061 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082728424 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103415578 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083807249 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099082854 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091410516 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112630522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103931101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092145133 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102483461 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085040432 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112082527 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096977237 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081595046 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10092312 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081083003 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110626793 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084961116 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111247346 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102737541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082879008 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09907159 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084716097 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100937709 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078722986 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100741278 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087296132 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10499317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082139043 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103786763 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105402061 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08593829 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110003864 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083731599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104929565 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084652892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100357271 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082132553 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101433754 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106273557 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085392908 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101556728 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081475058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102837571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085805011 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112939031 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084331399 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104472701 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091130649 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103248787 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105152942 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088265897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097661766 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086858105 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103048102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083705327 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102619307 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106306637 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087641465 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104079505 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092184066 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102963058 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084367466 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102945178 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100618539 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083511197 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102401334 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084882793 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102466333 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084894924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111696062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082211834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105518417 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103139722 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084257678 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108613109 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08538519 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105079987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111682003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087708698 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105050492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090901588 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107286805 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087366866 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104957573 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104658623 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090905904 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101588103 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09239846 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10366628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084892193 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104496181 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081963487 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102114584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10296243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083300912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108184746 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085637686 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102419901 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083739912 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101247406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08611827 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106896766 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111354942 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086925383 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106213775 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080002681 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101114454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085614713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101095258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086211691 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10551828 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109564565 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086767008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103405898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082722154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110262249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110092387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089854742 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101310874 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088906582 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104770783 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087091785 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104367611 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083908035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104663837 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108863066 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08612557 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102435597 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091680291 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107611555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08522563 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105062397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104014043 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084889794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099262112 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085816607 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105785364 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091473988 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106251662 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102943607 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094062402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102802619 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085078637 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107063216 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0837285 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110505244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098516496 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085411724 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105129726 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086398413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099245311 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083362519 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10159457 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086640967 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103319238 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080310574 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112394652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110347783 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0872442 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103306474 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082838003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099215354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080172658 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102673267 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104836466 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086327608 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11279251 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084281594 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102605742 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080470303 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103886026 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087290938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106911436 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081661897 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099327233 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10288482 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086553263 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110893446 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08318483 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103465071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087454404 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106442448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082016504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107462418 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099906842 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088852356 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114927601 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086481176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104869948 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109466526 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092799442 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105020731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080203425 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105039525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086948785 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104461877 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10455042 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086185729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118325687 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087597489 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103619078 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082726689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106134842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102510255 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091504573 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105491254 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086254524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108312462 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085805984 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113370117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107468062 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090648915 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106091559 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087115071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102762971 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103868079 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082731642 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10179645 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086332808 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105793157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089590883 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112547184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103694441 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095160317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112333021 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089778493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100869831 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083862099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103713302 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080458509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105844632 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102510191 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083023637 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102119621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083797822 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104611086 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089883899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106575554 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085495814 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105420505 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098380739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086512875 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106164982 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085715322 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101044433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085107856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105568677 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090942285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110609743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104437272 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08678795 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105615581 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085922796 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099454423 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091838074 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103673597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087815715 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104383867 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084571707 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105914134 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107744404 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090666369 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105609378 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086606905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117792822 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106800257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082626984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101434986 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090182549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103254825 seconds)
  done (took 58.268924706 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147820689 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081525576 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099845565 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080443888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114741037 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100497268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079722079 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100959224 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081589553 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103762421 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080407054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099381177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110493221 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125483309 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094170191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104893362 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099454648 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081807654 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098985688 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081838746 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110137033 seconds)
  done (took 2.893441678 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10604047 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118669272 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11550408 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120684571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090827535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117105925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114811982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11640916 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100156861 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112170462 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119222877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116154774 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092549464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112524916 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112049788 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094081092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120199187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110565425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118166663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096431333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114040374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117055382 seconds)
  done (took 3.251445343 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085232994 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103164575 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085547205 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099061096 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084333634 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099062025 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088926879 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101419573 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088504091 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103465262 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083551003 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103918855 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105485283 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079943974 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103395927 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082600402 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154142069 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108374221 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084089018 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105837683 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100632213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086480814 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09980544 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080827362 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103825397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089841456 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105979875 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082246115 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104068107 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083847373 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105016385 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081640962 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106512475 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104792393 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084504965 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102786531 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084011629 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104262879 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080312368 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102493722 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085419324 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100069386 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085533651 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105632141 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083242261 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102538047 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085265673 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104693611 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099486584 seconds)
  done (took 5.514637223 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105008689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162914665 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086288053 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143567044 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1226536 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115413054 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088284888 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144723419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103319669 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084310641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124583438 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121035147 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10456683 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089925333 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112347009 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10473875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086961298 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103933299 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109484539 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084933525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110626815 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091259329 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119515796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118311866 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109580697 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084367184 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10509867 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110713214 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098220436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1117213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110283984 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090855475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122408898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109588423 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104982034 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088436589 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122632692 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105294113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088341248 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102043732 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087506246 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111180412 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111122406 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124077343 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08541011 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109863691 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085320037 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102939989 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118311648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087744622 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114729064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120684081 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109119001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085400041 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110136763 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122596918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085996095 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104492935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10887584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09889629 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103151582 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109122961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099634698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107061678 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111996294 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100053683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110664221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109387581 seconds)
  done (took 8.201444804 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094290361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112530719 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123424943 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122691855 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092811989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112013708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112631878 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091825333 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112285452 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118763399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11227894 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13515685 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08696794 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115386997 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111801023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093149413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112313949 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112502765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091670007 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113985354 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112252826 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121882889 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093007947 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122510074 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142915309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107280294 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092037227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112964268 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122276548 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111651719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125382878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091384877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112990771 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121687761 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124902839 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092647733 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104413122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112483768 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091729854 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113178783 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106345868 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121847124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091824514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105540477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112015886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092024025 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121402177 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125086344 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115306105 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097653784 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112390259 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122087018 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111790182 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091170385 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121538179 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148417649 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121071958 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121380891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11163729 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12100775 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102762242 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130063181 seconds)
  done (took 7.741022397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108634917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116949818 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118988132 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101239729 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082738123 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110845099 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083857967 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103128601 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115752513 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096118533 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118819234 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110336731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113304106 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098509996 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109175012 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112921346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08911873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110432619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115813187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10995668 seconds)
  done (took 2.958786251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093663607 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124696929 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085901323 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113431815 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109192651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091810651 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108672659 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108531622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087125609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109222331 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097537351 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118292863 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106882298 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092725332 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118160842 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112426378 seconds)
  done (took 2.510074832 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096746272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118722469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122436956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085364078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105191205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081071755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10702754 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102275935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08220705 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121601253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085746643 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110292663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105667132 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083129964 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102533712 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088542894 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102005388 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083398133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107402172 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122546781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097137294 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105474608 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107000848 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087305666 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106033439 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090823243 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107534461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103950645 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084168143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106258022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086791642 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114378515 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102246555 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085410334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104096454 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083741844 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105856956 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086065857 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109777495 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106461558 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084499132 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10549697 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08611364 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107376896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081777602 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107025814 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10150766 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092673497 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103924357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086384912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106458792 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107898075 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086850027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117844133 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08899406 seconds)
  done (took 6.295064108 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099654059 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110330127 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081488944 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104380231 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08875804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108414341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109760547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089276062 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107333863 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083721838 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108815304 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090202646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109088695 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109031936 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088075665 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110598439 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081802756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108140504 seconds)
  done (took 2.631393715 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092229536 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106471204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093058436 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106934063 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08611982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109987235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081109525 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106317569 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104854938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086038596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106213582 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089088012 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105281621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088809699 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106651087 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08552128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110229398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105181644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08619462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101893902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088809295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104590093 seconds)
  done (took 2.992243648 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119490543 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126275761 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093226956 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231775633 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105635233 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133767209 seconds)
  done (took 1.652222665 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109262736 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121999861 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107399788 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108566734 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116574033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108051507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089022713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109064509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119951943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102907066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109433963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118671468 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098919453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116040908 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116027832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108305314 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089567009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107540172 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130236378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088930795 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119544423 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109298416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088320983 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110868716 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119248284 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118778539 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122728364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087908115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119740998 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115184484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08858342 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118767398 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123391145 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110949241 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098511464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108940627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12974226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115467836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098574791 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110872222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116375675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098450383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115754746 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11959915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108955153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093677768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108794544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108751114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136183474 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095530445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118650137 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116136861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119107691 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120863675 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137307965 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103431235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118658801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116988941 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12371395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118942683 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095603661 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118520719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124099155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116204211 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118596042 seconds)
  done (took 8.225519645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102859888 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128227404 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109261596 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12315398 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099095119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109220959 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108011079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088125587 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109828334 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108251636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154095847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089855943 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119562354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119232033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109649486 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08907493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110018815 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117778405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088217196 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135881382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109255132 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118259588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119860401 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098322809 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123026242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116027313 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108978771 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089001513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109848077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109419572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094197147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110453564 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119133699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08860793 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120083935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110469816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088343776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11618571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109964325 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116198785 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096727671 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130514477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110181541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109570199 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124327935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0893527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11013138 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087574391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11082454 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10908183 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123339983 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102222434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124493185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119760348 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110439632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089973266 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110154588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109932389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088534592 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116037263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11862982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109550962 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137114887 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088353107 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110148156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118185433 seconds)
  done (took 8.099826197 seconds)
done (took 156.260055925 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098671396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137780335 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096722647 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170496235 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107718935 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121650688 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139769887 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098452956 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107711945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086258241 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108695693 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088857996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173074401 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086103674 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108145438 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109283113 seconds)
  done (took 2.687870707 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201034681 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257074309 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103486084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108021943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089195547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111182064 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106430877 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091334301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111661966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086670906 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11001301 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087015076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107398667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086460541 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11147131 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088787932 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108314834 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088721808 seconds)
  done (took 2.909112227 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113521657 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156171754 seconds)
  done (took 1.129649034 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119756757 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181870313 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299476425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157241193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119534586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128098884 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158209388 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132168255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198473931 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124241273 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124245785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098531212 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142108655 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117410653 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094997926 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119888462 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144034585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093488955 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116623978 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116870719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11734465 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108409139 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117801829 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093348392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18266215 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120987419 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08601641 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107926198 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117072148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095821761 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114454182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125980934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099450523 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176546988 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103096318 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178212306 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099127486 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112871323 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115997539 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091631567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119854624 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120383718 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105278211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119502162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087883072 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120111433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107122524 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086610074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115809696 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097332198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116208592 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115712808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157743436 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120738907 seconds)
  done (took 7.605005028 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.802165567 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166560719 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091170224 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891839909 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139915702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104851064 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789405457 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134359779 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235058447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768163783 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135928604 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123986381 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228483195 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237439492 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925578717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308033047 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677533963 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103501238 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151771325 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154635808 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121244782 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138642549 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132926798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453212814 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095262388 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114436384 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11845185 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100190857 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160087374 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128021458 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116137342 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18039882 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268570733 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186507095 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117557446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090242617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114175584 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171153392 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270159478 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216943765 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182986419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087419644 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112946451 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122822234 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111897298 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110213162 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165848807 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197447975 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174657161 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092790167 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124428761 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121540986 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122309765 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166052009 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12268031 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289488596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323283765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113819728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121732816 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106768331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263479039 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124317959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225012764 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118013356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213756691 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112439992 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784327518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191878626 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090566581 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118975163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119994616 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095295735 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123208084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173268693 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39221978 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12552802 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093871607 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113851863 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205496633 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12779361 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112494983 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164297147 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117641113 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100604299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127410941 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123994704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173177401 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23111613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125547612 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12110774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093860199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127147238 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117871213 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215444504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220998728 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163548908 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210416189 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124619789 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186262473 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170278272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099362469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195307329 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098364352 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127723641 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124124775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217813098 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147169633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124825465 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095662808 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120213661 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150762646 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127993129 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098756118 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192599426 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482203207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168130241 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110673977 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129387151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099701159 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183868721 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097697874 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263210399 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122576332 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171420247 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120819844 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088206997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122289366 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166910267 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123935486 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123316932 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102263741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120478741 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233113861 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219046481 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125479808 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220921498 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185546674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121726145 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172270764 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123776056 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168062908 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122060696 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122825773 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096549739 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801567595 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125672817 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100117729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117765917 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196719365 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112141652 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102550241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127106059 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110242321 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7537222 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128621325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122664169 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102788939 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121414501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122222716 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119222936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095543709 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163936571 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233838215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123254077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121903674 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103126545 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183247383 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095960671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127540905 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126754934 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12710777 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101073062 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116658045 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125287204 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17166003 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163776379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222738656 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597962834 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092020923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127323065 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232478683 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090155325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291557062 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121857897 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227372608 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166980432 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122607521 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32110537 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168687046 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197271338 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129307788 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17560895 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087749025 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12126673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165954121 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114256528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119326747 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165181919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12712003 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103223215 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9725238 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114436028 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227092787 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110369187 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172415513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118429758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10060839 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29117825 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113646341 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109359725 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188751612 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093661184 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127516353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719546289 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104423615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124246814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119498324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223329644 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166519294 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120412467 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098882337 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12433568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165484437 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208073927 seconds)
  done (took 44.424232161 seconds)
done (took 59.609660489 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284416344 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216443034 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261779182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171765755 seconds)
  done (took 1.892690574 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171679883 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149784581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121452862 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108154315 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151756667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086453961 seconds)
  done (took 1.672196618 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358645326 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273320627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241225272 seconds)
  done (took 1.763312669 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.29069223 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253991062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358824878 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423349301 seconds)
  done (took 2.335359324 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211062189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133252742 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112715266 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104425748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198964631 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251918737 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144211877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204273791 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12328092 seconds)
  done (took 2.420104752 seconds)
done (took 10.972057946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.148837022 seconds)
    (2/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.257655668 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.154863129 seconds)
    (4/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.136515051 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.275633568 seconds)
    (6/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.252066694 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.255251047 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092497716 seconds)
    (9/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.220562586 seconds)
    (10/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120569248 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093910283 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.126104199 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124920255 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.213850719 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094827355 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.18356047 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205899996 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21262993 seconds)
    (19/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.126075621 seconds)
    (20/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102377219 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.215462688 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123699611 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118824835 seconds)
    (24/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098623262 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.194612223 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140067835 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.227477324 seconds)
    (28/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115852173 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09605626 seconds)
    (30/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.226387824 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.21815668 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120621203 seconds)
    (33/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.216548497 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096728931 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223688793 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175449458 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.089488544 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116276454 seconds)
    (39/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.128710848 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18146752 seconds)
    (41/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075683671 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090412612 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.128724331 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194736958 seconds)
    (45/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.188340973 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067107338 seconds)
    (47/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138712384 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.119599953 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166947428 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109861692 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185219356 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09515567 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133811434 seconds)
    (54/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103596328 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158630587 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121119663 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094942281 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185255012 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097402662 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117860192 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109964709 seconds)
    (62/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09441641 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113364872 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093003202 seconds)
    (65/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076713909 seconds)
    (66/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103037421 seconds)
    (67/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096663025 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128772652 seconds)
    (69/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.185247584 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092741 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238386937 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129042342 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173389035 seconds)
    (74/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130966975 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185899144 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120005195 seconds)
    (77/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101788485 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191924598 seconds)
    (79/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067176951 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123789301 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118789844 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130307022 seconds)
    (83/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173866084 seconds)
    (84/286) benchmarking ("sort", Float64, false)...
    done (took 0.172861463 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069284049 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111225421 seconds)
    (87/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099429308 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112484636 seconds)
    (89/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068108292 seconds)
    (90/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163772962 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 0.088833363 seconds)
    (92/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117373829 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093766898 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118572779 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068259801 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067097597 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139605157 seconds)
    (98/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173811709 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14733443 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095521335 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109983538 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087182893 seconds)
    (103/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122804618 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149152865 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.142159033 seconds)
    (106/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091886148 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099547793 seconds)
    (108/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142228898 seconds)
    (109/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149739084 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11123661 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111163657 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11330938 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093872664 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110939437 seconds)
    (115/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235754485 seconds)
    (116/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114490379 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094086753 seconds)
    (118/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136967413 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066465691 seconds)
    (120/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.146753797 seconds)
    (121/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169868945 seconds)
    (122/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089840738 seconds)
    (123/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122150619 seconds)
    (124/286) benchmarking ("sort", Int8, false)...
    done (took 0.190861366 seconds)
    (125/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117141749 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098327373 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085417592 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.182307468 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120669852 seconds)
    (130/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067129916 seconds)
    (131/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091493792 seconds)
    (132/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130233448 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133654299 seconds)
    (134/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066964798 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120734965 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094577713 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118536334 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068474296 seconds)
    (139/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187042033 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076016722 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188424228 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117732026 seconds)
    (143/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067931202 seconds)
    (144/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155716894 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097918263 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140960605 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0876276 seconds)
    (148/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17512287 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124439318 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113813506 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090764178 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08742436 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119414007 seconds)
    (154/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069312396 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185663917 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087328217 seconds)
    (157/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091787198 seconds)
    (158/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.165610949 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121099764 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121267699 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088702972 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.17779487 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095853977 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125492634 seconds)
    (165/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114223241 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.12858826 seconds)
    (167/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067684121 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137524192 seconds)
    (169/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236836601 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077302941 seconds)
    (171/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092403251 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068184979 seconds)
    (173/286) benchmarking ("sort", Int8, true)...
    done (took 0.224330244 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137166778 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072047484 seconds)
    (176/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091968118 seconds)
    (177/286) benchmarking ("sort", Float32, true)...
    done (took 0.234396819 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10142809 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175875295 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086710257 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118740879 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171063583 seconds)
    (183/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06712303 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112125273 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068191158 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097840024 seconds)
    (187/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.091630811 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090760919 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163504768 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187495987 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068880394 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187344768 seconds)
    (193/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067911831 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115552397 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.226036816 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086450776 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109025782 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117748509 seconds)
    (199/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138463545 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067701349 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092244049 seconds)
    (202/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089503856 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111500927 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223058218 seconds)
    (205/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112546002 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096311756 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121415936 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068575613 seconds)
    (209/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130868035 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096707681 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110918339 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087735949 seconds)
    (213/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091296866 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.334038595 seconds)
    (215/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121664549 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068161357 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116802108 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087577471 seconds)
    (219/286) benchmarking ("sort", Float64, true)...
    done (took 0.236703072 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.1172696 seconds)
    (221/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.073791527 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074834063 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100837235 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105578268 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.11560881 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094331802 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118014791 seconds)
    (228/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.083760161 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074329295 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11884411 seconds)
    (231/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096206749 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.099576389 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.135785383 seconds)
    (234/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118803478 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074086194 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.118602735 seconds)
    (237/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074459003 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073588875 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.125036574 seconds)
    (240/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147462043 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094145906 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.125836095 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093328768 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.109157909 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101921339 seconds)
    (246/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.117225633 seconds)
    (247/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09884953 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.09254093 seconds)
    (249/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067618517 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067382014 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183663503 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.147165575 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.167569091 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145685512 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132594235 seconds)
    (256/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10061863 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117354029 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095810237 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125142239 seconds)
    (260/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.072802857 seconds)
    (261/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.142676046 seconds)
    (262/286) benchmarking ("sort", Float32, false)...
    done (took 0.176597916 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086384006 seconds)
    (264/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068539859 seconds)
    (265/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.093457171 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086652096 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093749548 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097172215 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092410282 seconds)
    (270/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089058605 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113843998 seconds)
    (272/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090118099 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118869355 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087960808 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118111835 seconds)
    (276/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068721334 seconds)
    (277/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116028432 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087070057 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067847892 seconds)
    (280/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095997646 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08786249 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118164867 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088293898 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092416455 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088418498 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166189177 seconds)
  done (took 36.707588383 seconds)
done (took 37.601961976 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101406539 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150335802 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097574444 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138409028 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126063729 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092636244 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120824037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09899479 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125898962 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126638102 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099831104 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095323631 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097674004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122171103 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098625134 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140340739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125218418 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095152395 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120141346 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08704896 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119864097 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087479901 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11365788 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071054682 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123684545 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095588079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118527819 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121602249 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087317752 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111208266 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092921461 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118885092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08797285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126645695 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093807804 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12027061 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09914565 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121179953 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113796897 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087730731 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119919705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08756147 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119081664 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096039113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117750082 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09341118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120773258 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100680084 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140835855 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116848388 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095874123 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123449305 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097900701 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119140714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092130976 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120649888 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092412558 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141843406 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121372877 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093185724 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120243158 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096252727 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117616072 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096657008 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119956335 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122458531 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098653256 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118100849 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09863767 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118315128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087548925 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120088509 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091253109 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112391111 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097110804 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122979429 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111463604 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093463505 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.120560626 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09316 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111195501 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090954435 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11426205 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093925904 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11448816 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070656861 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115801332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093937119 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111599199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096828266 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118544546 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094309049 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114173289 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09938582 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112618091 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092926498 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113011628 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08762594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114412582 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091609062 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11236117 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090635811 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120970149 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113858494 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095021195 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124426074 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087349297 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119060886 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087634612 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11218669 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10291979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123165554 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087791176 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117185333 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087040544 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120114951 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086964365 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112139908 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112318167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088665394 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118682174 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087367616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114725186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094913122 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127521812 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087974504 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115734134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08997644 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112505239 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093669424 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112195056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088085698 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114627223 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07836541 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115284168 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087675432 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120427827 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089983193 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120964186 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089370287 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122760813 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092113925 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11815716 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117705918 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086311773 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074854047 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11791053 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089878024 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114472932 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088114468 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114751425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087381347 seconds)
done (took 17.12808997 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08895032 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18593624 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153027404 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143946116 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107751167 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113977703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122995811 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118668088 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115502357 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144534375 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111080967 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133996555 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149643291 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087130161 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113747088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091919031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114468734 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102755241 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146746591 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13465822 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165906876 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088045566 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149093006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136728229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123015106 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115025089 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113963501 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092160491 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116479192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103456095 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133878752 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11691489 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08891386 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135139407 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105345079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121295652 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088520093 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119875835 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08853484 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11364386 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142363817 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134007429 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09309965 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119988375 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092654768 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116295533 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089742456 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123080713 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098632366 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116847699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127998732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15853337 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091586787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122838559 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08709484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124063685 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124223005 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091028735 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113301704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091127131 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113084396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09199926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128481694 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142340327 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092500068 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122750846 seconds)
  done (took 8.690338386 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105222339 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141295008 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107021269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13237234 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112706024 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089517663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114327973 seconds)
  done (took 1.75745115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089306644 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135960357 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112408219 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137840689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133622548 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112420335 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124678384 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089811536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134291096 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090488281 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136317425 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151973367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090646183 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122242008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139604724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089864178 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138776771 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089831198 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11810773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113724707 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118169584 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137586609 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091756453 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1155618 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103623459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115528201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163708492 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094898954 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116166836 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092746711 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113733282 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.153450471 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103936816 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12651419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089712444 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13115631 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130387575 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088482927 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128188112 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0947754 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129357294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089977304 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116575428 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088400983 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120020203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100176266 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11942281 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.134448837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092148151 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135259281 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089895114 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129314075 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090614763 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120329367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091032539 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120877064 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09916584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116146926 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13643564 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091745046 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132293697 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105849338 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129008509 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13228313 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093082082 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129531237 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103757963 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118327305 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091196746 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119226554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105670757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11423354 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117267169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100881393 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117991734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1131072 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139301302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092081809 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126270147 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115717306 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090397909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1157917 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112947424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119962642 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089882012 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119472224 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092490442 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113578978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089142624 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119444598 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088752676 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116585712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092630793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115961111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09216723 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132806057 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116449083 seconds)
  done (took 11.94867863 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090306784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116385485 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092382505 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116073225 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091251982 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116488879 seconds)
  done (took 1.590214177 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118050424 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118868676 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105107247 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122143456 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159321875 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105292755 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132372861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125684393 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109558357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12825836 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131403376 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105856165 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137584677 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122609168 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105422019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122484844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105288302 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126582747 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128641139 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098022171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138756701 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122874227 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097750501 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133828966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120447432 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096446385 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127299529 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105125028 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128995638 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125436391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097057379 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120042764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095750379 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124683343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131574652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097129942 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122446353 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120322532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100558965 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120061362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10590938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123052649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129028786 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095882415 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125763571 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12266702 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095406647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126576959 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105073196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121406349 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123487562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096482299 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12153912 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09502184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124355005 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126157457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095196471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131328087 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12277671 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096354375 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120404394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093646686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126435291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120299471 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105706822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120928809 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122931957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09756976 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123933459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096556215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121643995 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093130415 seconds)
  done (took 9.332095804 seconds)
done (took 34.271511586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693162211 seconds)
  done (took 1.658813091 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.932327294 seconds)
  done (took 1.901110242 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.306103813 seconds)
  done (took 18.30331656 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500233375 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588713235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989314968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181636059 seconds)
  done (took 3.226204899 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964931574 seconds)
  done (took 1.953004544 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283975569 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235463822 seconds)
  done (took 1.492987506 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.832099606 seconds)
  done (took 1.81697615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.367428502 seconds)
  done (took 2.344633752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327160411 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184632759 seconds)
  done (took 1.49363673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551321568 seconds)
  done (took 1.532549627 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.227317359 seconds)
  done (took 11.21375683 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26663835 seconds)
  done (took 1.261408895 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301678976 seconds)
  done (took 1.286546866 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.59808323 seconds)
  done (took 4.585544851 seconds)
done (took 55.049097812 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099808005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128293521 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10161414 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125452094 seconds)
  done (took 1.435229456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101974674 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122911094 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101461765 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12171007 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127602087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096679933 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124965983 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101854217 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121982803 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097470936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121736604 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122162992 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100215525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124608498 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09396235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125476794 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125909017 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097172551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126096294 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097108495 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120043892 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098927016 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126274827 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09523459 seconds)
  done (took 3.682674207 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10081768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120458452 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096887201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119210987 seconds)
  done (took 1.431684247 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101737287 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13317005 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106708366 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126387348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132906947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10574636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118896142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09280466 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121143862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100725085 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117577658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140404603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107723292 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126281264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1031716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115739118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091991909 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132945995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126695727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10206665 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119070904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10046209 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117266727 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109635526 seconds)
  done (took 3.741520186 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171442917 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128379859 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140430246 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095681736 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161632343 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142429651 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088478641 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142397482 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089112519 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132668716 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12013628 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134664959 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130978738 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088382973 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11484239 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08879763 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130897102 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130916309 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09151974 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129814583 seconds)
  done (took 3.45107813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098368479 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119516278 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088924767 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117326759 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100006251 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123060914 seconds)
  done (took 1.64307659 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092088315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116505635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090318181 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115310172 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095628073 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116510055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08864865 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116661651 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090217607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116897299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089917922 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115519806 seconds)
  done (took 2.240271591 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509614439 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122272311 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123140455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090266184 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123462007 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091077733 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131140366 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092494078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142829014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089259863 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117110732 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094881307 seconds)
  done (took 2.722119096 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239536018 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127336911 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286389776 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368779911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158407591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166555186 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281043229 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163022721 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199422067 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151923078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233816883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199704845 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153642093 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193455947 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140891249 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147602241 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193523863 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25397863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154152758 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214410588 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209518355 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169605459 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182209389 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154396701 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114157266 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195626645 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096050079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132327886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237119351 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181845129 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191615823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163431752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149007675 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240444434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251809829 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198300059 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283789468 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135572375 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170106492 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145074823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269439092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141377774 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236623493 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158009209 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106723079 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223959475 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167906154 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179164697 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147530185 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140852861 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200292333 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24522092 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195124912 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141284443 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30140699 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149845962 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161611106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191264183 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254743192 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229328423 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191260214 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12273471 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190349652 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192802736 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214703874 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154468784 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184867302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150080162 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185619 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19212208 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168070361 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208795381 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182674104 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139915779 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173155757 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174434824 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174666422 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261945877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186808292 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124214192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17287349 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150859128 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13252787 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168720704 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127126074 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2445212 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117077617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165397102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238366756 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132689113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163676299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225975261 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187379247 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151540892 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084810929 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154472284 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15641294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178386531 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14115687 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160663159 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158294439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132727949 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172422047 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098459485 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213871914 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09302485 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17538991 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213398692 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101012358 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163939405 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155160096 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152603554 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178990048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200158317 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142291576 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13672876 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212624194 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181849981 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142409853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179601771 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232682444 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146359685 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122576786 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230698988 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246242402 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113690369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232021364 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155257951 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109001854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135066847 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182604244 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157685779 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163237656 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134917391 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185216307 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235859909 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099111722 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140516696 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197273867 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136110176 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13366768 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157244054 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149011191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112340675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145722607 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146225378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178496501 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180641815 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156378453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167686137 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151066001 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253216232 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142118457 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153452548 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149856674 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094889698 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193008846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23040256 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104054527 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235072024 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172946835 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226426026 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170825955 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107936974 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178920146 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131907567 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122106198 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195316938 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169591986 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16515627 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197232678 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224383739 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180918455 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.213040766 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167508693 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177894864 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16883658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158017797 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110775221 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162878166 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159233946 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12534635 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141903667 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107731518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151522987 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143943777 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134646654 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199604504 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171674655 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218658475 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16140521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150259335 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183185904 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10271292 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2057516 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18079885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14749046 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20161022 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19498265 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216218315 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117391109 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230300405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121659197 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099462976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143801733 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173156396 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135424427 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108767928 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191358934 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18251191 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183133359 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174121128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234482735 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178230438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19309171 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123874686 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141866863 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213861151 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178461093 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156900105 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138978834 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152967764 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18012176 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15688585 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259416722 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170279148 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177442716 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238094513 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124705581 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133165611 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152630991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179936291 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154424188 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177615592 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149360848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142044229 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162536917 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131997474 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162286135 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189111678 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166364741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216805391 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124190848 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21545874 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101209781 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163566817 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163034178 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167249911 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110603862 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17757527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203157958 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147228698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167657718 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219646022 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105302215 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311078957 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237590752 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196505139 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139513997 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157343425 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163663819 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164231665 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171618034 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180624543 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16030057 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189298005 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161560163 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138868489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140067898 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151544514 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125362872 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13502114 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150394812 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178693449 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139968097 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189937372 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156633808 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161412369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174037268 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151596239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145685594 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151325057 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218708051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185605134 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244465568 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154077992 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180916153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207286674 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12843332 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134113581 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106390553 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179425762 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139402781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221317662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189491959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201330063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209985359 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180405934 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140923644 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094304969 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160075272 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171064183 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23158789 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150326432 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120576448 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233995665 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109263945 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134427136 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168329709 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290458903 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146326312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225499724 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081250578 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28238636 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126713758 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105871381 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165429031 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238119684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137716507 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153143613 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169422355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191307834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136766964 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151335771 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22022698 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212906249 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229179665 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186976189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105889996 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158249709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204868794 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194756687 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158295997 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140265026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207348192 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195534397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226648267 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143640607 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171202936 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170441416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158825276 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18859339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135931024 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210556144 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136687995 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193401514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154935419 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140784812 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178122353 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.2171367 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114555549 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21852048 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184807709 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137189381 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106550355 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196140898 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180843352 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155969448 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099352505 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212285779 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098595284 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222531843 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235261539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13610266 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157893894 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147069465 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108780493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155898029 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159332452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140764525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16629505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205560393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138308714 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192718158 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231957864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17236989 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175361088 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147720468 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694230434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132350086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197878387 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150028421 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207923785 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153282268 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174797891 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161434191 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171294753 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227047675 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162397767 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233320828 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194665712 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179795895 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134264077 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161081385 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156419661 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147060065 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155690167 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170569713 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162669432 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14744673 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181026931 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167022197 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135535537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113756928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229599519 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121069413 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217596459 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183157983 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110720763 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203501603 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188769769 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13526723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182030976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238760613 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114327006 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151168441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136947254 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152764139 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264284065 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098148362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221398864 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186145222 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16172197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171088744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148127261 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194306017 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156740516 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215127572 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116044493 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160154698 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158587772 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139964226 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131923717 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156894074 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169281215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12105967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1888112 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140448368 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195439386 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126975499 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146369031 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288969837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179296702 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248147168 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108107214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138246359 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165413124 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152409344 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17883113 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178193047 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137260634 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136087402 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137732205 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130282133 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112469739 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158035647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191938501 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194213535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209738222 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138206628 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278542322 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112627007 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15863766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11654372 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105404266 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151491788 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148258037 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157340216 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19422977 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264719026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149702 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135004292 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150381825 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099327804 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13751943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165179889 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167842472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182916655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145389337 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081257292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158523261 seconds)
  done (took 83.304642417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210173523 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155629895 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.252267437 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222885545 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208416823 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290812325 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231103652 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27000799 seconds)
  done (took 2.931276446 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094310272 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147393273 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158342186 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133991263 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092973032 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121983205 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344404981 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133955668 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118315974 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121708379 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175756045 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095928108 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552074359 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091639917 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120809812 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109124731 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092385664 seconds)
  done (took 3.793941616 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.285948432 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.513156713 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.141942673 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1982977 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162600358 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118462361 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734573621 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095158888 seconds)
  done (took 12.340613624 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116483169 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137870096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124365589 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154510226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141744473 seconds)
  done (took 1.77385974 seconds)
done (took 125.474106906 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0982997 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129156179 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098769343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131618316 seconds)
  done (took 1.536697339 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095242689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070982184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102671835 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075014271 seconds)
  done (took 1.432395486 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191754126 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170118127 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386578835 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072914445 seconds)
  done (took 1.581685738 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115711668 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134452931 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105383155 seconds)
  done (took 1.454618142 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107374688 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13154041 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104573487 seconds)
  done (took 1.43927796 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106319796 seconds)
  done (took 1.202565483 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107755519 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138722449 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109058769 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138154154 seconds)
  done (took 1.589017736 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098508742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129724687 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109624917 seconds)
  done (took 1.432470385 seconds)
done (took 13.120201871 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103730984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419276119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414613182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11044117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723119216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380883244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033127223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147237829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166569222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093421211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1398107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671094894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024294385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373910034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980107103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37145748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681536632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123530732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092617266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124171836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017058419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09295319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123686617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093536372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711916128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397968402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124314728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370045678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09348907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127991696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383550083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124510869 seconds)
  done (took 16.923494961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096120083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17560983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098957308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12465065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125263896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095156918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125169307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093851943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180877822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124089856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111834706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12348112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127114753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096246875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142702085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095513164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126565606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093865081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12324815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095186868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142409644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121257037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096251194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123027946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094432455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137085317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096183756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122975426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122235991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100589222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128439297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095940235 seconds)
  done (took 4.854531848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141869585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184725816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130470012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127320401 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170222837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125091802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201059224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118706175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184500226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124424386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141036085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093626054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158007524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123932147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115636693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123117705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0975407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123326856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092837479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123648292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140973642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094668629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124144635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093347336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124338345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108776818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125335822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122128194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09449869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128460649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100922407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126053908 seconds)
  done (took 5.189914301 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097545323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127965014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110212303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140399634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096256753 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127959269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098047179 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125816952 seconds)
  done (took 2.028044665 seconds)
done (took 30.096611291 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112055123 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128156121 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107971736 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136136815 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103982561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13351766 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092349378 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135135106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135613404 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103162221 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139078006 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093161215 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124270244 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092265568 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137324942 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098854459 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134727827 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102037894 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135064757 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13419122 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095616149 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134900419 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103885016 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135089559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104659939 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134801838 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138913905 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101461809 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123846818 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095451454 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12535909 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103765863 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125320355 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105993043 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128779622 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098284182 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125114564 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095222859 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135054049 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134661036 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101464425 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134925538 seconds)
  done (took 6.057601469 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108483977 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141094851 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10496254 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081912356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117412384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081232248 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139095372 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07966009 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110919751 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108063841 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074462401 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108041787 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078878893 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102951035 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078658949 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076388187 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109543217 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075953144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07708111 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107708695 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080369283 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073388093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110178895 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079146099 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075650038 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111132603 seconds)
  done (took 3.600680339 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102457565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13637928 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114350991 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185530913 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162595605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100834233 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133727803 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141588025 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109849945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122155446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097888096 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151214156 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111255743 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131666195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09235117 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138485807 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137226327 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094917016 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129455356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113204197 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140690158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104013006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143823412 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134953518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093565706 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124688372 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097202539 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137108084 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098889742 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132836059 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097903375 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12700474 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124555958 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105854924 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127813537 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094731554 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144034933 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103298761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133512984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122719869 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102002437 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124204439 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115245338 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163312703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092955963 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131576389 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125530623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104214314 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123089562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111755444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1330126 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092714394 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126683733 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092619739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123915612 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107372711 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125132369 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096477702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132793931 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128148242 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107552436 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126839225 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110144224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123309246 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100957541 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12355178 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093999601 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122717503 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145073624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095830336 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163392387 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095005183 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124980533 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102906019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131658439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130012809 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095002673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138719346 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103191713 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128006909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102902502 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12720545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096888175 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142315405 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125691671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096494085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124774348 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100882047 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125253393 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095043071 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138757701 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092552406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127471353 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1111543 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123682153 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124530559 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100508181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128507 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093916455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136742511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098924551 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125732401 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134228222 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094616461 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126354452 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104393419 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127893539 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092533287 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129091332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100001773 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124635492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096083644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127444372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095613498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134875819 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130499039 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099642249 seconds)
  done (took 14.987469857 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230880553 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217865406 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208729218 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297676106 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137460838 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115536269 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212600627 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15822223 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126003408 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161924231 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172792669 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183075 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139900449 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.214154481 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172186537 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094506571 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144315499 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13589667 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247850831 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259958942 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146483983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102892223 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165659467 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16268285 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138666664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102840591 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142170608 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135766789 seconds)
  done (took 5.853822526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109404426 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158264062 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100644074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14703319 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151238668 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094118602 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129327671 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095740063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138649324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136980758 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093793921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13158149 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100891704 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134728573 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12583613 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104090712 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134898125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09712718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12849009 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098854536 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136097398 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103427089 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128866626 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123809979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104356518 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122834228 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08737688 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145169173 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123684236 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116751381 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122935661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103141934 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138949126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094580052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124893025 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096018465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127275168 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095565087 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127670015 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093117974 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125578679 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078598947 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124092721 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138506955 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10183763 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081602483 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131800387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130222961 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095662779 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122629848 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097294678 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127372741 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097724104 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132225588 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097346475 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126018972 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097535055 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118316322 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100478554 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126777978 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085803595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123137167 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100168655 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119927421 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102626527 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130832569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09351707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126718421 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098388112 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13208807 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096173116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131758407 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092055308 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12869135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096580321 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131760968 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127765901 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094117231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12451688 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094797093 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075793543 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125794438 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074429405 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128350598 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092302839 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124290195 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096251337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131522931 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140671232 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096088741 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13427841 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095196198 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124273045 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098110018 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115469562 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0972087 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142020446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142430325 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095347787 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123219812 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109445112 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128314343 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093350809 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108022391 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104847572 seconds)
  done (took 13.139227382 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130636334 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155753909 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126476609 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113640802 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158225688 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159325357 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101892101 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131986093 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096904542 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144157892 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09523407 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133536943 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094842157 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140369704 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159206377 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105297155 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12769391 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108913508 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130351065 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171004331 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112636773 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144760616 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111953963 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126018153 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130926349 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111375686 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163102979 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107862933 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138725991 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143433347 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109014669 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163570993 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145054784 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099775746 seconds)
  done (took 5.537452796 seconds)
done (took 50.280260418 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228673398 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448231788 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202058616 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.160945526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.260268935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202226332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218383289 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.205352779 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.226408784 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202005143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45314693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.809189688 seconds)
done (took 58.747238371 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.34827908 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360411315 seconds)
    (2/2) benchmarking "String"...
    done (took 1.520062515 seconds)
  done (took 4.026297589 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.777006333 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.165790949 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464510233 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208166976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204252529 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490953298 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.006130869 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.63161653 seconds)
  done (took 28.300124785 seconds)
done (took 42.582874955 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.194974954 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221591014 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217942582 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184212276 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.340694336 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.230822221 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.335671488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.35076851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221184616 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189705108 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227545364 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.228194647 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.209573177 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.417748708 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218015291 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204640849 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.277587674 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.861925455 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627046376 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.213100925 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213741986 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.285784559 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.20871733 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206543529 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.218378277 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.223627511 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205534106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.22062777 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.9722571 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209008821 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.231090454 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.595475978 seconds)
  done (took 190.894973587 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204893559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.592627745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.660767449 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.262447175 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.982775848 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408102536 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.356059713 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.040340634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.227895121 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211454697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.772029469 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.206267173 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.823355321 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177918663 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236608719 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.270398126 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.717977214 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.749895567 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242639704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366591689 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206349172 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.675372795 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.579609456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.644535149 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.236001802 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.279030491 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.234428141 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.248299386 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.417866306 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.636074387 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.258298214 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.258820023 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.873911516 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058412351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222665674 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234730947 seconds)
  done (took 153.712523095 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206181525 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206714955 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207541861 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241610539 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207227858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801529135 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803175928 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.735126732 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.55624469 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211049977 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.806422242 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564778041 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211912194 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304888974 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221597784 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208885675 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22322089 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.254771334 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208206105 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208325153 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804108695 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.219540088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.382256167 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.390945508 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226582976 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242972404 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601549474 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209664258 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24352897 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547386414 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260875402 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20918786 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.658394632 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.080152718 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327420157 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210732669 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243871917 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208701288 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495306877 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210853079 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209785041 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.210263207 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212813689 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95763453 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212848844 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.804005369 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211122264 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259474742 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.213489701 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210333717 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.669701449 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214369146 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.064693212 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230451915 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209808697 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21313292 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210373568 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210307575 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245706493 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.654648351 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311915847 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227643003 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.215055643 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244370692 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21070672 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.376475798 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211274742 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.801817305 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269385489 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315859676 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809527809 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211540103 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312630654 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33521806 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.212207057 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211119144 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212508521 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211994777 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324806536 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211863558 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211860875 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647680482 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.393624197 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229606836 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.809747848 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.315061143 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.212555868 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.692667616 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.215929158 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211614696 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.101276602 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314947261 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212274725 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.212912914 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212481222 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649675306 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810019923 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56476126 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216770859 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.606491991 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21578071 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.670408853 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.80584113 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958407583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216966711 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32801178 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395960902 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231717461 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213124454 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.842479531 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216829092 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272882631 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21360677 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613058747 seconds)
  done (took 370.002684093 seconds)
done (took 715.741770712 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.814370308 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.803850518 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.915743612 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793861433 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.757522045 seconds)
  done (took 10.224716161 seconds)
done (took 11.364818086 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408730475 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406988893 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276996699 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40849666 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247943663 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4272772 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390323614 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234552277 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318173974 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300506293 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317621431 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269662264 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251128076 seconds)
  done (took 18.398016875 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543538945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554335659 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279561529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543620484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255429892 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54364487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426989181 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434551353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447190169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25091952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230183785 seconds)
  done (took 16.65146999 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53100714 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546387443 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283060676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591246612 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25741422 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550322249 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42199916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437866927 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43683643 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251245189 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22978695 seconds)
  done (took 16.678540082 seconds)
done (took 52.869089829 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22434328 seconds)
  done (took 2.366515704 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26214468 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432622819 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242688458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234748209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.226744478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227245017 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233685032 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22710454 seconds)
  done (took 11.230248373 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.226036334 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223872821 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222752195 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222976931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224155617 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.222917042 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222874733 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.222464219 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.226202561 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226747643 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22526582 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225448293 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224368396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227226182 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.226102542 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226032923 seconds)
  done (took 20.738723631 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226877956 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.223848306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22332775 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.224299119 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224850972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224558084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224907145 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223709629 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22502409 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224458296 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224291931 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225081528 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22518107 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.224058261 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224295597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.225741474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.224215448 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225423652 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.228878949 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224723511 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225840976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223914778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225891199 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225734408 seconds)
  done (took 30.544904263 seconds)
done (took 66.023163121 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.863208395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.953003583 seconds)
  done (took 6.960619588 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.228323553 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.227477774 seconds)
  done (took 3.602447066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22837734 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227511804 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.227377392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228785461 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.226493115 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.227614797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.227930582 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.228614084 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228346366 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227905934 seconds)
  done (took 13.423314267 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.228382028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228352621 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225104414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228492469 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228048918 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22565979 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229060391 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228568392 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228525899 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225745934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230472019 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227009061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.228228619 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.226603463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.22937027 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227261173 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.226605119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.226917084 seconds)
  done (took 23.244839314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.229892277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229953042 seconds)
  done (took 3.606012824 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.227675676 seconds)
    (2/7) benchmarking "second"...
    done (took 1.226843383 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226980505 seconds)
    (4/7) benchmarking "year"...
    done (took 1.226961738 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.227463216 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227114909 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.227198589 seconds)
  done (took 9.73647619 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.231179102 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.409102115 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492359717 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.86391606 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23141895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234781699 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087875549 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.234873335 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.236610904 seconds)
  done (took 14.170185652 seconds)
done (took 75.889496952 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.274547304 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.240820096 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.548575909 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.233332865 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.239387664 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567603394 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247073075 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.354095997 seconds)
done (took 37.85441442 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.239668662 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.216519776 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.024739723 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211900088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.332833405 seconds)
  done (took 18.934292775 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.314286053 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569716298 seconds)
  done (took 5.032625215 seconds)
done (took 31.35501758 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233602702 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231682605 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.230084068 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.232478511 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.228922656 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229454905 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232300455 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232699666 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.232015663 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.232466903 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.232186417 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232249493 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22927727 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229996381 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232679781 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230148156 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.230461191 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232505729 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229305678 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230197934 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233055924 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.230574708 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.230556647 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.230329995 seconds)
  done (took 30.698795534 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.233063834 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232194941 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.233678989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.233689924 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230769551 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232778648 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23318527 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.230404562 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232793746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232538843 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229883157 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231795355 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23380522 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231320074 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234207388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.231249084 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.234704088 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231375544 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233432234 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232479436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23428253 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231518383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.231518025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233865804 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23241648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231336569 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23515755 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.232712455 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233584158 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233081553 seconds)
  done (took 38.128709326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.240587257 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242528047 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234668827 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23477177 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.235410373 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.23649923 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23545546 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.235190115 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.235714469 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.235412483 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.235451736 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236335116 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235262255 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.23568177 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.235801552 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.236772984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235762853 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234480574 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23597458 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.235920205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.236123709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.235419355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235843878 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.235978059 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.236620193 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236148574 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.236679906 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.236031171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23670552 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.236562544 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.236192796 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.236284385 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.237217383 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235974803 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.236517871 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236722271 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241192221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244595548 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.236741015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23746438 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.236971672 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.237572253 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.23738678 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.236542571 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237408456 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.237096834 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.237348678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.237577695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.237882393 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.237068118 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.237314914 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.2378256 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237611792 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.238136195 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.237394379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237259296 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.238572451 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239367577 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23729591 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.238052507 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238052995 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.23800521 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238700913 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.238910338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.238867027 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238894958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.238981904 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237472516 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.238209242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.240817289 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.238896025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239754559 seconds)
  done (took 90.235942471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.238660241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2378982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237134819 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23649127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236723829 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239672918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237060202 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239459586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236858142 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240938811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239739064 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23818536 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238199369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24182065 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239995359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237773833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240574068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236661509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.24035837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240390106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239497075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238244451 seconds)
  done (took 28.408393771 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240294784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243187458 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.238136921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24076117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238339237 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240844958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24124161 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243316801 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240893798 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239030469 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237912736 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240945398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240045265 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23790962 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238669811 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240957061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241033008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239494561 seconds)
  done (took 23.480475637 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239743974 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238650903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242418543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238348411 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240080281 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242079106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238975075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242333386 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.242271166 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238356647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.24209225 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242563225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241861392 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239727854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241457661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238856427 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24192966 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239644423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242884537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239668358 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240469544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242817549 seconds)
  done (took 28.455924964 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242472691 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243045674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240254611 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.240450275 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240485832 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.243059916 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.243607284 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240621578 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245960096 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.243052489 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240706347 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243724622 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242647346 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242474987 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240929934 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241644394 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24405966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.241689134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244432828 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.241375489 seconds)
  done (took 26.006486236 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24434889 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245434112 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24543016 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245834743 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246257724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245677633 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245914444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245593591 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245945248 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247280485 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245941626 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246071077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246917475 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245316913 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246401671 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246368869 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246202466 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246734839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246111864 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246176359 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247465872 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246388574 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246261294 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247518688 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247916104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246618643 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246758002 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247269785 seconds)
  done (took 36.05791185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24670553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247246284 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.243715945 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244888654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.24490127 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.244290965 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244224467 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.244931073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247035072 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244782823 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247311944 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.246943247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247728501 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24730239 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246962556 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.247240942 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246679731 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.244484589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245147115 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245090436 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247022631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246805421 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.247704602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244936256 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245122781 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247647329 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245290572 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245762569 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248490605 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244856215 seconds)
  done (took 38.544253536 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267706376 seconds)
    (2/2) benchmarking "in"...
    done (took 1.266569453 seconds)
  done (took 3.697735379 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.246221504 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248531632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249155631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2462014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246456768 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248696761 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249046474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245922283 seconds)
  done (took 11.144931698 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.248384897 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.249307249 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.250026681 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.250014975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250141286 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.249356502 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25645012 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.270978078 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.250688456 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251266282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.257253174 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258872551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252764083 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250811605 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249927881 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252449012 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251310784 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251214439 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.2515754 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251220379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251006051 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253077838 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252400086 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.248946617 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.252977768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.262186358 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.275213886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251646864 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250688347 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.254622412 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250823969 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24886834 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252036059 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252479502 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.251984583 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.251692925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263508109 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271863966 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256910377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273503983 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252570366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.249106244 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251972573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.252409161 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253697713 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.252290278 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252408105 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251036633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.251539052 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256414234 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258569387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252010082 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251694905 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255632744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.252824109 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259260841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275315116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257653227 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263419998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263471323 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287786204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279248787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256149881 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.253388588 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264007173 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278467525 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260942263 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.271950434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.251465255 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254066574 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260659338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287461838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281137366 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.254095968 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254971162 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255397943 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254442887 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255233905 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260818728 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27782622 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.254806331 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25656955 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272802858 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280418074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.254927825 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255838805 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257000613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.255857256 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255998879 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265854556 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276759994 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256028713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.253709472 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.255401032 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255743557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256208523 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254810782 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255729041 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254155611 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257564384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256505085 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259171132 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266928024 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256667005 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257248911 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26263327 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278680765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255798462 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262900509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257405362 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257587023 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258221899 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262864835 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254749388 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260215352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.264527447 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258143099 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.257870797 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258691901 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.258121614 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267805246 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284898627 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.258256441 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.257744364 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.262228369 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270502145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258941885 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261168366 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258991329 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255812463 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.255956403 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.259003222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.259823382 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258488361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258771591 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25949075 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.256110726 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258594244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259473182 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260068783 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259095121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258846439 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25870678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.260344792 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.260046227 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.259991816 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266159639 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280215394 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260091242 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259712235 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257200921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260183899 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260383142 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259760393 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25967662 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260699821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.259760334 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263420209 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261042505 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260507657 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260339128 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.260892936 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265709953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.260071402 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264864093 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260827096 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.257867437 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.261010443 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261888671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260655612 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.260995012 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260270108 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.264483924 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27065915 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.261556716 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262380539 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.263882194 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262188424 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262008318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262472398 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.26546853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270426423 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262747988 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268109785 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283775929 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262875864 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.262967516 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262622181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26147489 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262364611 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26553357 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271058805 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274797313 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29005721 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263158958 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268139738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264087574 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267695486 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.265751156 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.263144293 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26408296 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263044349 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261728295 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263842291 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.264524245 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263718264 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263480571 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.2648264 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262905768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264311985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264189274 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26340528 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264286928 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261672773 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26404181 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264021117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263526426 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262096066 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.262901412 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263686779 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265161093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.264617161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.269627564 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.261272526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266047831 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26584316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26373435 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.262993206 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266136529 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265186732 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.264560189 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271440916 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285614648 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265635635 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270940224 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285369098 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264122587 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267476273 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266173025 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263189908 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268311403 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275633981 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.265459471 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26718706 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26594632 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26562498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267112448 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272848282 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285117122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266418005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.267576323 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26697229 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.263837159 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266899637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267453899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267587972 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268729467 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267921809 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267488078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267072547 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267419666 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267742888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267288717 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271340337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276554642 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271992499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266430184 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269173212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268960164 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272340498 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267582096 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268021853 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268007195 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279866405 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295504382 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273576769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289549641 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.268638494 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27373644 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289341639 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272441606 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268675248 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267918542 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268212685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268259388 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266531925 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269383111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269376099 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269323242 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270463923 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2754829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.269410638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268788293 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270200089 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269918928 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269771071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269298091 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.269680354 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27039188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271546502 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.267468731 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269809866 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276459827 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291183922 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270380515 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270529682 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269262532 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26903259 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270096897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271264769 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274369759 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280009234 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.272842033 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280276139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272220514 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279856507 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271017181 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.275303445 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28001417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268235936 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.270812725 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271872315 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271787015 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277358516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.292779882 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272584052 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276605319 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272163279 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.272421523 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.271506012 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272679725 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273327385 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272329652 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279594863 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.294268806 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276142506 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272810895 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269864158 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274236276 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27268368 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270700037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276619602 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272758387 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273100973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273507533 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272509749 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274341079 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273346888 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274073169 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271040031 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273932086 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279414672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295606604 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278893839 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274128982 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280047412 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295987711 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279300523 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295627973 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273987979 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274433311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.273812385 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27507885 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273199156 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275995256 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.275479895 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275282645 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279151601 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275534042 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.276094872 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275975257 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276055709 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273082397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286032308 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30158798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.276507323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280054308 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.271949752 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276399276 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.279884562 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275650909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274162108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279491592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287054516 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285092793 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.274974425 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276141336 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275758239 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277178464 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276093225 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276530526 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.276128329 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.276774347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.276018185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276327235 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279024176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276546945 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276312353 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277065229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277048154 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285140235 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2980801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.277541042 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277136206 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278307269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277005732 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277357878 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278117533 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277448433 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277629917 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27884716 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284949973 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284498993 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279884994 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.276196406 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278463009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.277471166 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.276967201 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278936798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.278069262 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2781441 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.279475841 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278676694 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278132026 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277603058 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279166734 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.278342417 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279248085 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281038455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286466525 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278701797 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276115172 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278961401 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27964537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277683891 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278667311 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285742505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304247492 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.291334271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.288035919 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283450964 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2789028 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282951529 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288211367 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278112081 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279324504 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280173074 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279612689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280620473 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.282761574 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280216291 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285735812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.30049341 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.279133882 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288467033 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300992126 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280904364 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280902584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284685031 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279670299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278285828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28109871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279897876 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286587698 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302426783 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281220389 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281967965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279843313 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282052974 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286552859 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281809572 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281882827 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278568008 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281743721 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281775777 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281978537 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278684207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28002472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280800204 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285002186 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287828129 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280205969 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283072642 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282051432 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.281354026 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282978952 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28351579 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280219719 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279729601 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.281005572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282963324 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281844889 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.284528046 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282042042 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28431219 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28357322 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283307233 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286489497 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293188236 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.291996891 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281032248 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282540043 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283580181 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284639354 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283907246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284103171 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284424373 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283365646 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28348951 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284192885 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284665789 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.286372403 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298935223 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.305350257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283910959 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28424525 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287563378 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.284602454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.281434137 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284810166 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286279058 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288572151 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292971788 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285777092 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290517412 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30616843 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286411316 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290123657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287896444 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293199201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288293259 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285158675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285670914 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.289972133 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.302712928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285842557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296279449 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31748053 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.306009865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285990387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285219589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284664803 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.286470702 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.2884696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286662055 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286644394 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286547318 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.285908041 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.286625903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.291821941 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.287431559 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287593625 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286774058 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285058631 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.286862858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.283513665 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.28756734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.287725823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.288496746 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287328909 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287935427 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289218296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300704722 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.315617859 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289294359 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.288035212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285407712 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290607466 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29311849 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30080763 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.295753486 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289128404 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288796353 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.289291947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288624113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287673784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288299759 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.287531176 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288000377 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28631293 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301424422 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316762153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292116613 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288465404 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289510086 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290520383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289022777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290182176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289153902 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289801799 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291726127 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293352969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289482302 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.289646204 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293257003 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297702737 seconds)
  done (took 759.798951214 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286683864 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287432359 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28693626 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286964698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287077153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287466527 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287112909 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287538647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286870591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287767444 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288175833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287459602 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287064426 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287958431 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287560569 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287073674 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288985478 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288058608 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288245121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288016319 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288567463 seconds)
  done (took 28.240747289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290625562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288636884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289197993 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291994284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28878164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291945867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288018129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291680626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292052115 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289326489 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292015567 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292150469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288903317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289474476 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289618296 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292825248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292359839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289950115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.293162812 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290770742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29327032 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290444575 seconds)
  done (took 29.600653168 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293460219 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293270513 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292102009 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.290881176 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.29337667 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290851773 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293920697 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.293592901 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294504117 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.293538926 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.292409094 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.29501109 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30137257 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.299810389 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.293870679 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.293828273 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.437438513 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293865899 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295651154 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293864567 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.290878028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298718418 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.313895994 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291302328 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.292335772 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.293910943 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.294590854 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.294598388 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294497679 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295491226 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299109053 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294079415 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294113776 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.29525212 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.293240406 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295880087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.299295245 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295942666 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.291761231 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.295313611 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306620281 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.318698339 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296109455 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.300023132 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.317569097 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.294940949 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298816635 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.304641612 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.29298165 seconds)
  done (took 64.877706618 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295764125 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29544892 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.293182371 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295756728 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296882761 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29660422 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295844279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296036866 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293332594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294614345 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296181318 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294751163 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293530812 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.296368952 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296263531 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293497313 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294003442 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294986156 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293978847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29447498 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.29428419 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.296830659 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296275774 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295383204 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.296900826 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294238593 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294272996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298055083 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.294711711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.294498214 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.29731459 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298086036 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298335559 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.295190737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294734408 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29769864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.298221813 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.29461875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298734226 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.296729477 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.297607362 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298280252 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298507955 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298332923 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296885242 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296053723 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29598785 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297216561 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295334503 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.298986368 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299594896 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296040857 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298066552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296805461 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298393554 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299757329 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296653414 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297187069 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299161702 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297050507 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.2975328 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298941174 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297293146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.299828667 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300487486 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29674406 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.29819175 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299904041 seconds)
  done (took 89.377643555 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300278305 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299662623 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299460471 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300242477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29943319 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299818535 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299575616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300447722 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300403428 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300913353 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300207233 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300264408 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300072849 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.300668117 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300934021 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301336471 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301415866 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300488234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302093797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300600388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300912248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301522857 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301367011 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301076096 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301353733 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301300402 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300899433 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301159378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302095274 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301545275 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302550044 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.301075258 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.301061362 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301853181 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.302784279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.302746661 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301495981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302501094 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303356322 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302468352 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30290324 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302788614 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30171238 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.302294216 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302741474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303233644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302650383 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303525438 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303327343 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303208357 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302584331 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303385608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302113546 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302995058 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302295072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304046075 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303562051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30266812 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303833943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303583045 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303912704 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304357473 seconds)
  done (took 81.924800397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303971122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304338452 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301939806 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301682187 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304135481 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302954718 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304245408 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304305559 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304385422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.305297072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304500023 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30166308 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302301574 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304472521 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302004394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302425626 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302422567 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302433075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304503935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302992294 seconds)
  done (took 27.282371823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303486373 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30561909 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303225834 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302929307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306141953 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303276438 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305224649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305097168 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303286796 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305463595 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30608387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305749046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302771757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304247611 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306046217 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302929124 seconds)
  done (took 22.088216842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303652081 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305738596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305929686 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305925821 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.302647711 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303465205 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306126006 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303065622 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304035251 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.307670919 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307702813 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306866689 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307476227 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.30708598 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304887889 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307699379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.304737138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304654295 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307032752 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307423152 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305641465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304420684 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307294147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308410401 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304471072 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305028373 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305163582 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.304486677 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305296633 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308691753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30652917 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306527509 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305844475 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305568385 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308783895 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305951543 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.307933921 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30812431 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307930448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308433102 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308996546 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306287162 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308710207 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308924479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307291514 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308838149 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306457557 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306183411 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306675215 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.306892446 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309233858 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309516827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308638873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.309321958 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309554303 seconds)
  done (took 73.08492487 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309785944 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309728358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307619091 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309620786 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309768944 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307169533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310353473 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309184099 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306948059 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310696353 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308273254 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311516624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307374746 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310622215 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30945459 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310659432 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307893042 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308478139 seconds)
  done (took 24.786468206 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308180376 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308903651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312426551 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30842944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.309652353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310912275 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309179978 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310953698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311818478 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30931168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308683844 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311754731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312195903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311985168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310214571 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309312847 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311585664 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311742075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.309781153 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309205838 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313611122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312276505 seconds)
  done (took 30.054067645 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.310792109 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311161779 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.310488615 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.327937214 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332146767 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335547687 seconds)
  done (took 9.15095279 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321636704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312408088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310636598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31414298 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313249989 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310218814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310443064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311785837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313308961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311276863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310936012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313441403 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313609966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311197084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31298325 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313654124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310838183 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310447481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31151921 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314098619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311391306 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313605541 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311054878 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310621401 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31144247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31144852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313704685 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312414505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311350822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31371478 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31476702 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311559749 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315153785 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312395396 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315478358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314803999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312625769 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315242848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314935419 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312740989 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315652716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315396212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315443902 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312460029 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314891069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311960468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313553457 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312534328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313976529 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315952419 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315732375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313304551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316757537 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316068041 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316430513 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316718864 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31396844 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313103541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315517469 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315051878 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313959092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316842977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314705756 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314734478 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317243977 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314863991 seconds)
  done (took 87.948354147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314338878 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315279818 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314738584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316714993 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314706557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314533068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31546922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314531376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315698112 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316841161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317587229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314880411 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315060612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315891624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315190229 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315299968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315700386 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315450188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315477468 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318789066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316043069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316409269 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315365016 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316211809 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316298473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318948231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316038296 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316454471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316333626 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315467542 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31606398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316663385 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31661047 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316203471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316922276 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317012592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316187183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31705307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317101876 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318778343 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316835663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319332316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317130303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318743208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318609424 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317721301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317684272 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316810456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31708569 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319060385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317840593 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318199926 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318479473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318572161 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31866509 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317530442 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317431162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318850837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318652557 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319783277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317883097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317573569 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321541727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318251464 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317456372 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318365626 seconds)
  done (took 88.148282084 seconds)
done (took 1772.373631508 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.484418701 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.435531012 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.317757728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.355047777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.319013096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.336583445 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.3384661 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320343748 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31918459 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.319184269 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319987645 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.50732616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.327118962 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.319053307 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31917848 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414387488 seconds)
  done (took 42.985303636 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.349463046 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326530258 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.450815389 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345660309 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34950579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.53061551 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388987187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.324683647 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518519275 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.370809796 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.087385737 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349713232 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324311316 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.575483921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344406035 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53146137 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.599797844 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.091443691 seconds)
  done (took 31.092614773 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.838825944 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.381027592 seconds)
  done (took 9.452312572 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346911238 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327293857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326424838 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.325254503 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.316683501 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.316080144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.323515573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.320265203 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.540965527 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.467806364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327587369 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338223715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348065703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.327354924 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324434137 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367873871 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.53092457 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325575593 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.323836671 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332255425 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326607046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436838582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.371361299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325033221 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46750689 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.544711176 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328633594 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.334152744 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.512465547 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325460443 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32525033 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326847197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.3276867 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.333141719 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.790238256 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.336572457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.375452926 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336384329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324193289 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490948091 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328081627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333307468 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.319425987 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.781771977 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474372649 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.455059524 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.724161766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.349069331 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32860533 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394997395 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327980494 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329087195 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37782233 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.15980834 seconds)
  done (took 113.026446123 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.368399649 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.709676918 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492127759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346536815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.986166741 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.030753917 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340915931 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.648324279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361201566 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320933757 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618655484 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868587739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346164875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.341080081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.952926256 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381051766 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3223518 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.101577603 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340035522 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323609388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848577587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322878838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.342070024 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.601806969 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363630287 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81782189 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.947486395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.80208436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34460159 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.32163261 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826439663 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341957004 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.336553715 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324198088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.604704488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.724364945 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721426527 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.346506208 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335074197 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323020204 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.358211737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815251773 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.724352875 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.34245324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342988124 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818936857 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34219425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.329915064 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.324122716 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530088714 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.962225755 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326044744 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.922603878 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.324133713 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.640649756 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338382469 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378106002 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847392406 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343050569 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.431371973 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364702351 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.322983989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327553384 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329360972 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326102445 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714192108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.641542135 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330392005 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711009576 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841792614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.359591308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884867594 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.249784867 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331736098 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.379174355 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324044401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915101754 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859502347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.350807362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325732277 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700751587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.344628825 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.627307109 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344399476 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327810158 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860095432 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.331943686 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.361755894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.326339512 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.332746538 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.954494965 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328262129 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.613115484 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.374099492 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326744941 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326645494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337586556 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327365417 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.345504396 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.326626521 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88982637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.35131198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.483143017 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347317557 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337261339 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327160053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.326708235 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325969268 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549449031 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.832668234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.349224982 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327151359 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327137878 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.331167884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.585717452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.333132882 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.675484681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34723757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327593903 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347406837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.999606637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382395394 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327953949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329441507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243544528 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.546711324 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349127671 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.348647234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331077567 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.347060805 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.717525255 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.350925602 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.396421427 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.328948858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074955186 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.379224723 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.347332767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.643923001 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336982578 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328787919 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.352328936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329809386 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640810178 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.616362731 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563560795 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.330209191 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.350107172 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044260664 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.382941108 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470319657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350427437 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411668145 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530862956 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536204934 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.3308246 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.944600624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330757734 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549006805 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32998304 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634030722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859251658 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350437982 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336286776 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07158832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.079410882 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.139160831 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.332183044 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.627755238 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.311925417 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.811510551 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.331441035 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331971162 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.753367597 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33288287 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339930647 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.330922943 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.330788353 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.485150003 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508032623 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.979992842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33159877 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824762663 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367588258 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33333884 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.352776753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332855903 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.679663705 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395917247 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336502313 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.386741009 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.333639217 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.341807641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846232531 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.285427299 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.33246023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486267228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002977056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.35287643 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.343443946 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.978944291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.546339848 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884916425 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.380780437 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.684722095 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.359444962 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37623719 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94593847 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365927713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849015945 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354595602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336131802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.962380693 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.353242645 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501582059 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.334276087 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336058946 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901336644 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.353787679 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.335728799 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.714357368 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.356310118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605214495 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.336315767 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.335895319 seconds)
  done (took 1112.85711962 seconds)
done (took 1310.646937885 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.3404261 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335131138 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.315447615 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.335163284 seconds)
  done (took 26.577233751 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.353050759 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342703346 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344602806 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341286534 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345685425 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342035923 seconds)
  done (took 9.320199645 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.932381374 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336537653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.33502701 seconds)
  done (took 19.855477848 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.572561398 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.764438243 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714938394 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.840789022 seconds)
  done (took 11.144760388 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34410424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343222056 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344064729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346846034 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354124577 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355051052 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347155083 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346409804 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355551006 seconds)
  done (took 13.386987557 seconds)
done (took 81.536808561 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354195584 seconds)
    (2/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.354479753 seconds)
    (3/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.443494613 seconds)
    (4/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.347848814 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.019084815 seconds)
    (6/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.894693959 seconds)
    (7/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.085396252 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60808709 seconds)
    (9/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.354065397 seconds)
    (10/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421187635 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364939892 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.343593717 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.379746469 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.744930861 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.364787929 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.220877233 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.33937634 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.340187238 seconds)
    (19/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.494521398 seconds)
    (20/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425953433 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.318812812 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445787658 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365664325 seconds)
    (24/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458382625 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.186906487 seconds)
    (26/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.34620099 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.338844162 seconds)
    (28/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443066093 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.441734665 seconds)
    (30/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.249488615 seconds)
    (31/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.319718383 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.384468071 seconds)
    (33/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.320217897 seconds)
    (34/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.340453385 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.320567899 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.319907488 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.606879824 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386346584 seconds)
    (39/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.532035527 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.335603586 seconds)
    (41/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.732603603 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.320758637 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.996918858 seconds)
    (44/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.341289363 seconds)
    (45/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.201498294 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.568457021 seconds)
    (47/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.141168327 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.531844367 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.322485587 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.200336949 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.321570233 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.471984282 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604913827 seconds)
    (54/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.087274783 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.191698408 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.444850945 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.199562203 seconds)
    (58/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.321430182 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.772740595 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.220932245 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.350869726 seconds)
    (62/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.433034244 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40016088 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.637757382 seconds)
    (65/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.342335008 seconds)
    (66/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.356716677 seconds)
    (67/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.451943456 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.030811495 seconds)
    (69/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.346341875 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.364041895 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.435133404 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.081213338 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.106732777 seconds)
    (74/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.826340107 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.444306354 seconds)
    (76/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.368823001 seconds)
    (77/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.473938477 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.43950484 seconds)
    (79/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.759751496 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.363071615 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370247811 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.852704411 seconds)
    (83/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.635707394 seconds)
    (84/286) benchmarking ("sort", Float64, false)...
    done (took 5.737306042 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.324079535 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.210652153 seconds)
    (87/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353989423 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.469716552 seconds)
    (89/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.268419062 seconds)
    (90/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.342225614 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 5.658073452 seconds)
    (92/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.948851698 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.880782708 seconds)
    (94/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.466288379 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.898458067 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.329541429 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.345399508 seconds)
    (98/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.328096909 seconds)
    (99/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.235131708 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.370576796 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.951397283 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.574979399 seconds)
    (103/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.362547232 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.395193594 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.832318225 seconds)
    (106/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.150845995 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369289238 seconds)
    (108/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.085853851 seconds)
    (109/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.358898569 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.786062546 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363184168 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.374461823 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.323948177 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557016116 seconds)
    (115/286) benchmarking ("sort", BigInt, true)...
    done (took 6.344265109 seconds)
    (116/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.473222708 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.180765797 seconds)
    (118/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360649303 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.125772748 seconds)
    (120/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.065320764 seconds)
    (121/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.3432585 seconds)
    (122/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.495664158 seconds)
    (123/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.359440941 seconds)
    (124/286) benchmarking ("sort", Int8, false)...
    done (took 4.365496017 seconds)
    (125/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427887284 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.05310849 seconds)
    (127/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.523180431 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.890195689 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388778003 seconds)
    (130/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.338852302 seconds)
    (131/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563940403 seconds)
    (132/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.210660817 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.606312263 seconds)
    (134/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.879174159 seconds)
    (135/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.355257452 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.209754497 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.60601746 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.362274895 seconds)
    (139/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.329745741 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.736223079 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.327652948 seconds)
    (142/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.392972282 seconds)
    (143/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.693866689 seconds)
    (144/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.852953676 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.449548443 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.022305708 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.148570681 seconds)
    (148/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.662143548 seconds)
    (149/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356967708 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.371692508 seconds)
    (151/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.266781894 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.233941 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374709355 seconds)
    (154/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.328519375 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.182502546 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.339721407 seconds)
    (157/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.329301254 seconds)
    (158/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.879592708 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448457986 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371307685 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.365606416 seconds)
    (162/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.953819121 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.377574946 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.909687797 seconds)
    (165/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452442123 seconds)
    (166/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.973865164 seconds)
    (167/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.350901492 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.347468399 seconds)
    (169/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.355706462 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.916664489 seconds)
    (171/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.260384841 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.347393501 seconds)
    (173/286) benchmarking ("sort", Int8, true)...
    done (took 6.352659586 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.225828258 seconds)
    (175/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.328965994 seconds)
    (176/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.863919088 seconds)
    (177/286) benchmarking ("sort", Float32, true)...
    done (took 6.36570101 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.097530746 seconds)
    (179/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.735673582 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.472771968 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37567385 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.468448883 seconds)
    (183/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.373115993 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.810043319 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.906554443 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.392022278 seconds)
    (187/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.767966124 seconds)
    (188/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.434679369 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.369987672 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.336657302 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.348081718 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.368716516 seconds)
    (193/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.331300083 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.434898793 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 5.47333369 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.428828966 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.482670286 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.352836059 seconds)
    (199/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.378883502 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.53344683 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.630672456 seconds)
    (202/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.429447685 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.38670417 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 6.351396701 seconds)
    (205/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.36011479 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.003751161 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56829164 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.342877108 seconds)
    (209/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.002894402 seconds)
    (210/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.377001844 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.283978049 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.35710774 seconds)
    (213/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.332990522 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.941609088 seconds)
    (215/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.401908966 seconds)
    (216/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.59758771 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.395357927 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.727688194 seconds)
    (219/286) benchmarking ("sort", Float64, true)...
    done (took 6.370649181 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.412030866 seconds)
    (221/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.076743001 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.335079986 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.337535869 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.381872832 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.111634883 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.371814977 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.731300131 seconds)
    (228/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.856540959 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.352270979 seconds)
    (230/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.865548272 seconds)
    (231/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416171241 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.093464283 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.746200057 seconds)
    (234/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.275430266 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.484379796 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586878447 seconds)
    (237/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318381854 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.669779382 seconds)
    (239/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379247133 seconds)
    (240/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.010384507 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.351808644 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.391255679 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.051317571 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.347392589 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73899353 seconds)
    (246/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.473223491 seconds)
    (247/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.398755268 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.084232653 seconds)
    (249/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.188615893 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.668918845 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.335311519 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.047719274 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.456763426 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.437985921 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.94546321 seconds)
    (256/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.382134185 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.333579592 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457857264 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.4460815 seconds)
    (260/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.550398701 seconds)
    (261/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.259443259 seconds)
    (262/286) benchmarking ("sort", Float32, false)...
    done (took 5.411171703 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.457025728 seconds)
    (264/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.385731485 seconds)
    (265/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.360547989 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.490305041 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.351823311 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173141 seconds)
    (269/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.336862208 seconds)
    (270/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.35513359 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.47244008 seconds)
    (272/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.42130651 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.398067765 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.355442089 seconds)
    (275/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.38337648 seconds)
    (276/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.111146278 seconds)
    (277/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.44162626 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.398277981 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.338241045 seconds)
    (280/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.864033044 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.46150271 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.378696911 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362489716 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.341784972 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.001954221 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.336280864 seconds)
  done (took 957.618530482 seconds)
done (took 958.873013508 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.397780131 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391067758 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.367020195 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38958904 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485361201 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390730147 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.377317405 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.370580113 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414667265 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.416521136 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.372599088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.388131788 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375769742 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.375440978 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367348317 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389386732 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.55092436 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.373978963 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.39187026 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377625929 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.390946559 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373573696 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.418568575 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.389703588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.371476498 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372108886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377759405 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.39445655 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486401377 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.37836858 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372146744 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387887636 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.548480115 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367007899 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364363321 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395495655 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387362959 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.379924249 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372800048 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407058848 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.011782999 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.395404571 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378501899 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370950014 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369936724 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373442192 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.376911602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376724981 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39176359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392698169 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.999594185 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411704569 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.380444555 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.370494604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38202103 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.377431693 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.375066556 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395325621 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.397282859 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395954545 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.536455142 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376784671 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.373429108 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394603438 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.386412803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.037495364 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.386474155 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.37646384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.01224173 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395875525 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.038528424 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.405033305 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373490831 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.392024563 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.411213445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.54937059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367031653 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.371278703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.386730166 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.378686457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.384393919 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393777852 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.378557054 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372917105 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394608587 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.397101816 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.38237614 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380667242 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.382773391 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.399428587 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.388252146 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.391038271 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376699925 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.369064477 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382937545 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377316128 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.382610124 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383725807 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.378781189 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386131316 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.012171266 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418859295 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.37031069 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.369673159 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.372221161 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.394422882 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.012595468 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.400933199 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396738289 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.421493243 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.375602226 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.541504436 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384755303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400235361 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.383760102 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377943283 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3698608 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.541869666 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.006718214 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.416676022 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.377635123 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.379965851 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40059402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377910672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371868601 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.556729841 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377722905 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397832224 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503544968 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.387141461 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.415287398 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.382213805 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378753013 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402408142 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400364775 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.414120678 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37932979 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400179254 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.399008869 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372707543 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394651969 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.387057093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.377571238 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382624272 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371137315 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402807941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397950596 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397638432 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.398118692 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504384239 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373938044 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.544483011 seconds)
done (took 234.761125456 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435168034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.371548587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.465178431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374006381 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.476509979 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477627125 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.372783648 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371007242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372264521 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.751816378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372592405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372352721 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.365923288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.373431681 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456952104 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374787575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372909983 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.714532236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376113548 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447518865 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.374211852 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373196824 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374809516 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.754282247 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.37525537 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.372162997 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448827314 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377725656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.720787629 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.369710562 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.371252272 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.719591004 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46784864 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394093336 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385774034 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383346327 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.478495134 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.397747333 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456022168 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455357949 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.467508373 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415558164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371147129 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.3724391 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377907785 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377353851 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374415395 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403342705 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.372888954 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375758031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.717240583 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.38644369 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376051115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375084579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375355731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405636493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375947243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378104319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467878485 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.378887896 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.440899805 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.76670939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.754866928 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.378675934 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.374693202 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376552025 seconds)
  done (took 151.2645488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.443111797 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.45161218 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.498503685 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398052808 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.428175833 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.502371151 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.398531382 seconds)
  done (took 11.404347088 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384515323 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380777321 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427740266 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428274565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380104284 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.557015317 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379829805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38874489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.37829655 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.430708302 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.382187209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380490241 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386715583 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.371319998 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433831358 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.389614755 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493909169 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.379817829 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379698122 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539424738 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377567135 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386713742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430508247 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.389585535 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.382374441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384674277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.200337338 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381245443 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377709759 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.380928467 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378663944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.458237192 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381417761 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.376173177 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378856272 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49821502 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381467845 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378566017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380409458 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.375111268 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381036728 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381937544 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381659088 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378883399 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381781825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.403359035 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.382131393 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38082176 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.381733446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382897226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.43063747 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383427589 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379061317 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379493957 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.436776032 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389587711 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382822841 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379858229 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382818496 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380118659 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.542270388 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.429711549 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382688341 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.429983369 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383230579 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382057526 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382636874 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382843147 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436539026 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.382909064 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430255967 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381149325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.568580257 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405967122 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384755035 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385172684 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.385870262 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384585702 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.376472732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388312092 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381332645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.383336697 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.388926421 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381716367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380459286 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.557558412 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.491570669 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383270609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396432359 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390899033 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.383140383 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.436544097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385567423 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382258121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436585576 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.498816203 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.438212186 seconds)
  done (took 158.323264385 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388891541 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.392839533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.385643675 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400585125 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.385946575 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.384978553 seconds)
  done (took 9.629124374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386965136 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.388537983 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.386154993 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385960382 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386249979 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.387083515 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385646511 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388406507 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391988962 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38679089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38723591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38991566 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.387324691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.386822336 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386056586 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386048095 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.387672223 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385337702 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.388414379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387085432 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491662596 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.387885427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388430446 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.393915398 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387367714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396345205 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.387914152 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387699099 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.392095048 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.410314797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.388611597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388941163 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.394620947 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.393097896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.388619298 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393007427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.39129753 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386101648 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388671123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39173669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389189528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3886083 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392591732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.390070449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.395367189 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397724792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397191338 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38865029 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392774899 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392786672 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388619279 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389962592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.393621253 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.391500332 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413468935 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39842152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390105898 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.389335948 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.390369993 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391951348 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.390687233 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391500498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.395618002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387977421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392917633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391315742 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395149378 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390726158 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390561688 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394427265 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.388685322 seconds)
  done (took 102.527266313 seconds)
done (took 434.429302305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.520334252 seconds)
  done (took 7.816161227 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.8955303 seconds)
  done (took 8.193274716 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.098785457 seconds)
  done (took 26.402970723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.400756157 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.505310787 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.407624478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.389018531 seconds)
  done (took 27.00017934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.543784316 seconds)
  done (took 7.839063006 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.399244453 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.397008377 seconds)
  done (took 14.093472678 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.759750412 seconds)
  done (took 8.054864164 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.56162776 seconds)
  done (took 7.865630627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.398965431 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.413387776 seconds)
  done (took 14.12264419 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.363367632 seconds)
  done (took 7.658657487 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.127687189 seconds)
  done (took 12.425212002 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.392448836 seconds)
  done (took 7.69198239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.39640422 seconds)
  done (took 7.69343673 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.460555958 seconds)
  done (took 10.756773676 seconds)
done (took 168.910839989 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.383985725 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.384570767 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.385698785 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.383310352 seconds)
  done (took 26.834189888 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.426475993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425907854 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.428306412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.437767378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.429573793 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.428123459 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.419438903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.416996627 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.437223141 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.430040628 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431960328 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429989379 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.4263682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419235286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428595744 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.429317064 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438464053 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.428799938 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.419744934 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.430142313 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394468201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437845544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.430681058 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.394669186 seconds)
  done (took 35.51804166 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916415511 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.464836375 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.548076402 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447212043 seconds)
  done (took 7.675813547 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.445338486 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447737636 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46010208 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500178079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.52431139 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457275558 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421460964 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416154752 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402035077 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.448176388 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.52234138 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463017082 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.536689815 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394768604 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.614803236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393793317 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.39488558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446923131 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.498015976 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515664936 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394275966 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447503862 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451589511 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.464741809 seconds)
  done (took 36.361639093 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.39542925 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413055274 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394130559 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.393332916 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.402312153 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.394954442 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.394688644 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.396652834 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.394147834 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400108235 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393437796 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408718104 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394722633 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395586761 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401383032 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396198986 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.400865629 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393592874 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.395310123 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.401127639 seconds)
  done (took 29.260981893 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.388305072 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.241810987 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.74055021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.647287224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.388099247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.389624483 seconds)
  done (took 28.097178019 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.48117859 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.651786717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395339999 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.818439498 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.914553786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.416069354 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396698576 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.669796726 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.060448662 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.062505246 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.463033262 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.475349213 seconds)
  done (took 21.109708756 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390124914 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.410016865 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.407204124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405462097 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.460532867 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.420535023 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.403575842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.390793949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.466780993 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.484425399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.420549876 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462720521 seconds)
  done (took 38.425360754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47857446 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439088906 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.514461093 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441185093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13783089 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604940587 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.470345524 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154584713 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.42053434 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667751589 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401385611 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48445445 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650122998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412956092 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396376733 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.514104292 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641651314 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93951487 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396174103 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.097329945 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422943307 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396133277 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.158698404 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666104304 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628990382 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376454765 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.654340938 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169099415 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727417781 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408417278 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404952865 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395522919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668703724 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107673196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513551371 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645743497 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42662895 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.941250467 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.380641263 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 6.068312685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408077275 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399615049 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406248702 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395202115 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329836899 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41390681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171156076 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.424366458 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.106604561 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396608652 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704441002 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492224372 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399535254 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008280414 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450042018 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341603287 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399714585 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492840277 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991777277 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414060565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402680273 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.359433376 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400923935 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06259445 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10178421 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.423376191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401397502 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401633594 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336635198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.067884747 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420420021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538564062 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423341729 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086077041 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22003522 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420702757 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.335345305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007944361 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418877424 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.334683029 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62734596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174694667 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333836611 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.349550972 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.33294042 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188505549 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407962489 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.936442872 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420913423 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185951511 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670411327 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439131276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424942181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623285636 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.280429437 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39840746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.409644977 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51877011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421489068 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161942348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361695726 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.403101091 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655972444 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612340149 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404420653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.526977176 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953404631 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430025676 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.415816288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399500947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655345757 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07610699 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438005472 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399931379 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427631125 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183962676 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225414844 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404858746 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.405825495 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400534613 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699827463 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.246820972 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294140753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469515819 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407267547 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40166243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206465581 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257864132 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.283289821 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.64355643 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429925728 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.438754367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.40247438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385161511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.399170502 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439219448 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.1822999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626326446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401502759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682961011 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336798653 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542086548 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444699501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625917692 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.767961363 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.428362851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661256817 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409993241 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409706937 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441124716 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422169244 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501305453 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425383684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.414329548 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662712807 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.406427072 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.407088706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.131865658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.186354495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405963122 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408831751 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407713219 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063285368 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406186515 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4098806 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295417788 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.417727035 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470962725 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409852666 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656501393 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.951971962 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424958275 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410021048 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401478464 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630463168 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416058514 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 6.100096449 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486181164 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.937076599 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11207648 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447080847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.339220483 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.117813867 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097787823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406722341 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605359894 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405010723 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666569443 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445835255 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421517219 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09114289 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432687347 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.101707443 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415894069 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418756023 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410945012 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40680316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.946663831 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433937518 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40959272 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.423294698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5492186 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420158229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34035964 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923979348 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41244682 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408290464 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.181855178 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44200946 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.108583376 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285998759 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687430613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413558183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723801534 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.225679291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.44768037 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414864104 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415224388 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422362076 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.428598443 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438198058 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418482315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.113639583 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888436092 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977706632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315637777 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043228997 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.85990438 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.437877051 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.30967801 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17805993 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365206142 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068145722 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676941131 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199433389 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414473107 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947936436 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.798155545 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319464713 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725762582 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646847561 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841622303 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432750082 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734588931 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62717734 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444321848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410445128 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370505829 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.167237556 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028814872 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435639596 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49332355 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188564841 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440984058 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.191143836 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.434731882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.292158029 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894720907 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.064983808 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.824800305 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414577109 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427270464 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291146923 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438665679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936941869 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114679474 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434481472 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.970556254 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36886348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674356468 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.449747826 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.408906826 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.269590447 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.41935437 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.670268241 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722421095 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348131055 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426525352 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026948804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287302081 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418481158 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413588057 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247678618 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413992179 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77107373 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.414746962 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 4.048750487 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438360483 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346910468 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346207031 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.106614234 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418865201 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391994227 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96764223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.419805744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461009787 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416918487 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364599074 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670567278 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427090028 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077348354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662230595 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415257058 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457601045 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.417915973 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427261642 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.396744532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.314873276 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651143224 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489276447 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63923308 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.562709184 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.321632046 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.016376934 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627219344 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297573771 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428717511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693539593 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.147062148 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.430947362 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240657869 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461692456 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424157842 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45879846 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429072126 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437104317 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508777698 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677104738 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.453600292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.427026249 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890566774 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454490526 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419222146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430545003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509063664 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217159305 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 4.052429729 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.191576045 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086726626 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287121782 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110769879 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748920611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419280088 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420794523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357060661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567096205 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947239884 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6908222 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539999063 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.422701382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440713856 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417392666 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427941707 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632504679 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692010802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.288915808 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423296615 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084068734 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.300492508 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428590525 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629336598 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978559435 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039610926 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541757931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429927137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192196537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714821099 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.510993345 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417803775 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009240259 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.419395064 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.303247968 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424950527 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42242264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565662293 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728592767 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145688982 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.451644824 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574287032 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.192755883 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927684797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6754809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.003996548 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68352296 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118230349 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241785801 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683080389 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489609249 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683870573 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.562311872 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56829953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.434831919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301941359 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4201923 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376184951 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129974306 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.430657831 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090581882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705768461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424680741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.418199393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444673538 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.430962308 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645682493 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223750565 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646354376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432850535 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426823349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.41342418 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096979045 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754867524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361556119 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425224834 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698064798 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680000829 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446927787 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874422299 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.133042568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041951258 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.396288556 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443890609 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422470923 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232840535 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094316825 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.00750859 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002691955 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085505564 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423075851 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699898485 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428530933 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437384116 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703137863 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427599038 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426575869 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68234716 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.11607125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339635966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.433583314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.960680429 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.360389041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.668706853 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489379516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367292715 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424331972 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.925571214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.452283687 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547978637 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436177716 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420543877 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455216342 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181774985 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734097652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429546405 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.409679765 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.418730788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434890843 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526490355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054436292 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450428876 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10068606 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.778548756 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680570924 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433156034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.409286817 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.429172574 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42506251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170299982 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424926252 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430293922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048199058 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.436211557 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.439763142 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429711594 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641289435 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638246112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439656151 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680076131 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448582479 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444751722 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.326291167 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.222981295 seconds)
  done (took 1717.619479095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429068116 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.467626933 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.470447797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.443337899 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455039033 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.553583419 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.467255628 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46748299 seconds)
  done (took 53.088887669 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.438811042 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.586416818 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.460626488 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43231235 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435639454 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.430101151 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.969688272 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.467138708 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.435847186 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.43641825 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.432170564 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.438631748 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.191722908 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.441004032 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.433230025 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.420980607 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.43653182 seconds)
  done (took 67.230792452 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.320187165 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.745335195 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.107069242 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.441389259 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.459258774 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.448538993 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.540803762 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.451385062 seconds)
  done (took 55.851163754 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44557567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.445144633 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445871221 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.444944287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445939578 seconds)
  done (took 8.563266448 seconds)
done (took 2126.935820501 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432918893 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.435084746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.431943211 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.43423408 seconds)
  done (took 7.071463625 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.409205636 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.154179705 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.411128736 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.42475191 seconds)
  done (took 18.736231523 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.439807489 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.44445775 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.296544886 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.193387754 seconds)
  done (took 5.829809393 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178650585 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.191437626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.175271884 seconds)
  done (took 7.884414981 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.430769127 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.430504445 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.431665516 seconds)
  done (took 20.630304396 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.72553163 seconds)
  done (took 3.065109824 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.576296378 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.625787209 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.789774456 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774330202 seconds)
  done (took 8.104972272 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.816942588 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.810717373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.625276392 seconds)
  done (took 6.590804554 seconds)
done (took 92.134709092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.855642921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454203612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.639120561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.829253651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.659148075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.6377678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.73520786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.797971646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.334380169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.322899272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.833134688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.658507591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.682832434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456410689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.683980336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452980482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.703771428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.906524414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42990117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436361826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.740452522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.466876778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.66228073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.491460001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.707406529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.590325818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.062934697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.456036883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44039652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.083113988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.592076591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.442310061 seconds)
  done (took 201.584075659 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.432249172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430945134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430494526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.468146705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431480191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432063277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.454423633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.457334615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430192329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438386523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.442915625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.439024556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432932567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444776509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432413631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431781814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.467378775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.430949317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.432487266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.452060022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434279803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.452112684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.452526657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434792771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.432924348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.45315983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432458856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436636582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432826418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.432311121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433552751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434461189 seconds)
  done (took 207.415250871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.435917846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431980781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434482736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.455403885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436911927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449848714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.435038274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.433323426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45441968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433727683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.454031662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.433336874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436399264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.439281606 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435112127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434207744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.445673604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432862476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451044072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433755648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.455971539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.453039848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.445525429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.43415839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.442165992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.433594458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.448877316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434458033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43431307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.434197507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436188219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435943052 seconds)
  done (took 207.427419921 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630166513 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441458764 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.443114914 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382963601 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.444257973 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.441121601 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.439878689 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.640784538 seconds)
  done (took 15.207579694 seconds)
done (took 632.9736941 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.930671897 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.625122867 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654514985 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.463131786 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.347897174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.484190502 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461973196 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.658355512 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.425572617 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670274432 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.807866044 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.481462086 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.964683037 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461932231 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.744369998 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574777096 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.395275872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518600164 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.810753923 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091194361 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.747147552 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.044141663 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.682048377 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.419561988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.983512311 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.053480481 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.318722843 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381704272 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.483472329 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.819139729 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.24757171 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.575401928 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538179883 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.537436658 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.595505245 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574606796 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.559872047 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535939216 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.679661619 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.800880886 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.107062028 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.233289424 seconds)
  done (took 98.837001774 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.428200052 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.42900321 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.427030639 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.428138997 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.429648295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.429057629 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.427519647 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.428243433 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428982742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428165366 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.428379497 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.43044966 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.42865839 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428725898 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.428552064 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.428923897 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429363187 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.431777245 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42867524 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.428725346 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.429866453 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.428390084 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.429211544 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.429150945 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.430568636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.428759011 seconds)
  done (took 38.499960139 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447582228 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.714762276 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.90330837 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.454057537 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.447334941 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450526646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.540954577 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.449123758 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.450326909 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.451254697 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.617719228 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.45165765 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.487151526 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.936866633 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449925109 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.44849627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.449003149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.447048875 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721486138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.457537072 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566024651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.450264156 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.541549611 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.459500922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.475402287 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449541807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452902409 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.035841277 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.471924812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.617849583 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.427724984 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.542779962 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.006912898 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.938059914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.423256661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.455754186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.450820534 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.622108178 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45297882 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.450919146 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543197399 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.451054072 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.914418784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.159914342 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.473040825 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.451332498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.057003141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.644856934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.744732111 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458891882 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941051562 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.453404725 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.45233279 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.452751496 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.744500708 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.457231672 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.450394244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.096618972 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.478475896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543316524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.452479483 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.451408172 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732245017 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.451804383 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720269055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.453162011 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459119435 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.475628231 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917466515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.45448471 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.183192238 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.474570603 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45338187 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.620443336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.719299549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.09389951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.477921215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736813911 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.02632261 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.56308452 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.457252906 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.02619268 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.568350729 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.456615681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.454536806 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455609508 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.453548694 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.504339686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.542480822 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.11665042 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.193932411 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.127442923 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.568892062 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.467049784 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453472374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.101025569 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.477743466 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454412976 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.911661048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.18647745 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.476217466 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.461733008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.187366285 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.47759525 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.548153717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.46024534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.93149944 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.455509943 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50682842 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454992911 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.461629979 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.481625309 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.549344052 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.460330247 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456106462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.153516179 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.652564016 seconds)
  done (took 192.459601733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.449797841 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.448785349 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.453998138 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448650006 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.448428446 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.457363657 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.448820806 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.4506514 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455117871 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.449114237 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.449874906 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.451692996 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.451042928 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.475281121 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.461424249 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457552364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.103887986 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451941185 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.449239192 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.450517906 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.285530573 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.452569905 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.459030167 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.450025201 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.452744695 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.450823869 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.451630141 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.47493183 seconds)
  done (took 155.547767714 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457068405 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.126743124 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.480955969 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61364794 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.483933518 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456215812 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.610572368 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.526362175 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.479246013 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456436034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.456585196 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.816387282 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.460246852 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071013523 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.689638016 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.635399831 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.068447366 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.479904896 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.456349205 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.455581566 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.621482517 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469710068 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.817081959 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.130011862 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.480316613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.128346229 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443372375 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460105266 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.456674949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130219044 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.47954613 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.817860124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.551110714 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.529933701 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.151376642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.09188315 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.091373984 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.636971073 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.458686119 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.457719245 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.458214931 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.442956369 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.132247796 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.483936504 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459865123 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120076422 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.482032385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.460612607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465601124 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.459143806 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.530068576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.551032662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.842079324 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135804089 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.572609073 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472756247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.615256513 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.841789292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462549582 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072654704 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.444147379 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.190907303 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488945322 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444734896 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461616342 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467828776 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.639106891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.618315471 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074408741 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.481295603 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072498234 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660462831 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460968611 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.460302258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.463420957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.191955648 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.099542872 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.660825173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.619662795 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.695971168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445852449 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463124132 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.445849477 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554147943 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.461150415 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.193095405 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.101075157 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.484993061 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463100362 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464684294 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.463496222 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.675844092 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.214423502 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57972788 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064386686 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.873126585 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.856145285 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467499039 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.53329076 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482633299 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.85339483 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.468418743 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531508178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.909282882 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.831673961 seconds)
  done (took 176.686438394 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.739572675 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.797018498 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.563582087 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.632246591 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.121750858 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.061738784 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.870201408 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.615512541 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.58822626 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.7518423 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.773335489 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.55453677 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.705935936 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55016147 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.268668011 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.563354003 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.589916288 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.624841607 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.634671199 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547999027 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.236771917 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.783380905 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.675803365 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.581067857 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.568467746 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.3658667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.076641806 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.034795566 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.662730848 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.016822485 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.036385015 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.673153658 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.608398696 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.26103843 seconds)
  done (took 71.501895206 seconds)
done (took 734.877841486 seconds)
SAVING RESULT...
DONE!
