cset: moving following pidspec: 8427
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.147429276 seconds)
loading group "string"... done (took 0.510809885 seconds)
loading group "linalg"... done (took 9.662737438 seconds)
loading group "parallel"... done (took 0.170086604 seconds)
loading group "find"... done (took 2.42390787 seconds)
loading group "tuple"... done (took 2.266983858 seconds)
loading group "dates"... done (took 1.395348056 seconds)
loading group "micro"... done (took 0.644428825 seconds)
loading group "io"... done (took 0.653297985 seconds)
loading group "scalar"... done (took 54.105396571 seconds)
loading group "sparse"... done (took 13.63144091 seconds)
loading group "broadcast"... done (took 1.319362222 seconds)
loading group "union"... done (took 2.546529387 seconds)
loading group "simd"... done (took 3.527703157 seconds)
loading group "random"... done (took 13.35453307 seconds)
loading group "problem"... done (took 2.258387401 seconds)
loading group "array"... done (took 23.265667735 seconds)
loading group "misc"... done (took 1.667703828 seconds)
loading group "sort"... done (took 3.69907617 seconds)
loading group "collection"... done (took 20.435167709 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.89757014 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.180943274 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.243152571 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.637465398 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.313348499 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.20135915 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202941378 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.208364479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.690693426 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.220600369 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194988626 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403226675 seconds)
done (took 7.179820047 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.483334973 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093120964 seconds)
    (2/2) benchmarking "String"...
    done (took 0.238869574 seconds)
  done (took 0.986558235 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096842535 seconds)
    (2/2) benchmarking "String"...
    done (took 0.154014687 seconds)
  done (took 0.899699364 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134779547 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.201945264 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.149601426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131757488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150734292 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.149917872 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132357949 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149985378 seconds)
  done (took 1.714785878 seconds)
done (took 4.866942373 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520754393 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.937492679 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.571834663 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.222727744 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345546708 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.35805319 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313115329 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.263398667 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134290793 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105150461 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.257301909 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.467425233 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.45792536 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.975960145 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097551278 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.15010101 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.198267676 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.892711327 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.12317178 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156346026 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.544232901 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.25715729 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.154326687 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.152009804 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.227008225 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165458809 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170155418 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.140330402 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.749350395 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178043073 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.243540948 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.12542436 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171281293 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20006546 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.275926224 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148743435 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.753566694 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.243292714 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125470126 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141663155 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.784158285 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164217326 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245987811 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148047182 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11697884 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192742047 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145812816 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.117954002 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.152296722 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143175859 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204431816 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.583898691 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.145063331 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235602392 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150752111 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.782334722 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137506845 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.321283343 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.163753552 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148878064 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.13172245 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129411087 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.218056106 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.136196016 seconds)
  done (took 23.089132128 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245789162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.250458432 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.119901066 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.206308307 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.18962996 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.123150768 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.147150619 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.121994837 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.173828396 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.225203501 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.184335266 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255627521 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133969106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.13128535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.228863201 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.291961207 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.152832029 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.163360325 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148169657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.135569236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.185122775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.139115514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.152205797 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.138282577 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.216724032 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.248030076 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161150299 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.164316034 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.144893328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.140668915 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18816028 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.206559787 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119518857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148462012 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.221467366 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.168720128 seconds)
  done (took 7.048028909 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.277896726 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147041113 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.306660066 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231377066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.169426459 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.235451142 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.220888189 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.340094984 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.411391621 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225880489 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16803297 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.137834747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136918257 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.122111038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118775733 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.880803123 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.211113125 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200267839 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227408612 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15268946 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.122937269 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.411258496 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129836722 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.145705648 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138583596 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114347831 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.26982698 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137570813 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.523063219 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.142277992 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.13669662 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172856494 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.164735315 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.237031329 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.179805317 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.161704768 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.157169436 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.147847705 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.257270882 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.144462959 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.139978951 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123891585 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178294838 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.17811009 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.152114493 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150519553 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180523347 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.147368061 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153120535 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.234178933 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.23998502 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.230097035 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.131577525 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330421826 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.171382268 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145036943 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.154490799 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.243583496 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.893537197 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166039488 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.143950223 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122325266 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158154255 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.142767376 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.866780512 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162237402 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.408518607 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.126283725 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.207196514 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156569341 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.162551606 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131174336 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.147707197 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149151299 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.144669566 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122326471 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.144245213 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.122561198 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.146958414 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.145282292 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.141748781 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125337731 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.138488532 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190440321 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.156750682 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.148267685 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170456642 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.147662846 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.127682678 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174089708 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13991964 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.13306021 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.252367291 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160864479 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129964581 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.168470963 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16163228 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.189770356 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.132469656 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.361501685 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.128916597 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.187243497 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.144555965 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155123747 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155580344 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122489571 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143501842 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120791254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14130373 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192654464 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.145277208 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.127645299 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.152356552 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.137012446 seconds)
  done (took 33.2517149 seconds)
done (took 64.038433819 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.490538579 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109238281 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130180087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108513677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129692965 seconds)
  done (took 1.699438072 seconds)
done (took 2.412221521 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.228955835 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.343611631 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.245756267 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.146222852 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212022623 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213072281 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196112879 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.207382913 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217297091 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.213799257 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141610514 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233822244 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.222927901 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.194821501 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.142193175 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.245210112 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.191157633 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216652987 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.244097432 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146490124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142192513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.163800461 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145954184 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146692368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14508705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163587547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149427817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163455432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138422037 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147140042 seconds)
  done (took 2.376732704 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.170979205 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143220041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139826884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.155525125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.143189487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146425549 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143167056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161129437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150083149 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16213756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140343533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148912937 seconds)
  done (took 2.359839315 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.12146787 seconds)
done (took 9.826737443 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264351457 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.01724036 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198622747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.309898711 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.378084408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.318650213 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.673514436 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.250642718 seconds)
  done (took 16.249867924 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.266418902 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.137147797 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.157161776 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.136775767 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.152624343 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.13482684 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157968486 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135780562 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.154666178 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137682638 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.154390373 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.140174284 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134579356 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.157633255 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134603721 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.156758912 seconds)
  done (took 3.232781641 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.179745272 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178116623 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.14170298 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.160637227 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139523216 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.16009136 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.145625573 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158649423 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137767459 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.155488212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.146978228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159970609 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.141735136 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154010089 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141049511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.181928874 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.137198373 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.159287898 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.161950318 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.158862131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.159095695 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.142842526 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.157768811 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142863118 seconds)
  done (took 4.495715991 seconds)
done (took 24.705528769 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197376169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14555652 seconds)
  done (took 1.077719163 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.211024194 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.22809605 seconds)
  done (took 1.179168206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156773012 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.150376649 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166832882 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.163922912 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135741001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.15218882 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.159280767 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.15341193 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134273333 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.151961138 seconds)
  done (took 2.26961117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.13943524 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.154580126 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.149878855 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.220956316 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.160550148 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.138072576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.155748023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.138492965 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.157600066 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.136593145 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.155496164 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153521314 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155363595 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.15352625 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155136544 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139231164 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16040914 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137649313 seconds)
  done (took 3.505573007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136164041 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136266616 seconds)
  done (took 1.022527581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137576433 seconds)
    (2/7) benchmarking "second"...
    done (took 0.134473804 seconds)
    (3/7) benchmarking "month"...
    done (took 0.154855147 seconds)
    (4/7) benchmarking "year"...
    done (took 0.151711621 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136942094 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133204908 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151701907 seconds)
  done (took 1.750903366 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.584789569 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272811895 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.40253502 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104857747 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156281982 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.372528996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.159314007 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106520974 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105148285 seconds)
  done (took 3.042039493 seconds)
done (took 14.589770297 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136516485 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.330499282 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.649056331 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.17625985 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.134201558 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.213689428 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.387980292 seconds)
done (took 2.786600421 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360335905 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210911619 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121796741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137708565 seconds)
  done (took 1.582165678 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.127255749 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142516248 seconds)
  done (took 1.031577623 seconds)
done (took 3.37342898 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.158000332 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153533838 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138928165 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155341795 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139758816 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15593401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138713986 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153092104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139561293 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152760725 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139249987 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155050689 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136887892 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.156410241 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13734109 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.156220551 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138953735 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154168851 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136111436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.15555036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139753349 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15247643 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138835297 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154875453 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139584978 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155861595 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.136870249 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154020883 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.14083398 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.27962612 seconds)
  done (took 5.298385618 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.141287479 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.130392719 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.151677905 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14143778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150229788 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13649432 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149245545 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135707811 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.153624657 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135989768 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154001782 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135580563 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.152709737 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135979108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15451156 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.138705897 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.159549485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135361435 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.152180039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137284995 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.136585596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.151779886 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.135979697 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.15304358 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.13495658 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.150861213 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135668254 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151562654 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136700937 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151832077 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139091308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.155379911 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136505944 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162539793 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.139041811 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152554061 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.143525211 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.131100086 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.155759306 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.131435269 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.150800182 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135753778 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.153303941 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.141168204 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.15409599 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136232474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152414212 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136704784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153603161 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138291572 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150430443 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.136323059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.15525008 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137854906 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.137604858 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.15132997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135476503 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.15218545 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135349809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.154525447 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.134635072 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.15135609 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140427123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.155006399 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150222305 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.159853195 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135918949 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.156925772 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.138377111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.159544582 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.13845486 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.163777194 seconds)
  done (took 11.217473776 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136968225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135156851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154618839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136401065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154403097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140352274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154840771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135551017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152944337 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136338663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154468175 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137429266 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15370563 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137580265 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134745763 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155612548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135287917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154993031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137296775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156156567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136779784 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.153731482 seconds)
  done (took 3.957444946 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283163729 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144305067 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20592125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.15117754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.175427023 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167367054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142578783 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162210459 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140848179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164197518 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14560343 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160719735 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.155295853 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164853145 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1649005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148929837 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160472027 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148566559 seconds)
  done (took 3.762489834 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136910246 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136143985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156201627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136891265 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156978893 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138104848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157011492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137034689 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.156076119 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137766966 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.157682397 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137204939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155146378 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137148192 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136468836 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.15508792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.137018607 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155697589 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138434144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155584389 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138307207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155988549 seconds)
  done (took 3.988656563 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152092526 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158795124 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158356869 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161179608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139293264 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157804326 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144236218 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158677178 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145365576 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.15761691 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141062311 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158034679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155436477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158703006 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.144901772 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157660264 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140562537 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159071278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140376865 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.137774045 seconds)
  done (took 3.808178513 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231805841 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175695821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176238172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162687393 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17592026 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154331425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183237806 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155106501 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176034943 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.185707036 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157042545 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17481016 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.165754283 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.180181952 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155444362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183926241 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162961156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183524129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.176113295 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155896715 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185300504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155962009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18405982 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154991291 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175724574 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17576456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157064307 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.179940281 seconds)
  done (took 5.627276467 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151079378 seconds)
    (2/2) benchmarking "in"...
    done (took 0.169057121 seconds)
  done (took 1.106528466 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140673439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139153331 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.161145012 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140078845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160953926 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140719418 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.161068114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140446072 seconds)
  done (took 1.971091221 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.251414429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.256462883 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.144279409 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.170179009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.257330799 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236717199 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174659495 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.16469127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.139853098 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.153584131 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247929864 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.130765039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.160776542 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13553686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160890534 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143733008 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.161044728 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.147630535 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.165170394 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.141167397 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.16488396 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143305523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161447837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.150426487 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.155702457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.142400003 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162459837 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.161134435 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.157560272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.14018028 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.159122296 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.140919811 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.162801557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.145420781 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.161210974 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.257391216 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146870976 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.157585137 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139261403 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167068325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166418229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160197696 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.140769575 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.159070987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142458834 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.165353721 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.144467544 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.16111592 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132955663 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155591951 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141744015 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155809224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140630007 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160039001 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.1398951 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167603466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.143656159 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157701836 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136749754 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.156840677 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.13839784 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.157206794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141776505 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164543406 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140509773 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.160694948 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140192219 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.162073232 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141035598 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.163593885 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.139205718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.176221068 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14229928 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165698992 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147666804 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.163084327 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137493209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166894769 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13981714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.160972737 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.14534688 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.183346947 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141405535 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.155401771 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136152488 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.167969359 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142462075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.1643433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.133147408 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169043978 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144591429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.162213504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.132859965 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.159139971 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.13649029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163864332 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.132868617 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161014668 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.141044466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.167843824 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146222062 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158680641 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143464619 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166199523 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.146707946 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.159318064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.192062155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159470125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.136637434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.163376334 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146726942 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.156551281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.140125573 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.160054653 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137722532 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.157352607 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.14661513 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.162024495 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.143694102 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.16666192 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143541005 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.163913875 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.143594208 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.161326857 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.13765963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.165412126 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150307552 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.173976377 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.143080532 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.161771794 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.142619671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.161358871 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.145608634 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.158335462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146661603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157740145 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.142086368 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.163188561 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.147226834 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.161695639 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.137455277 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.159074238 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.142622706 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160369882 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.144223902 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.162509209 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.137560128 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.154983558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.142122961 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.156412525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.14324556 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170328665 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.139107267 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.163955978 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.137834219 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170732161 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.138939431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166328402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14504652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.167521056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147458118 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.133260643 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159710459 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.143433151 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.162414102 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.136794942 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.163789606 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.141630549 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.169146264 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135440308 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167393761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.133996744 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.158318129 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147564899 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.165099241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.145032123 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.157766641 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.174018567 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173841723 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.14823683 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.162437444 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.141262589 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166171245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.14134732 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.166895564 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148237787 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167603193 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.14008791 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.161515136 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148068147 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.15917765 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144368028 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.159989345 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143273739 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.155018585 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144411285 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.155146398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.146406211 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.163094274 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.146358512 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.168403273 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146077449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160893636 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150332499 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.157865819 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.147024701 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.155446094 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147658618 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172179941 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.148193111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166346578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.143095529 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159394944 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.14396447 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168882672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144547443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.162305919 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144168447 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.134744663 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.156974586 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.147525626 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.166223261 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.137221597 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16268597 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14209434 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164546222 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.139656393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.155022477 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146744003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16619662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.136803841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162666688 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.137703639 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.161298976 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147667213 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.156144598 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.138537093 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.165765661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.145969895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.163506641 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.140817773 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.165337437 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.149666766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.166863021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.143815963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159610242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150094784 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.161105243 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142120754 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.158728785 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144438036 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156312829 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.145021322 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162219161 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138986274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.158958283 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14568804 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168572136 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147857049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16003789 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.148015445 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.16796494 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149372347 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160580041 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148644258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.157589756 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.137879124 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.158376206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.136027717 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.164479599 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139330223 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.147345145 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.162285856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141220711 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.169219236 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164424676 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141533258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.147232281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.175280109 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.15692202 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136345475 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160189639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143019156 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.158966631 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141057252 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.165081233 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14493354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.167776805 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145926831 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.158893086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143804133 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.150000163 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.162029164 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.149124465 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.168833937 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.148778173 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160664241 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147433357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.161657529 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14707421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.157518248 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.142522091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164895567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141593039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.161072364 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.140883715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.160247844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135982261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.160904939 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.150269511 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.163283096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147496574 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.163610908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141276591 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.160169866 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138932518 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170718654 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.141397981 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.17110195 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.145143503 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.157815873 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.137771845 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.169490657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144449269 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.169237737 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13818985 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.169520191 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150108068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168288102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144598498 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171882587 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153755049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.169901903 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149220023 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157389803 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142311263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168878976 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.145155137 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.166079599 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.14603794 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.158436008 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147447572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.169655077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.144806989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161817467 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138197467 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.143586481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.170634421 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.146198375 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.168190635 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.14627199 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.166513711 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139482576 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.16868746 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.149135823 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.165914548 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.150224926 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165639684 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.14747306 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.162562639 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.149436345 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.166700048 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.139494947 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.159004133 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.142229224 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.171247484 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.13801497 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.169370436 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.149037389 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162005715 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.143817616 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.169573752 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.141235012 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167509964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150588876 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.163099776 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155134481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.14466957 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.163055287 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.147839418 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.171701724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.13752536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.16418734 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143046178 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.173025905 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141818209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169450903 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143792647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171359966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.14654573 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.170886762 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150011094 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.172259862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.138680687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.171713095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147052508 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.168262188 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.142157375 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163685935 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139735911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.164384899 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.150898119 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.163617724 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152594462 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.169978679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.141900344 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.162872108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.149711138 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164307391 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150832981 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.161949987 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146870281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.159105365 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.146279442 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164362376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.150671392 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.163260305 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.139765913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170212068 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149659692 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168894189 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147867122 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.172637391 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.139319827 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.159404556 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148955947 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.162225429 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155964549 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167505438 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.144933067 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164038147 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.148758079 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.145238395 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174978843 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.139277949 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.162903676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.14527981 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168722608 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.142438371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.161035887 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.149139865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.165406936 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146027875 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.164842333 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.139662835 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.166046613 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.151989422 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.164522101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.140514655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.164308461 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152579794 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.166158159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.141114039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.160855187 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15089714 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.169720425 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.151866303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.163994596 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.145167897 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.164106194 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.147437481 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.174507628 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.144400531 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16705062 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.143664629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172565835 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151258161 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.161092327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.142574499 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177637539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149864061 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.168406066 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.147863174 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.165695675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152318091 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173202988 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.148164845 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.160453304 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.141559379 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.165819768 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.139372675 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169898734 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151208739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.1656278 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.143658973 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171612705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149878174 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.170122424 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.149727088 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.139306546 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.175086589 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.143196113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.171024424 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.139077433 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.163695523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.14901545 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173471788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145060385 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.168506181 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147684778 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.171725209 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.141901718 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.166072975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.14963911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.172002044 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.151430829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.16658198 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.144711764 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.171006563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156946941 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.169228682 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.146394766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175529412 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.153193219 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.16818577 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.145389293 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171649747 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.152340807 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.170226788 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.153132396 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.166067164 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.14609952 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.175301205 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.153648447 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177746046 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145886734 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.16260551 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.149949321 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.16656501 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.142127528 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.170391319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153160963 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.174254803 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.147531922 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.164996263 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155654879 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.172192619 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146787155 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.164754942 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.145060702 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.17268295 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144419729 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172564083 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143166421 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17646379 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.154492676 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173460384 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.155015582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.162944491 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.152423358 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.170117329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155781102 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.168520867 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.142003933 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.14002881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.171733863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.153348624 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.17579685 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.150637999 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172461445 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.150260872 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169045102 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147767807 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166894307 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.153632849 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.173869578 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.1482809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170967208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145754512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17058533 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148252142 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.174886762 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153222377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.169136448 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.157879477 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.17635969 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147021186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.16616438 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146983476 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.172225332 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.149385608 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173693429 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145298604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163131844 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154064954 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175855954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148130232 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176950844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155459824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.167598928 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.151634766 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.178029536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.154789128 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.149885296 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.171035608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.150145423 seconds)
  done (took 93.818965266 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197810206 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178806308 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150581827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172561803 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169985413 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174275977 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150086206 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173263203 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.152090096 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181710995 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149986782 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170890998 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164892159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193671407 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189604127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160536802 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171788071 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152119132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170945022 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15281306 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186657006 seconds)
  done (took 4.452092717 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.150124195 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.14886167 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172138444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150597704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17200857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149872648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.172267353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150341849 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172855311 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150333553 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.171626897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150945911 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.149517835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.173116808 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149861876 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.173670083 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150014238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173118084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150370975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172887533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150365812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.171547803 seconds)
  done (took 4.410955782 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.174044532 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153191437 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170761534 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.150033947 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175903952 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149399951 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175959252 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.151167303 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184340424 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145755777 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163880838 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145512452 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.171203081 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151026823 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167306174 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151738327 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182149674 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.155455086 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.17807471 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.152244087 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.16294236 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.152346191 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151429909 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.166241821 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.155906579 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178511787 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154069629 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.178476022 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142057582 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.177603793 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.152231899 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.16708518 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1426383 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.16407295 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142789445 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.176288145 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156006184 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.173019677 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.153146272 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142724336 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.175177129 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.154735372 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.165239221 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.152049559 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174721515 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.14593426 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178082641 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151190944 seconds)
  done (took 8.624800371 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180817644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212879458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.154587778 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205635737 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190083839 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.162164115 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178685679 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181252853 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178584188 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155984832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.19133431 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.167885582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.18160777 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158890656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.179230579 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.15471782 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181270191 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154073024 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182251434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.17476715 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.161088562 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.179701716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.165737213 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187856553 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157684779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177649942 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154955774 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.181060543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.165036503 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.183361473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159117009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.18362205 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187050721 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.15917023 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176639285 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.157519966 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189879197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.158112278 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.17855912 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.154478371 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178628605 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159645324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.180170149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.168172342 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179377241 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.158680046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180002216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.154226782 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.188121002 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156085371 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184645197 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.189322285 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.160863778 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.178575867 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161522745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.188710604 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.157819488 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177449527 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159411774 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188801168 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154097192 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179424591 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.166508584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181067324 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.161554928 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.188956324 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158448252 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182389835 seconds)
  done (took 12.752348043 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187227649 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183261699 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168454729 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189632459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159556017 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.18288953 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160306043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182844655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.159465947 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187440815 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.181067423 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29368619 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162625826 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188219732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.161704277 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183390082 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161276849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183294312 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160470182 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18430526 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159678193 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.191226499 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.16056302 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.50108941 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194077473 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158235291 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182459331 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160473789 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161134966 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195252489 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160080956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.184000106 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19127708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171819398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.183615907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155834399 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182211215 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.161891559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.183170592 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157330989 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191368926 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160976045 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.18139938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.159615396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.184148617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.16747078 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.193788472 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.18819104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.166802999 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183172164 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168173513 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184583935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.15998005 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191777189 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.19983653 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170357188 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19149128 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15889647 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.193369286 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168181713 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.199422511 seconds)
  done (took 12.281871044 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.1577626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154741056 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179616888 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156938304 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179716195 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155486547 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.179634246 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156749385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17790459 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156567829 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.17883928 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156766423 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177860186 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158286984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.155531432 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.17869792 seconds)
  done (took 3.580635301 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174533355 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194875905 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.257518838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159718505 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180612568 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.164070628 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180619563 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.159561184 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.154382891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.186079812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.160104465 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.183671775 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.195822092 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158854765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.178379005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.159702769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.175752866 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160872217 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155961681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259611512 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186023604 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.159303876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.181858797 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.159905963 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.183820967 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.159405444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.18811085 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155281652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.182483574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156886118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182719786 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162548827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.179927024 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.161293508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.181679494 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157596857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.180344493 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.157647715 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.183842743 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.157498987 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18293475 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157884732 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.180207967 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159113438 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.179434614 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157344491 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.177883559 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.163805105 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.18090928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.159272139 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.181122421 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.161678796 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.185074328 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.16525142 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.187776342 seconds)
  done (took 10.520722554 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168924114 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181101035 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169917519 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179441775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159738519 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.182902493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.160199179 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158130502 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.184970581 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154174204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.183945196 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158270081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182436188 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157919075 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.184239204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158899731 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.180504813 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157912465 seconds)
  done (took 3.992657941 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157116581 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.155645193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180303688 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154659043 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179589084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155934988 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180346844 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.156028097 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180578389 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.156093514 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178480918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156939515 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155321814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.180877486 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154745174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179868521 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.156321725 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.18006025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155927691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.17805349 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157708617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.180526713 seconds)
  done (took 4.604551259 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169175437 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284324044 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187511932 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.296772336 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153793023 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.178327484 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162400369 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180123314 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.191790944 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154808987 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.176019806 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.15455901 seconds)
  done (took 3.222583858 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1847033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217774762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159365932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182159343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1681982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187387261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163406783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187330974 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169879967 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197897036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186427234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17121707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193352416 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171177655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190978803 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166052206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187236416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162343274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182904033 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200338359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164726287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19347907 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163914294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185951845 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163385648 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195310863 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169663664 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199442433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186487949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171750643 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191034978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16341802 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195806938 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173690594 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18466518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171137632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188864123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201559835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169698093 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195263618 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159704688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191352354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170034147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193220035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194644406 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165781214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191614202 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163638766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187175396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182971658 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192722337 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170035998 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193330614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194539391 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171962245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207154667 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197158816 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172622477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192482169 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17595511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195555519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167569423 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195420215 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199580722 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16822417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196167787 seconds)
  done (took 12.996254948 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197793141 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184577174 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16398406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.2007816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171465149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188926039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163410864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188632414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163581347 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185669948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231522916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164606267 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197347429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171447873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188764739 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163556553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188445023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196514947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161649275 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208689348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164143331 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197034363 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170679369 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195736124 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198315297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168563118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188541054 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163970053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188377958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164161049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194371053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163270116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196569186 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159838111 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197078798 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187635397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165720339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193138318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165474761 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192795814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17306509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204416042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163637458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189120243 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19921124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165061503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188548489 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162636602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189431659 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162044412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201545997 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174704429 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199669596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198031444 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165886094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189156754 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165991509 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189045275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165464817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192873833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171784347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192001683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.209605409 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166863119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188875362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174918368 seconds)
  done (took 12.99568189 seconds)
done (took 229.753321402 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.325274012 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.354702935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.175201035 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.455156061 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.175030057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.838119599 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.9061288 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.258969738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.150469896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.174532978 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.151055981 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.19419799 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.730555815 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.175476486 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151582688 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192405081 seconds)
  done (took 32.361370813 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.355370961 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.40206557 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.167442089 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.181882088 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.157436084 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.18327192 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153539909 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.182350738 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154955942 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.18618844 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.155379441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.177902359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.183270222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153664022 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.155374417 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.181366422 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.183776096 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158301343 seconds)
  done (took 4.438228977 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.175465838 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.228748177 seconds)
  done (took 1.372922077 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.186660148 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.276121696 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.378727281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.230373239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177277805 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197618111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.205171935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.193526669 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270628411 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167472992 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.194066769 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177390703 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182929847 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.185666556 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.1730448 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.177094426 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184549267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195541372 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.170185194 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.182820657 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.180340217 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.181863157 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162596958 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195730492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.260120349 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.16891684 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.185493461 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.157846908 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.184243892 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.171306153 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.189853547 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.171390574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192475278 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238791433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.159124346 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.233385318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.185441477 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.156502812 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.196696757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157580618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184746469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.182592793 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.168908834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177096016 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156907122 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.184235742 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.157565492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.179757391 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.165940497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.182926645 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.165714579 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.189214902 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233964156 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.160367286 seconds)
  done (took 11.290537711 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.006084188 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203440487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182905142 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.153826309 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.204184462 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170063391 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.018188952 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184001292 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314235331 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.093304945 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198615859 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166407316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.326451886 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.31627731 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.363636724 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418564969 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849743227 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194827232 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188691037 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.227381807 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186787155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175555636 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198105468 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516175222 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158846404 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180892799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.161927722 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190140736 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239450646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.158331951 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.186535529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.262112611 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.354458377 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273064857 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158632326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182660422 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156480898 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246015189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.361006161 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281165507 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.250192789 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15563143 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181784155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163075593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.19880332 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155119617 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243428513 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.255466004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255879577 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188591412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166527998 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.190430556 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160395412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.241435505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181893977 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422992467 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.452152695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157534038 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189319991 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.171623989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352538389 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.160474322 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299108445 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204678887 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27748936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.18194718 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870369685 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249497475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156547601 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188661188 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.163062438 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190548167 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.185831819 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.220493332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493972651 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188234485 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163595327 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18195207 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.291995533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.159009097 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182224567 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242038785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160245129 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189353716 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167325154 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189984575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.254489934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336817809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166007893 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.190056338 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163799479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193524736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.15857169 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.293719519 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319009711 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.240561326 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291086998 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162740042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244094174 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.248677729 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188005879 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252960586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.165239524 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196675877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162045937 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312131108 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.196124871 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187283144 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164077674 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.191032675 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224097315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.16268635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189592563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252374254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554869289 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.250426633 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.175680135 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.18807521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165305125 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242603206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190553065 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327249714 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164656285 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.248607563 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189573666 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.155277894 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.191816844 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246748476 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166836718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192446003 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.18780196 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168998441 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343164038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28331021 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.194302194 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312370659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257617203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164312212 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.255867626 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191389448 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249766722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167963362 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188014705 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159749704 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.902792625 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170284085 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191254945 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164023374 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268840744 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184514952 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163142038 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1827268 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157633073 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867523487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189264943 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.157699519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.187232014 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164712353 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.191200072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164118141 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190937901 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244950233 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310700382 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194392133 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167042692 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.185406396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242737022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.161286346 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.185123791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158978796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.18590534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.16636957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190725143 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16200209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251810263 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.242408676 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.317487463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.631802332 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.159383667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185891398 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306484181 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184625353 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390980399 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19064488 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.301562419 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24830218 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156396429 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.448620929 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24925859 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268056599 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.165534955 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256859454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156878199 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.192794455 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.244376667 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158919195 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192654488 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242886932 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167429539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.193775085 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.327098316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186097449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311258112 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.158473908 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252799104 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.185871334 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16544229 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.417530494 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160658698 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197329342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243982847 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165865951 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.186789468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.037274814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161658702 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195157521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166562191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.327705106 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.245587368 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167149516 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192487133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169114646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245316566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.292686489 seconds)
  done (took 61.695008852 seconds)
done (took 112.122071213 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320296483 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226700314 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.421814836 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234709745 seconds)
  done (took 2.265750614 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.340530801 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199547047 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.297537818 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183769032 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.304513647 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.15773987 seconds)
  done (took 2.496933177 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.230484123 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228159531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228786713 seconds)
  done (took 1.705837151 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269423841 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270323054 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412316368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324439076 seconds)
  done (took 2.357278165 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.337941483 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176836755 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.216347684 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.288331487 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306136453 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269526315 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.183181773 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237519829 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216856071 seconds)
  done (took 3.284011419 seconds)
done (took 13.126829456 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.211138758 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.215840904 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.179675397 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.199829276 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.191043352 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.22033802 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.187768202 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.214936231 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.187398184 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.199446114 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.185821467 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.197726768 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.30400292 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.187220005 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.198074008 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.185887918 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.198402627 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.221538852 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.190301192 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.194425302 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.19217003 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.195474863 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.173142208 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.20221269 seconds)
  done (took 5.847290451 seconds)
done (took 6.870266831 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.305472558 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.153368142 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17029558 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.197529602 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.28798872 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.17660335 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.214750321 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170688053 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.208348935 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.169408036 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.186036635 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183337238 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197534323 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.322998875 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.173466061 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.19035326 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.161117432 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209184761 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.185251356 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214335292 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.290009634 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162192714 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.208207622 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.160331604 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.288184043 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191209086 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.168736422 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.199565879 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.182468889 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.198026538 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172117415 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.187644335 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.185933095 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.212159654 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161316876 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.198077327 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159845812 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.159769318 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.172562542 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.196166903 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.185867369 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.19645953 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.172372876 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.188177506 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.172127414 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.195803525 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162294753 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.198642633 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.162044359 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.195206402 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164782345 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.211704622 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.172302917 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.158579319 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.187049741 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.160434792 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.20783467 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160726017 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.210793712 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161275612 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.190821579 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16076361 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201201263 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160194606 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.19754246 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.161117807 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.198837677 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.172219985 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.19849906 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164882963 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187907982 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.172964379 seconds)
done (took 14.755856082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.167126988 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.231291188 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.307154318 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.30788107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.188976572 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.206129649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.202149473 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.186655704 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.200633817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.181183769 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.225064087 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1939001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.307663301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.207690494 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.177917762 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.201947729 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.172509909 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.198127226 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.306945302 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.213456079 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.186107488 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.205813096 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.187578514 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.206177837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.166688542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.226890431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.1686545 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.201280398 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.165637066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.202109615 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.185916633 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.194345699 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.168263489 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.210219831 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.18221619 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.204849207 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.203423428 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.174992766 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.190596231 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.168353159 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.198961891 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.182797411 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.193202509 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.179144642 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.201492402 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.181676231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.201604797 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.178519475 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.193915725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.174977468 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.193992986 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.190698364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.206462683 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.183897518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.207205608 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.178444615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.2054685 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.178131792 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.197992648 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.177983293 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.193523958 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171871183 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.195068673 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.185653237 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.198233973 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.178849238 seconds)
  done (took 14.14585277 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.186964063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224817414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.177089978 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.205409556 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.171932105 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.18947033 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.161155224 seconds)
  done (took 2.372840627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.163514666 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.32348521 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.309708519 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.312552886 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.305151099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.350321404 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187266064 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.19028037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.199338594 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.201850357 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.323845175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.377466984 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.204209014 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.177977873 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.343578573 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165677757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.317579791 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.298002688 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.205798639 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.319573019 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180473603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.224477626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.203586042 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164976349 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.318656161 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.190771479 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.367025477 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.180428658 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202393212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.177318537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207494791 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.26750445 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.319239763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.177328883 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.200341082 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.317744294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.308818651 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204574969 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.364651584 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.19541504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.305594412 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.178916376 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.20676613 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.180443411 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.206073013 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.302647818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.182750223 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.207692922 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.177436301 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.327323267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.204318339 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.321889311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.202557323 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.179554649 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.201861908 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180998057 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212604952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.180725458 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.326197596 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212599094 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.316015334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.316797723 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.310830146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.315379102 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218546269 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.323232876 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.300162726 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1771142 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.312435346 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.209637004 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.317382332 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.205329278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.1770976 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.307093217 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211115616 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.321090414 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.319818139 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17417062 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.206762178 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.166767523 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.206339833 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1635115 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.334638045 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179858815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.204906809 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184141363 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.205594101 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.179587962 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.310736864 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218753046 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.179343756 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.205349335 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.183235973 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.207497725 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207904645 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.321877111 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.175964667 seconds)
  done (took 24.489358561 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.167532897 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.165468997 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.198491872 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.165865138 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.19366046 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.165977402 seconds)
  done (took 2.152793118 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.203723426 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.208123265 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.187941899 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.207057528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.228457984 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.30883999 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.317144159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.205035546 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.226978216 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.19235214 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.314105562 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.315126092 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.314083678 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.212082463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.317059977 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.182931201 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.319634214 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.207630351 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.188533537 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206105259 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.179338147 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.212283616 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.178165815 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.300287293 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.212225283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.181824221 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.203436317 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.190815323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.217213592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.174317168 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.211967999 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.206028838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.173685906 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.20098851 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.319371398 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.172536609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204126921 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.184781605 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.21165818 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.181464681 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.316547305 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207072575 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.185805756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214018596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.174972565 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.202675324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.182496341 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201446194 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.321334072 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.181668475 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.214024822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.20996312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.182700177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.210319159 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.173888489 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.202972565 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.184141294 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.319513692 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.214255362 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.173990883 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.210983963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.181728998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.205215251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.183822122 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.21041824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.183226511 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.20279289 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.181649677 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207467823 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.180469315 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.213003177 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.18017968 seconds)
  done (took 16.691206667 seconds)
done (took 60.895220866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.640188648 seconds)
  done (took 2.734580293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.260597888 seconds)
  done (took 2.354045913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.661729826 seconds)
  done (took 19.787783369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493702587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.415945475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.092617382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.240971371 seconds)
  done (took 3.340403499 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.163943408 seconds)
  done (took 2.276270359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.460444256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.343042102 seconds)
  done (took 1.904739772 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.820850855 seconds)
  done (took 1.936024663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.884366166 seconds)
  done (took 2.991427759 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359251751 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.282400489 seconds)
  done (took 1.759242629 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.749227549 seconds)
  done (took 1.872256913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.127862027 seconds)
  done (took 15.248745238 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.315611098 seconds)
  done (took 1.438275795 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.353601792 seconds)
  done (took 1.479019604 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.841193535 seconds)
  done (took 4.968715741 seconds)
done (took 65.200584258 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.182068512 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.211075614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.186123576 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.208142545 seconds)
  done (took 1.899004379 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18655641 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.20656018 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.185884596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.2059129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.186824935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.208123909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183012017 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.210201206 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183181043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180906462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.210402571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178593425 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.21352174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.179563719 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.207919726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.181863251 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.212980659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.179296084 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.211521972 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.180594792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209731479 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.182323174 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.21433953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.183502014 seconds)
  done (took 5.803181006 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.179442289 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.17063957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.203402625 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.169202943 seconds)
  done (took 1.850135716 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.192485632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.221552258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195049561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.218756234 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.197109683 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.220498061 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.180226896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.206231647 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.181839191 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.218918101 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.197300454 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.225905708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.193916759 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.215205613 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.192431278 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.205300908 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185495804 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.223198948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.18967148 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.229608134 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.184402014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.220185301 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.179873565 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.222625366 seconds)
  done (took 6.026731676 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.258313549 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.222648886 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.208224807 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.257608701 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.240513157 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180537581 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.237447092 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.187810367 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.214711403 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.189707897 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.208930161 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227723048 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.215373858 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.182937274 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.212447722 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.187539649 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.220524561 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.185603441 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.252498211 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.212727985 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.187989337 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.221219939 seconds)
  done (took 5.843019359 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.334896352 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.173161918 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.20125665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.17112199 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.215047063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.176206241 seconds)
  done (took 2.40534701 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.172122536 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.165794638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199087107 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.166011485 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.200536849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.166518041 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.194536848 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.16666172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.196010653 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.167943498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.195198334 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.167377191 seconds)
  done (took 3.298887999 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266110541 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215232442 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345908999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462485846 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257477268 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.251881499 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.374644083 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224482047 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.271330036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23113417 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274009183 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226400915 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246357847 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279726312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208133373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245146355 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265356335 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272785203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236825851 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311641546 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252123585 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268143263 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25749203 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24239772 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231563064 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228690724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.216628004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193577258 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260051681 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258957486 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27064994 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242515596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205628124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281408143 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324101662 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27344185 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.363946137 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227647545 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.253933793 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.258007298 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.352553544 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206780445 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287144661 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246846742 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192854445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286022323 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24383774 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.278752715 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.198076252 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237939202 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274759124 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242346617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.26390236 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231383239 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39502952 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198261604 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.236320286 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271596845 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280766814 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297241459 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244509952 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.218208822 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262045456 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286501376 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312668468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.204008882 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.257167742 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217482038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227086251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302486823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278118494 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255107721 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.286303719 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196372219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267788842 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261365309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248559781 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273888118 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268077579 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.21325706 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213164041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228385203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219236727 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.256799016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214428383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313630473 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195550009 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271512374 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270629579 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216558965 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255757995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256724787 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224862479 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243685505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155281742 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241026846 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.252192305 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220997607 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223268151 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244942145 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203584017 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.219760284 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216022807 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.218484108 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264296873 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190727278 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255169334 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265864271 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.19621312 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276173839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24063896 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.22796679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263805296 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296142881 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193254335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229336647 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318156737 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266545476 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.200630576 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266274667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294901997 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.236989578 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199290581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261177556 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289966275 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206861951 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296710337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23522082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229007247 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.194975554 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268597913 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252911039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.224063318 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221872542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.261183198 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252024737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.222698917 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232203679 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248506556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228992419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187859103 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230705042 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229627141 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.206773994 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.247592056 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.201706294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2486764 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265567882 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259007991 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221618103 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231227498 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268151263 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196920938 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.268155501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24275651 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.185189427 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.270570463 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29709329 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194049862 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277392311 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.256741538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273454484 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27128835 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194927284 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279398959 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191700506 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217226405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257468235 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235418076 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258543366 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287302141 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273518116 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262483456 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.260052681 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213640206 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26571661 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282741098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251677212 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.206014437 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271534866 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266380917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.18554555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.21751926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194315856 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233627012 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194688023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233360459 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277689603 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256134991 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269040819 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234984856 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234298069 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293040819 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.190485272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257728114 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.271195307 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204656014 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.287253426 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288846404 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275374724 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204158058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258934656 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.214806237 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193847878 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.228522122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225571355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234562186 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230538142 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207615291 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292131455 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265951899 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214339765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.310946645 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231199858 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30056117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.217932961 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.226848195 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262548167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265505478 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2528131 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228476188 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.224475784 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29072815 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239957371 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289324242 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265923597 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249262761 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290071129 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.263298865 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195924004 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242140397 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258441678 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205173117 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259186038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23919594 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196850557 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246473141 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.203578607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236851029 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284971433 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240595002 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270090378 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.221283673 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267058121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189980878 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239791196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272485658 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241261502 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.160511745 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261531624 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28585153 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216441968 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250005397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265835551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196177925 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417947188 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277091776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236741738 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233895805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233875989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239046871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256491178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256111688 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248889679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240091253 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308032113 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268140985 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.203697424 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229369129 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242580174 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21630286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.225123676 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.21705537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262670316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.240789291 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286574639 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202530445 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270952891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276822276 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.211719445 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.246031386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202580738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35840786 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236470811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27040321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.264356027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.228655152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280989472 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221682116 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192814209 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.230464121 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281742277 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197109554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277388619 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.259455574 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276080925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27267217 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227570292 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238566334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.193383472 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26928749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247371476 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277436277 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202327718 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.235548011 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28473854 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183072236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227944624 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224884543 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39181403 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24400375 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267020843 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.163473447 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.381623635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195126262 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230243846 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254838853 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235297571 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.231392414 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.254645686 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271288075 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238546527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254365534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202739065 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27348708 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27791832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266200118 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239858492 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.244251395 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259982206 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254312062 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23751093 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244359309 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.243052321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225460283 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296102952 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.272639878 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.19822712 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270928422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270594907 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237859596 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270493817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237152416 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280623421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194387851 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265052499 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204003173 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224275353 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258128575 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.263548111 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199070623 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271770398 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271399165 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198826091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225260717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214307004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267391279 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239941314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.196230253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284786164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.22804463 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281084826 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279519299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228785866 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264518581 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209118293 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230041787 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205959373 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242363003 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227678362 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.245012656 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276162864 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.196706069 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274312442 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26645801 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262195027 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219932088 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241313183 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.364074158 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.194984579 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296024178 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247605133 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262798378 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247651544 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279835383 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270641908 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217905842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263835061 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244113021 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.290269501 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265254709 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.267910861 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198312356 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242752737 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204657162 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.234148924 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249293123 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237744406 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241181518 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.235508708 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.236389023 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24471112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.24364882 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209428653 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30215873 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248940729 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288950482 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254849799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238502964 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275855839 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239264237 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229787113 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.263909222 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238386442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243820887 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252342583 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.201378569 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.236702827 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316955167 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.193884374 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260043633 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274753906 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238897986 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273984676 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.233196547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246909536 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240535474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279654902 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194231832 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.251284309 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272587789 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203244907 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.227005644 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270517223 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228556842 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.267022206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240738453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248103299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298927922 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.19144476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23483818 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389247843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260804167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263417426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.223696343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204374 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246792011 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260455013 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.233332984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273719384 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.230929408 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197294885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.24577201 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.220245442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.225973801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272517755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251128238 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258052751 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286999093 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.202373735 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.3583469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241047676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241010493 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.207495463 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.19746327 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242753204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202205396 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242503865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27710256 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318153846 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.265097313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.215390703 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235382756 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.194817676 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232042108 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228646337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250341074 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271937813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246571642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162406501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209168032 seconds)
  done (took 120.333377475 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245796876 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.241555004 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.25970672 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.310060701 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285834667 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.380677739 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.322170776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.337639703 seconds)
  done (took 3.646724441 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.189080136 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.236594532 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.245000756 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.185137787 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.209392566 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.567320875 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.235957096 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.220286461 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.230575315 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.223766648 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212273031 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.643221249 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.217726167 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.188233353 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.221429527 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.208552006 seconds)
  done (took 5.493330896 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.509630396 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.768099462 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.501784921 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.424925088 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.381157398 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.295265475 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.980986747 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.290120661 seconds)
  done (took 14.418551273 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.240925184 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.275403701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.470367722 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.444771319 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.286138624 seconds)
  done (took 2.988773992 seconds)
done (took 175.119297486 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.193242614 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.192492957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.226919432 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.194650252 seconds)
  done (took 2.063483143 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.252489509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150374288 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187322853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.150413613 seconds)
  done (took 2.015063237 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.470191767 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150511638 seconds)
  done (took 1.917073495 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.214559765 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.236887753 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205859651 seconds)
  done (took 1.940841682 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.20600707 seconds)
  done (took 1.483602962 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.189878919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.18848275 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.379387018 seconds)
  done (took 2.035819845 seconds)
done (took 12.727453746 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.212280123 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.029915534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.653965928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.201893349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.845165087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.468974144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.532353979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251921311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.274795757 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212217754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212256145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.813859955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.514114212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.948271268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.4997421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.949447184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.79565571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182020312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219403095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183080047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.510445911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.179618283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212992287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181467769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.793349444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.487480175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211640537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.961945079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213110211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191166807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.501893116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.180636661 seconds)
  done (took 23.885452025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.184248327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.270690108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236331114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.215712052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189788925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21540453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191777669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.227977056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.314003669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.182478734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.236274508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.181984833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.219708253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183690006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.238262753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.181507557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.216037468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18295714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220487344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183923971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.234061756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180669441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21494598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.182725121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214617796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.199928227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213363515 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193237743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21471458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19154473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218288677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182299629 seconds)
  done (took 7.999555138 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.225534745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282220217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237349422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.254709995 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.269272006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18439788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.303636947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.219022678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.324996929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216388164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.204748794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.215193329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22170732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.216858241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206840991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.215078299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.185555923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.216548954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.188844485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.219223594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235284393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183084054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214926126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184884557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.213712828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202307513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214427006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196540125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213212216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193462436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.219016419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182559687 seconds)
  done (took 8.355421927 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.19744908 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.196465761 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.239228606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.237398782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.193022095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.195477606 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.230100618 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.192365957 seconds)
  done (took 2.979207225 seconds)
done (took 44.489722828 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.205459597 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.229851531 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.203660316 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.197827533 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.377389626 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.190077224 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.199702401 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.224610222 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.195377125 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.238620144 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181499139 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.223567642 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.202686384 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.227877689 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.348093769 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.197879086 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.385393127 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.346841272 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19241415 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.232492778 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.192807115 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.350096402 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.231858675 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.192665027 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.331215933 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.186288775 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.371976351 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.193599393 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.193442492 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.217301242 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.34918345 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.226696667 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.191992587 seconds)
  done (took 9.310004365 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.294833077 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.227458817 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.191199501 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.226550728 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.193314897 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226007346 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.871045662 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.190744973 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.224927483 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.192164505 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.22500648 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.281055309 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.232119729 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.187415558 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.228020778 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172378725 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.334053229 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.225959527 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.184690808 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155047337 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.221801388 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.192010512 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.345905515 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.22265014 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.19204417 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.191306253 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.227659553 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.195768591 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.227538654 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.193193225 seconds)
  done (took 8.586490348 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.197615961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.204260422 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.244553924 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293735869 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.223340982 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239437611 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208720604 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.237540994 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.213226557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.220743621 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201069227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.255796212 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202360792 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.230667832 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.185280987 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.235506948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201162331 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.220230797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.193393918 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236943035 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205597582 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.23671768 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.207670766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231035987 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.183883144 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228345753 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.196424546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.229556412 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.194054175 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.235762103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.188088928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.22099504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.187834296 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.254213464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.187348796 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.233446369 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.205809843 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234385495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.199572378 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.254708539 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.187394641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.222441923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.21267443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.277870882 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.188040743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.231648813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.186718759 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.236285679 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.184102232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239614605 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.227672974 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.221310299 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.207463516 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.220111422 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.185358036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.228079231 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.186204013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.223508589 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.200596738 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.221309506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207568944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.228755235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199198413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.222656454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.197401109 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.218904855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.186080302 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.224186542 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.212460375 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.228574038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.224376604 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.220798269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.198646247 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.234128123 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.197903825 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.232529993 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.186046973 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231962491 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197248334 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.224275809 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.199174204 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.222881556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.188122464 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.236706227 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.207189915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.234250004 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.197814506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.230337756 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188206038 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.222115103 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204982697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.221813457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191655425 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.23355072 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.187331643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.224218378 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.198090842 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.230146077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.185913797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.212338784 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.226117397 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.185771666 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.248614724 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.190530573 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.22498644 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.196548903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.263417593 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.187588023 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.231924569 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.197567891 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.22101743 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.194531911 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.223538731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.186232237 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.23684558 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.204257711 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.229616277 seconds)
  done (took 26.509457312 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.445131975 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.435813417 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291472855 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.519788263 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.202435424 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.391820893 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.435193223 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.437982052 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.223710893 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.221180248 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.27976908 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.400737519 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.2267147 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.215647258 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.477851817 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.522038697 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.217974637 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26167549 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.257743845 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.202031347 seconds)
  done (took 7.996264423 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.196758431 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255816482 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.210712494 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.239569128 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.197814524 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.239253463 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.188018214 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.243145512 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.199655805 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.228949852 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.191427076 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.228397552 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.200705121 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.201995747 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237620076 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.208973131 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.231417996 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.19203345 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.244470042 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.191996 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.199882887 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.212939591 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.230986162 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.208748946 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.24002457 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.196973632 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.221939172 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.192262515 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.229308443 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.196586774 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.226628841 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.196578535 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.229648294 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167872143 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.232847025 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203144923 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.226760266 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.192269909 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.192187082 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.224926704 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.202925192 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.234318507 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.196268195 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.197259215 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.207370907 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173377957 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.237693279 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.199915305 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.203305848 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.208525895 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.234336221 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.202463304 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.22978587 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.210908531 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.228741882 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.204785407 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233480682 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.202858462 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.227440939 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.187743022 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.220326869 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.192006 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.230631339 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.20372096 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.234623634 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.198094724 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.230040216 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.189100307 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.224736793 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.193057098 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.191326471 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.236540462 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.243486485 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.198114684 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.195844475 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.233715307 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.195988286 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.193580745 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.196678963 seconds)
  done (took 18.12682106 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.2136327 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.232715923 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.208219879 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256136106 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.201287282 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.230420263 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.198840598 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.207502901 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.237180311 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.206309622 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.23843077 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.236195581 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.210940906 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.234140849 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.200631443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.237488317 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.201583193 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.261188508 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.200565815 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250876459 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.203664733 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.228460795 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.203159891 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.236454371 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217984997 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.235876614 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215693916 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.237556291 seconds)
  done (took 7.600380104 seconds)
done (took 79.426444568 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.522455016 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.688997326 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.443966891 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.454336162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.439296321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.504565713 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.448497742 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.447497316 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.068402279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.421993663 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.443322817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.446845214 seconds)
done (took 31.719039525 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.518215922 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.161837886 seconds)
    (2/2) benchmarking "String"...
    done (took 2.171068199 seconds)
  done (took 5.680195248 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.142388003 seconds)
    (2/2) benchmarking "String"...
    done (took 2.152589892 seconds)
  done (took 5.631609926 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.434795987 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.430892489 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.544553873 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.433149813 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.433079857 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.433655864 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.446240667 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.436635414 seconds)
  done (took 17.495712094 seconds)
done (took 35.097972584 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.486955967 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.730062919 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.707321371 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.417977637 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.440390855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.439604058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.43471187 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.497507184 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.447003046 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.424695595 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.887255203 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.722519625 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.451925728 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.859236464 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.418504778 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.450418666 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.455777884 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.780707071 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.437150698 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.432800981 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.435110756 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.420971596 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.452970923 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.446673179 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.44756702 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.440802223 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.441296704 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.435157235 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.715598047 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.477237326 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.424225386 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.4553455 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.437922727 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.435897116 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.437010742 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.448954485 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.713468414 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.451005073 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.438977042 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.45124497 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.744414494 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.438523538 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.435902291 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.451190356 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.421574352 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.499232488 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.430466101 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.562369054 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.45632611 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.450646866 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.525740762 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.849860807 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.447027536 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.450948883 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.437161809 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.756807086 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.437766142 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.555393618 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.475120754 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.452435499 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.436530024 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.437520685 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.462377284 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.459652176 seconds)
  done (took 159.744953209 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.435544085 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.44039524 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.439612495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.445639044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.442236126 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439014 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.436666699 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.437146554 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44035006 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.444281129 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.440836137 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.439147863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.442339461 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.390871747 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.447820666 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.459210893 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.442139657 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.438879407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.4553023 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.439526243 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.449140717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.441480877 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.445386879 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.442061809 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.462924764 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.530108904 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.46232549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.464614428 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.451220619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.438565351 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.455488019 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.451109128 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.164340953 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.307422108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.457115322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.450139007 seconds)
  done (took 89.013195042 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.439422611 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.439333664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.439462529 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.477517102 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.440247687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.089068131 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.089044163 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.510884386 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.96239888 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.13926626 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.740351096 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.439502383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.537713503 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.453420889 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.444974224 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.538356553 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.467678786 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.442081701 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.44127223 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.090014114 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.454688859 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.482713151 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.633731172 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.441885945 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.479025257 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.844579248 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.441028238 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.479866631 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.788065017 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.48028938 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441319482 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8850894 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.444403613 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.956764052 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.557083941 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.441930487 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.479544853 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.441905655 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.733486859 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.441902651 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.443361619 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.447502307 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.186063325 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.443512456 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.094063526 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.444415365 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.459143562 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.443478735 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.44493115 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.874430244 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.331278139 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.446021405 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.443156276 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.446646921 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.442290572 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442993311 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.479880342 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.441977039 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.835008462 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.411541755 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.445820061 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.447335214 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.481317881 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.444054839 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.478090025 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.445450387 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.262179049 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.5070506 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.716726582 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.095068088 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.446203395 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544355807 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.56682824 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.444938096 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.445060329 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.446703751 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.443002262 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.560636121 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.445371597 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.285083651 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.443003584 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.636698423 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.445801191 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.14596728 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.550181886 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.444850427 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901068289 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.449791545 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.445016229 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.305721593 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.547838183 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.446334616 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.446422505 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.443850215 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.444133603 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.291909662 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.09692436 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.801954113 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.447493065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.173090835 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.449822622 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.423602069 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.09095732 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.198709628 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.450339448 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.563491419 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.638226985 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.447933036 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.446906818 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.148027861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.450384152 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.50414126 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.45145967 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.851665774 seconds)
  done (took 409.298194574 seconds)
done (took 659.395927782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433084694 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.436295938 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.448820673 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.434343712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.454282816 seconds)
  done (took 13.555937801 seconds)
done (took 14.906232005 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.45058093 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.452472396 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.45401579 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.236305615 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.452325929 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.451054843 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.452748496 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.451693544 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.452377002 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.452182124 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.20530655 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.453991626 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.458458808 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.389706033 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.206381088 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.453723355 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.313682908 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.454450167 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.454949947 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.759407519 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.45975779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.516153724 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.734370572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.495700456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.753925861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792435773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.459996787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.638823371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.472693644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.470707371 seconds)
  done (took 20.906728035 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.33406553 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.76919059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.461089598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.536144201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756830268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.495905757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.748412707 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791676549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.461675094 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.614583501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.47372482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.472126069 seconds)
  done (took 20.93306383 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.186530848 seconds)
done (took 93.409406774 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.492880579 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.560240984 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.488595525 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.470864194 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.467119223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.467992629 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.470520743 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.469384236 seconds)
  done (took 13.241020669 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.465425031 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.46681464 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.466631372 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.465880338 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.466270429 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.467302907 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.467041988 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.467784326 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.467122383 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.469337135 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.467752776 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.467366459 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.468414364 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.467129535 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.466398611 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.467618113 seconds)
  done (took 24.826872174 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.470503959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.469210174 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.468035152 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.466563423 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.469322922 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.470227353 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.47119743 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.467070214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.470171159 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.468777442 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.469040756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.468246182 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.468403838 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.468806789 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.468802979 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.470196247 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.468343634 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.467553549 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.472363409 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.470625561 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.468858763 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.468680824 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.468761831 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.469596186 seconds)
  done (took 36.615480673 seconds)
done (took 76.036969917 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.463116273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.47737013 seconds)
  done (took 6.296704799 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.528654602 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.527392119 seconds)
  done (took 4.414743743 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.471979033 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.470497344 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.470908107 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.469176942 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.469524595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.470126613 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.470086729 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.469720648 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.470069066 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.469811584 seconds)
  done (took 16.060207884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.470028278 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.470350596 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.472221625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.470931625 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.470917636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.471062302 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.470195952 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.471590782 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.470693725 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.472603768 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.469859148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.471742811 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.470982142 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.472541493 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.471841644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.471950067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.470938308 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.471007593 seconds)
  done (took 27.839067671 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.485672354 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.489309264 seconds)
  done (took 4.332632459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.601135427 seconds)
    (2/7) benchmarking "second"...
    done (took 1.513508803 seconds)
    (3/7) benchmarking "month"...
    done (took 1.577345704 seconds)
    (4/7) benchmarking "year"...
    done (took 1.569452493 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.514602053 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.493325435 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.514716235 seconds)
  done (took 12.141320991 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.466194082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.768521304 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.957825988 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.63451281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.46029092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.478146429 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.462652922 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.48095133 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.48322425 seconds)
  done (took 16.551258294 seconds)
done (took 88.992443778 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.461763388 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.564691084 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.491237809 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.478500942 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.771301371 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.476491574 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.465029747 seconds)
done (took 18.069468543 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.444938172 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.446522024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.448036807 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.468594243 seconds)
  done (took 11.168113913 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.46171656 seconds)
    (2/2) benchmarking "read"...
    done (took 1.78680018 seconds)
  done (took 5.607689729 seconds)
done (took 18.137534534 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.475691904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.474168764 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.475400342 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.474238138 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.474028483 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.474110923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.475285089 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.475373508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.474413378 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.475331957 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475994084 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.474569399 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.476759346 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.476708078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.474317801 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.475674766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.478623912 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.475346301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.475824136 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.476208041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.476591873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.476484192 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.47652969 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.474590495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.476104078 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.476361131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.475732056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.476476376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.476451518 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.477454703 seconds)
  done (took 45.632452672 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.481522154 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.483344088 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.474594152 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.476006141 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.476105806 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.476915953 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.476522417 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.476540637 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.476993113 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.477337036 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.475483436 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.476402947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.476314812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.476230321 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.477959845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.476050078 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.475060761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.477390596 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.476653938 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.476741691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.476496042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.478027583 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.47639547 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.476352509 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.478314152 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.475572557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.476724828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.478023011 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.47775575 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.47812395 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.477493855 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.478303117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.478297647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.478574428 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.479335141 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.477245609 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.483515688 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.484076443 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478294996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.478398348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.479665206 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.478521931 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.478197687 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.478754399 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.476528953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.478130385 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.478437828 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.478668437 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.479734509 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.478387529 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.478599428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.479566415 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.479151891 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.479285233 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.479415667 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.480092517 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.478458713 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.478813478 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.480460031 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.480999078 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.480237703 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.479895538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.480421576 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.479795273 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.480038055 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.480398423 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.479894083 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.480960073 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.480922759 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.48283122 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.480492572 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.482497879 seconds)
  done (took 107.818544419 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.481170748 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.480890123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.481274145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.481171558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481558596 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.481299398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.479813794 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.482670084 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.48080453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.482504335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.480250911 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.481689604 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.482716222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.482096292 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.482325315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.481191069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.483231302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.48238613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.48261673 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.482247113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.483198043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.48197492 seconds)
  done (took 33.967037902 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.482347018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.483908657 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.482181101 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.483748846 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.485888725 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.482459508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.481474043 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.483941572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.48421347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.483392688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.482925374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.481224542 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.484100958 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.482691942 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.483347572 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.485647444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.483008993 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.485949851 seconds)
  done (took 28.070163313 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.485813009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.484824517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.483438443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.482833916 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.483832383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.485969016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.483404505 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.483664286 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.482942477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.484732788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.484462988 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.484737127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.48519518 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483985754 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.486066587 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.485763165 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.485760045 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.485193854 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.486795347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.485269572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.484831757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.486217274 seconds)
  done (took 34.035567762 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.485424852 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.48542338 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.487116397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.486064076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.486164076 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.485834516 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.486275735 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.487619942 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.487944169 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.485464354 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.486508205 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.484615699 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.487616808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.485284101 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.486703742 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.485462711 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.486588451 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.486678382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.485947762 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.486007347 seconds)
  done (took 31.09697387 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.48778603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.488040127 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.487589469 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.487548135 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.487753082 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.487724747 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.486944679 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.48780232 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.487976071 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.488885785 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.488608873 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.487928154 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.487353723 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.487723092 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.488399043 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.48821798 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.488395396 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.488567291 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.490092604 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.488618816 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.490066297 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.489086738 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.489827211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.488512751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.488680338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.490723643 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.489915784 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.490450764 seconds)
  done (took 43.051706337 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.5086405 seconds)
    (2/2) benchmarking "in"...
    done (took 1.506653917 seconds)
  done (took 4.388062187 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.489336969 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.490082163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.488762469 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.49066732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.489890133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.490993765 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.49004439 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.490014643 seconds)
  done (took 13.293191758 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.481596794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.489402183 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.490547209 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.491851446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.490751679 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.483447114 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.49150418 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.495077353 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.485006283 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.486855334 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.489757098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.490162574 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.485801079 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.486422737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.485698191 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.487027542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.492808816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.493845895 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.493263862 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.492285752 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.494802609 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.486928334 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.489810194 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.495400347 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.48627129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.495840888 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.492030163 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.496782153 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.487092567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.490484038 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.489798305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.494325626 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.494272225 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.493355745 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.493322345 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.493535397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.495580236 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.49360238 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.493986891 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.497844181 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.494244151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.494105588 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.486806222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.490606313 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.491269492 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.497473828 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.494902651 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.492141337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.485934295 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.490993314 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.501231546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.486850509 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.495863515 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.49166751 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.492532872 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.497733648 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.501688247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.489937774 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.494974657 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.500283354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.506109069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.504028274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.495440656 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.501240747 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.496165558 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.501594896 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.498875864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.501662361 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.497248498 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.496303954 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.496876806 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.507086877 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.507150329 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.501574623 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.49626352 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.498183491 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.491890053 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.499441802 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.49946677 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.500115439 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.503479583 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.498987445 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.496620581 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.501161699 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.493912701 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.500400131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.497240494 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.499197564 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.490139608 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.50218793 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.505484293 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.49739798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.490889138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.493710804 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.495364391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.499762338 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.489841328 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.494680869 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.500937116 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.498314188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.496627449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.494419514 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.501990645 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.502511276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.499284549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.499528428 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.503507724 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.492783186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.50396768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.505456313 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.499788028 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.493087803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.498156305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.502777987 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.494791759 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.501862511 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.504167525 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.495779609 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.503957199 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.500513823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.501269598 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.508779994 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.504935919 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.49950177 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.496537856 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.508547483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.500633237 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.498418265 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.505065641 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.500860959 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.500499792 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.496820181 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.505626967 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.494121198 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.506286991 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.496190261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.504169542 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.502956174 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.500746525 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.49765573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.501185913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.499465952 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.499629159 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.503823294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.506107199 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.498648491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.508759648 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.501663978 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.500348862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.503209299 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.507655551 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.503693616 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.497252979 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.506503709 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.495263372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.504522665 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.496612841 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.505632164 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.50197563 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.502541474 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.503657775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.495317884 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.500698497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.507475743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.501700331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.502037274 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.504764606 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.503782902 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.5040413 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.496097038 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.50739886 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.4962182 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.500480297 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.51025336 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.505065139 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.503706946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.50159024 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.509923439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.503366951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.504634072 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.501009085 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.506153417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.509742538 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.507088366 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.512738098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.506381414 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.504844055 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.499086159 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.500380077 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.507993328 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.500176968 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.514159963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.510778328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.518348916 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.502488179 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.510151073 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.498829351 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.510245253 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.505456497 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.513424979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.506805963 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.505860863 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.49937325 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.511152293 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.502254497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.507947518 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.498727625 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.509766173 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.508255859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.506730097 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.50770247 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.502207554 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.506657259 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.511068492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.506552501 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.506628497 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.501357881 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.511917318 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.499900083 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.503437683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.511218303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.507562641 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.510663431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.514479369 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.504081206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.510656465 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.50916107 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.504209177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.510895239 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.504777677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.507293078 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.513634188 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.508660429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.505721451 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.515881537 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.510211422 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.502193578 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.508045783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.516983801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.508019727 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.503716601 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.514659837 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.510578587 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.509310468 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.508767223 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.503190803 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.512791882 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.511794433 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.516829817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.502991011 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.515810397 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.504576128 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.513281799 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.507006638 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.512377637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.510883158 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.512991 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.517880708 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.511404822 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.506164871 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.514634599 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.511363048 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.510393665 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.506741462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.51743102 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.513003773 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.511371823 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.509286709 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.50937268 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.515538191 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.504058519 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.514926255 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.505977328 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.523620076 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.531175741 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.514888326 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.515495076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.5169992 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.515556377 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.512600691 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.510389265 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.508619858 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.51089502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.509671571 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.508947125 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.51576886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.507100389 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.516498021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.511322217 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.51415927 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.516324513 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.514020327 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.506535906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.517411106 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.51415227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.512510369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.5048832 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.516120524 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.508757045 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.516939663 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.511835418 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.509925688 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.52073451 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.51677147 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.512526175 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.513093611 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.510426108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.508139873 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.510923104 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.518070991 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.509211493 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.520410083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.508596886 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.516477756 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.510159589 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.519130148 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.522100139 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.509999708 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.522409121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.514478349 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.508447283 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.511237199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.516976956 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.516980589 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.52554181 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.509070004 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.519970407 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.515150631 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.515939059 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.515917652 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.517731791 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.5155901 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.51464533 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.521170255 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.52022122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.514233237 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.51897872 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.522115056 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.51736786 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.516407488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.507157411 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.518668946 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.524765295 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.51350496 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.517200322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.514332435 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.518383814 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.518666274 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.519919665 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.51592248 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.515887424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.522272826 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.522594261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.522501347 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.517463282 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.521938287 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.527677904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.522804687 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.528342128 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.514658918 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.523716556 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.517656449 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.513247958 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.513996546 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.514125754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.522420865 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.51107697 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.523265485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.518131766 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.516579371 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.519914089 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.526641199 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.511049487 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.519472769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.531846709 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.512542797 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.521699654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.518381518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.513052124 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.521100001 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.518992157 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.51221275 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.516061515 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.520712964 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.526459433 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.513185385 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.523124067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.513543588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.523849618 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.520550172 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.520082915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.520448267 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.520825239 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.514391197 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.522656332 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.520350817 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.528832204 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.518333419 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.520116345 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.51832936 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.526236052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.531726609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.516812994 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527297241 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.523372494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.516149399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.520607915 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.528186899 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.517275246 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.5251466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.515293365 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.521757405 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.520197092 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.524073804 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.524872543 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.526147433 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.514732671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.516789914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.524405087 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.521574899 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.523916544 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.519634012 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.530021774 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.517323695 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.515684511 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.524546972 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.519813653 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.528621151 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.518939722 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.52338079 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.521408049 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.527751907 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.523469379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.522826793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.515370156 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.518416047 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.529013708 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.528167941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.523973113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.522105454 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.529117771 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.517550325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.522707798 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.524632154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.520214789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.52110222 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.528730812 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.518756861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.521694949 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.520092442 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.527101911 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.52672526 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.525113388 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.519901289 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.531190531 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.532627269 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.53477606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.517001684 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.523918394 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.522930201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.52702316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.526152134 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.519182684 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.531371657 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.530034631 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.531844403 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.524478553 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.524859673 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.519056573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530670969 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.524872186 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.523307884 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.533043992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.523320783 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.535458095 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.526234119 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.52575599 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.520017257 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.520918814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.523244037 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.526423007 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.529673972 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.526687186 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.528687674 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.52794279 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.533063603 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.526488717 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.528423215 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.526177686 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.520062028 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.529915571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.519249376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.528789793 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.528973993 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.523201249 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.532099834 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.529219866 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.522214575 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.529280873 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.535459232 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.527593477 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.521927244 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.528544729 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.533898347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.536283031 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.528122869 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522566239 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.527468722 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.531612784 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.528243892 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.529086107 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.525212433 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.53977828 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.540737892 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.524105204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.528257362 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.534113994 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.538104875 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.531198735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.529577144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.5266672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.529832724 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.536465954 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.530822302 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.533908114 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.534676025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.526600556 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.533748853 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.525371025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.530543329 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.531658705 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.539613345 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.531961248 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.527549358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.540663341 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.540344304 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.531024976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.546941731 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.535334353 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.532906992 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.536204293 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.523714934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.534152271 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.527886881 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.538730871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.532494315 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.531438135 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.533007979 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.524648448 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.534379378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.537234334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.540901473 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.532845937 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.524072712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.529251999 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.535110916 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.532434173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.535592418 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.533112066 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.533645378 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.533752373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.526620986 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.546279843 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.549012052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.539109609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.533636726 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.533996491 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.534220789 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.535944731 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.533871518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.540247791 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.534061777 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.532580991 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.532338288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.542974132 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.535312788 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.527974962 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.52981617 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.529855438 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.537938426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.543222329 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.553741179 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.536502157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.535859491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.538929558 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.534514797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.528648576 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.538565058 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.535477191 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.529246521 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.532801084 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.539755007 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.537329997 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.535312022 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.530384845 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.541917971 seconds)
  done (took 903.593535668 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.537314469 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.534022099 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.537104794 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.535119429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.535757253 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.536415416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.53643887 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.536688836 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.53628191 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.537938599 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.537454594 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.536579072 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.53838674 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.536615553 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.535404656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.537544622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.536870989 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.536887172 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.537254846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.537069261 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.536750341 seconds)
  done (took 33.684047328 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.536069648 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.537506725 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.535694049 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.537471271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.538149057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.537977189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.537403607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.537706734 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.538405073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.537528908 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.539191958 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537195992 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.538229641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.538496713 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.538071311 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.538412104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.539204239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.537738387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.538974056 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.537079828 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.538520052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.538746525 seconds)
  done (took 35.248483655 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.539504097 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.538814534 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.531742264 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.542972205 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.538833816 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.538478821 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.540888973 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.53917613 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.539845988 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.532142687 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.534545005 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.533856471 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.538000212 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.547661446 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.538067174 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.547222824 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.540322914 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.539213373 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.540507619 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.540836534 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.543070541 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.549802772 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.539377969 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.532731903 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.54305362 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.539814792 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.541970263 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.541108658 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.533027654 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.544858865 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.542499684 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.53496959 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.543242447 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.542641909 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.535614041 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.545410965 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.543445211 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.54165747 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.542153145 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.541423758 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.554168523 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.542918275 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.544380222 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.550385036 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.541991402 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.538018314 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.547816216 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.541851031 seconds)
  done (took 75.383748582 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.543588973 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.543291233 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.541733679 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.540557542 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.54242841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.544948374 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.542424452 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.541991881 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.542675216 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.543683445 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.543666482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.543243163 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.542757623 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.542558564 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.544639058 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.543965992 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.542032318 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.542928855 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.544503838 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.545046769 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.54328427 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.544868048 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.544683723 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.545170515 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.542650438 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.545952604 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.543981059 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.544188244 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.544263097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.544074337 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.545406273 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.543395997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.546465013 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.54363854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.546390508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.543722502 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.545210338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.543327798 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.547276723 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.544453435 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.545526879 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.544210559 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.546734616 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.547464387 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.545676879 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.545628522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.546440733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.546657388 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.546614814 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.545663282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.547523215 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.545976379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.546312835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.546684015 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.547270578 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.546214539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.545822486 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.546210705 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.547232143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.545504735 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.54606951 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.547001954 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.547321877 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.5468364 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.545404125 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.547986903 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.547213836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.54672498 seconds)
  done (took 106.47605459 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.54940657 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.548120488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.547728974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.548476405 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.548337618 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.547918559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.547443969 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.547424713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.548962899 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.54763212 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.550273266 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.548880145 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.549309011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.548008536 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.548571711 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.548509262 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.548625412 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.550080742 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.549946203 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.549410074 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.550093514 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.549252664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.551238614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.550296625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.549955436 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.549821025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.550552086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.549676454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.549880155 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.55015153 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.551625469 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.551940936 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.552632331 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.550737905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.551310351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.55111577 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.550355855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.550710384 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.550042653 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.550785346 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.550260558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.550926415 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.551174006 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.551431432 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552418222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.55207302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.551709645 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.55230671 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.551136029 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.550980807 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.551588544 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552538515 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552014025 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.552625655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.551609596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.552080296 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551689943 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.552019618 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.550639313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.552711945 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.552419571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.553170301 seconds)
  done (took 97.550808356 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.55216421 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.553471205 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.551156162 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.552915724 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.552867815 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.553070256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.553951054 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.552129165 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.55213936 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.5532937 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.553720344 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.553466695 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.552698816 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.553846453 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.555101235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.553022675 seconds)
  done (took 26.275274845 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.551782718 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.555266903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.554291652 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.554909536 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.552949997 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.552397176 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.552021316 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.552938364 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.552929623 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.553407695 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.553486156 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.55403399 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.554532196 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.553963142 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.555045606 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.55444493 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.555470446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.554029363 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.55412087 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.554732854 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.555227958 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.555473952 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.555722201 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.554019777 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.554684214 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.554850069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.556100941 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.556308771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.556000493 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.555507367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.556030185 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.557861021 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.554192823 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.554625061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.557582742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.555316688 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.554643108 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.556027163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.556316225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.5530103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.556541633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.557262482 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.558417901 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.556967634 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.557623511 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.558091597 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.557037314 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.556410218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.556689201 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.557579294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.556897541 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.557098795 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.556892953 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.558667619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.558881156 seconds)
  done (took 86.976955099 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.557614637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.557245254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.557984952 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.557994884 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.558256072 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.558470127 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.557819288 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.560084306 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.558290332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.558098551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.557933757 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.55804321 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.558561813 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.558615363 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.558275448 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.55870805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.558899734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.558026377 seconds)
  done (took 29.481450313 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.558673651 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.558974319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.560266426 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.558454406 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.595679319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.55961312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.559606518 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.560884416 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.559835793 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.559485354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.558624033 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.560839912 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.559157464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.560889931 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.559056798 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559630843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.559921559 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.559696362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.558674946 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.559380449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.560895432 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.560697742 seconds)
  done (took 35.782310486 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.550152294 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.550918288 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.55055137 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.564302276 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.562283193 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.551013882 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.552921319 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.551157047 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.56965413 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.575956365 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.574610141 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.560448631 seconds)
  done (took 20.148813622 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560292805 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561562815 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.561254934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562060375 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560741362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.560251918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.562557668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.559687803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56203148 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560633414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56163993 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.562500435 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561122803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561817103 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.56142115 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562165178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.561249946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561977526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.561345858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563781679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56152237 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.562632353 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562081554 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.562490618 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.562427131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563323223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563679533 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564783001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56283502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563861081 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563036367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.564783881 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562052628 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.563601041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564106508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565397224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.563555842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.563902323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564456429 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.564119235 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.564769842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564575489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564411282 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.564736064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565372844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565523256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564253278 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.563135242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565174659 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566576488 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565321352 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565181355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.564948907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565192706 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565451811 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5651691 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.565871048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567398998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565133686 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566671271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565151611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.565064354 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567463817 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.566865844 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566403572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564305658 seconds)
  done (took 104.636462547 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.566145734 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.565044021 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566013838 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568019136 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565839996 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566264445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566916577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.566123423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567318354 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56711442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565567657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56622316 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566958415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566887439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567454306 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568595822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.567497919 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56812401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5669248 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56777891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567479244 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566261626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566919813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.567384011 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567446399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566933522 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56967548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569546769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.568505359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.56768396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568491264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568965666 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569826832 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.568749603 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570039101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569935062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568540588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570711566 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569806395 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569270205 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570275391 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57054965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.567718187 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568994268 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570399741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569482687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569349076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570187049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569685817 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569287744 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570930347 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571024918 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56968117 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568960962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.56993508 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568926888 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572101434 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570713207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570419134 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.572225532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570308131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570349678 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570339734 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570644703 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570899828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56999066 seconds)
  done (took 104.975158343 seconds)
done (took 2002.927768936 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.56064253 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.557708105 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.559984279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.888094643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.563329168 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.222090623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.245689685 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.561116378 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.560290594 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.562258187 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.563151856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.55819509 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.901807922 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.563031453 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.562144947 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.559415853 seconds)
  done (took 58.432631811 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.592425529 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.570997789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.708058454 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.567024779 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.595466171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.794894755 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.631719919 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.569754791 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.778551381 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.570573185 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.564761555 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.592642293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.569650071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.560736317 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.591102561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.793107852 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.875419968 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.567945076 seconds)
  done (took 33.938923922 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.126534276 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.569779232 seconds)
  done (took 6.140690359 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.591443825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.569552945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.57201268 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.568157092 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.561077637 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.559929821 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.567328065 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.565652975 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.573522957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.722409604 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.57005163 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.58243199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.566413218 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.569691357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.575279728 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.617065705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.70258603 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.576390532 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.575747736 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.573004976 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.568397992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.749456832 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.617492027 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.577902615 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.722407903 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.575998019 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.575372143 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.583687645 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.727410745 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.581139036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.569457135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.567776243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.570168159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.56487746 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150373619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.56479027 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.604543042 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.576961885 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.577177736 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.72715806 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.57130415 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.576582364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.564515281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.151583321 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.702558424 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.809441723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.572215106 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.572716516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.572559889 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.725072466 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.573326004 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.573212636 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.636604593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.577880018 seconds)
  done (took 99.146116819 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.578969243 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.56543543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.75211476 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.588507152 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.565701958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.563978039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.58561326 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922663043 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.572521739 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.564737138 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.918443288 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.280136809 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.564795866 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.61375616 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.612705796 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.603217476 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.566037213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.565073562 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.56642682 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.571987557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.18346371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.566951664 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.586470234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.765599246 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.610340623 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.188388694 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.566994475 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.566472165 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.567742619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.566014365 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.240858468 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.573789708 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.624483945 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.568781737 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889758001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.040500036 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997654295 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.565945677 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.588730724 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.568033645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.602388188 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.193270624 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.018934204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.567689352 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.571398382 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.188428861 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.567294821 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.565590557 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.573720531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.845699374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.569097211 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.570657433 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.566661518 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.567617969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.566951775 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.637974729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.64306483 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.191040429 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.567588671 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.569265158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.58229382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.571868229 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.56834415 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.57178375 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.57370927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.021948897 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.777121288 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575649439 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.022653456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.236985152 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.570173351 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.319357946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.571767806 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.589870963 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.682890681 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.568674443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.570791246 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18685362 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.602132529 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.569198566 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000588945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.568935067 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.913014734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.590513356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.571844076 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.204387447 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.583753237 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.637713989 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.571377403 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.57124397 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.591138658 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.574170332 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.896374102 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.606806736 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.571461853 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.572419365 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.607095344 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.571968846 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.572751834 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.576594661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.324476639 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.576284481 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.571023015 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576654176 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572648665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.573115787 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.572634893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.571985634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861934045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.572601819 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.575963499 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.574495256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.572420228 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.574238089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.771741207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.573658625 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.957715444 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.577435475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57068509 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.597648874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.573253347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.578744933 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57381833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.591940128 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.562129792 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.934159839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.595233988 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.592338064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.573361669 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.584288758 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.576835068 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.576161758 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.613390637 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.575606199 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.474421516 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.599581375 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.60422567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.573803727 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.577388313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.575072623 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.582211575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.574772479 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90924187 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901240773 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.790883215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.580417394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.575933426 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.461949792 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.62270887 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.761439213 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.598269995 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.574865972 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.880643873 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.78768981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.579328514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.57577922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.57902202 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.866509802 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.577159885 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916529847 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.271866289 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576753032 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.583890036 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.47019224 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.357580073 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.57792353 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.576544176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.91022425 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.596703935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.576780973 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.575621972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.593862962 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.576098279 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584346042 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.584434329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.576709412 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.576493156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.650414725 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.77642553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.597341798 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.583936542 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196666589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.588446393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578065215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.584489875 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583020867 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.578481957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.629158446 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.583798107 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.60938615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.580774452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.580524148 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.272796319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.578996664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.578864253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.778095573 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.418388338 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.579637575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.579766432 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.578400738 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.616875896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.229080289 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.590130865 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.967894239 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.581190829 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.623479433 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578478319 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.603976713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.22713113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.583532536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.57799258 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.395196076 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.57976983 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.36021054 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.580971403 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.578769709 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.330613858 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.579327713 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.580136179 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.582916877 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.579276703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897309484 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.58346726 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.605423783 seconds)
  done (took 555.409019238 seconds)
done (took 754.509654225 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.58124213 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.585103523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.584276672 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.583324006 seconds)
  done (took 11.796558789 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.598091032 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.587642553 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.597888069 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.586818157 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.595863272 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.587322481 seconds)
  done (took 11.019218773 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.581304159 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.584976986 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.585033939 seconds)
  done (took 9.215910112 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.840583607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.590192422 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.019028439 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.6015551 seconds)
  done (took 10.51772937 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.598002604 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.597612148 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.596774358 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.597356189 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.599604781 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.600214381 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.598752713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.599283321 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.598808432 seconds)
  done (took 15.849383709 seconds)
done (took 59.863221588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.667206271 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.666142576 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.605311275 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.623804717 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.719681452 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.676605181 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.668621235 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.67682966 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.66721722 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.62537104 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.668452955 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.617253697 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.667035631 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.783709892 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.624477031 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.665994439 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.614457527 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.767467419 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.669233294 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.623624649 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.690494929 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.623754346 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.623981641 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.586578709 seconds)
  done (took 43.290266094 seconds)
done (took 44.757011753 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.622048 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.698596034 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.594921252 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.595671003 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597952188 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.59549835 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.616231364 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.597407063 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.611534135 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.611465723 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.595453365 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.603385335 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.6127074 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.606595439 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.633296265 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.599139708 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.596406874 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.606296649 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.612175307 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.613297487 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.599780559 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.600142946 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.625031635 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.59770967 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.605390071 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.606514669 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.603657889 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.588192784 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.605383685 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.611837685 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.593859419 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.604729491 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.614769618 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.609122112 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.601769068 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.606948319 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.601830309 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.7005822 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.620628425 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.608289311 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.606411395 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.614074664 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.603884202 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.604282769 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.610983111 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.625558256 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.607651415 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.614097735 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.592259142 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.591444162 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.6210773 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.6116367 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.608267059 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.591028882 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.593488352 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.615238243 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.609897796 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.621699827 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.608180887 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604175658 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.634711818 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.620782926 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.612650639 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.610678469 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.607569223 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.616484433 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.610384588 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.617452887 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.608767572 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.602349645 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.603925139 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.608833502 seconds)
done (took 125.416070377 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.722065942 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.594194719 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.755189194 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.604946231 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.769996607 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.722749358 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.604562037 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.60658374 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.605072093 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.398727424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.604918913 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.605885579 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.596668848 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.604350279 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.722933853 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.607044219 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.604404237 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.299686951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.607454287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.733108217 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.599350736 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.605729128 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.606356087 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.40761497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.595809885 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.591961642 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.734375349 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.607309223 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.305519904 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.591217402 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.592758953 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.308373546 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.73609661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.625933852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.617191027 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.615593644 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.77235671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.610393353 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.724794697 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.726031056 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.758350936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.646468717 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.591651189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.598757663 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.608994265 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.609945406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.607446161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.637397002 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.597893617 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.607897953 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.301187838 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.619214733 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.607267105 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.611101928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.609327637 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.636909097 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.608360954 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.610555889 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.737149867 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.609521508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.726132149 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.413862279 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.402574181 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.608468749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.59917594 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.60973501 seconds)
  done (took 126.394521059 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.671181784 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.685584714 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.725547565 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.604696703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.657246309 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.731334877 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.605635694 seconds)
  done (took 13.156957934 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.60681344 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.610369838 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.649314551 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.648551319 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.612336922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.774871084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.609966753 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.614529649 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.60983398 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.654009065 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.611881573 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.613608126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.619527961 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.602419092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.651128479 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.615612118 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.722031162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.60598918 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.611351403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756592845 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.612465313 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.620484684 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.653479067 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.617936961 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.612785156 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.611236851 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.367866997 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.611013681 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.61164516 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.612503834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.614412999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.67235466 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.613638217 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.601955462 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.612765925 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.718603365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.614347515 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.613780385 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.612884453 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.604301548 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.611603335 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.612614964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.614111615 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.611995723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.611782702 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.630409646 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.613668874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.614059197 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.614321709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.614703827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.654822219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.613271287 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.613395915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.61424143 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.658835621 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.62194296 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.614265394 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.613503395 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.614458045 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.613426951 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.759287423 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.652441191 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.614388321 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.653345395 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.614675825 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.614937338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.614793523 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.613388809 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.695412184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.615279032 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.653758588 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.613808469 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.789777491 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.634269362 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.616904838 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.611355573 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.612246269 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.615900161 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.605368563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.615014474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.61766432 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.610480313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.616879828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616718095 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.617080193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.767544198 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.716703276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.616763858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.625207297 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.617167077 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.617108043 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.659543581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.618062541 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.617819799 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.658775134 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.728251918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.660744435 seconds)
  done (took 164.671008244 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.621613291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.620570585 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.611918976 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.63842543 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.612240633 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.608737969 seconds)
  done (took 11.196580749 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.612595921 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.620801856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.618662781 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.618664301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.619623189 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.620487506 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.617876412 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.613247587 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.62290342 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.618826296 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.619462938 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.620211151 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.620892339 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.619663934 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.620346645 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.619257436 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.620012588 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.618556368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.619413175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.62169695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.609815589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.622612202 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.620445149 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.612765149 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.625334297 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.622135296 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.637002686 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.620730134 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.621615037 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.623597366 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.622955589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.622059512 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.614506328 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.618705499 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.623947066 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.612849546 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.623906712 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.623570231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.620921189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.624019682 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.624037167 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.623843416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.622046992 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.624508217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.617215939 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.6181918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.627666257 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.638102536 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.625746034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.624725745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.623915225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.62238624 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.624209669 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.624773042 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.618386403 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.618096676 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.629070873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.623534355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.625051451 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.616073571 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.62546895 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.62408327 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.61747216 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.627437635 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.62401609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.626476628 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.618530616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.628357349 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.623655887 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.622600341 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.623535632 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.62486155 seconds)
  done (took 119.25071032 seconds)
done (took 436.141082695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.091988263 seconds)
  done (took 4.580481525 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.855552117 seconds)
  done (took 4.346102935 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.478553477 seconds)
  done (took 26.9788196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.701704987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.614164565 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.610392193 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.614319691 seconds)
  done (took 12.028865074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.245652325 seconds)
  done (took 4.734652518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.624280246 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.617550982 seconds)
  done (took 6.732544743 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.020320379 seconds)
  done (took 4.5098505 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.441758077 seconds)
  done (took 4.940066295 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.624131198 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.622775585 seconds)
  done (took 6.742253604 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.613260797 seconds)
  done (took 4.101727751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.269755729 seconds)
  done (took 16.757674866 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.63888369 seconds)
  done (took 4.129920721 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.669080054 seconds)
  done (took 4.159516788 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.9098626 seconds)
  done (took 7.399454069 seconds)
done (took 113.630338941 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.61088505 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.613482746 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.610951231 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.612284736 seconds)
  done (took 11.9368841 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.690579487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.689413529 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.698597308 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.683729369 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.683287073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.693118241 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.652859899 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.65321719 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.681237084 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.679442082 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.696959129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.683416863 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.693398554 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.65244446 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.677295507 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.69379804 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.68332994 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.699308152 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.654168839 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.68368391 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.628264629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.685624318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.67901872 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.628386915 seconds)
  done (took 41.734588558 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.114439533 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.690500772 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.772634203 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.67045757 seconds)
  done (took 8.74065137 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.731308874 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.733597422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.752675534 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.787250636 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.835537987 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.747806161 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.651342679 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.649579806 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.634973008 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.734070946 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.80836446 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.732040538 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.951877568 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.628948123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.947098016 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.629401539 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.62761383 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.732431661 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.781708873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.814481615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.630399012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.731642037 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.741922841 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.733793226 seconds)
  done (took 43.2415657 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.636343517 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.645887478 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.631249362 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.645627633 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.632265509 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.632012007 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.631958331 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.635855406 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.63124751 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.631425581 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.632858909 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.644855523 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.631248427 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.631901484 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.636310552 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.633016101 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.635538533 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.638275139 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.639091155 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.630718005 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.631099973 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.637906222 seconds)
  done (took 37.470889937 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.617502207 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.616658897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.967254689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.873026267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.61844524 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.621620047 seconds)
  done (took 15.808813519 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.709814088 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.866616454 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.622547814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.07148369 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.154726316 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.625026531 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.624955451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.9147533 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.305979757 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.336859003 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.677097555 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.705687044 seconds)
  done (took 24.112721544 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708281307 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628975107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.644357015 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717371256 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632649133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628528552 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632178295 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17900169 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.633658214 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90315001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628294828 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726644605 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87655964 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629257024 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633920127 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.606009553 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858207533 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239556915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632688843 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63341297 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66257844 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643960294 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.639955174 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884283119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632045177 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629858016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.892716476 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.630374879 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980999158 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960798728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955364273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633147525 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907848769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151432683 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739019374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879327391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632167923 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633030476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.626641611 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.638896667 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63320047 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.633229444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954926155 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634340713 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.631357714 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642303603 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206508882 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.643601655 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.630545082 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.630110228 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959579956 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716357093 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.63772851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.631732468 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717127731 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635325618 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.637536156 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750245335 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275421464 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632057974 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646831966 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.633124677 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.627601635 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636751555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389713642 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.638561147 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.637690994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636948983 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63166527 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.646215938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656644714 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634170231 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.653061939 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632432654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569598617 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.640327757 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635921447 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299754994 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651211994 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.634766581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854512219 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63385353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632350504 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.632064682 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632091598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598883517 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645458067 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.609611429 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6674529 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183634147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887161783 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658085542 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664154102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850640595 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.611318389 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635284733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.64404364 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637249352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655818008 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217603377 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639233162 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.641741827 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884187508 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.845531288 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645003125 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.622140993 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222577369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640097512 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.658813939 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.645933686 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893484506 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.365453127 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976406958 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639793536 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674964832 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.637503793 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.629324942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655329408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.643973904 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.643633785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960075823 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.614714511 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641984902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709925305 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647418891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.63651309 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646426176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639662238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637334395 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.874091311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654633277 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96590564 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.642302983 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63794269 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.640455969 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646243786 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.641575521 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854943959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645960645 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909940204 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637807855 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63906689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637657373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.856302131 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.637063809 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.646390554 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979250175 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655873126 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653296081 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968998721 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67687279 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751037673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673878613 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.657345378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892884469 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.64724564 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.646152643 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653185524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642680326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641361709 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.647866567 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637190393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374351103 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642997676 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644535972 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640515027 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.655108965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714016089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648881476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899057513 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.645024345 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643139139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.648097766 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.639835455 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861850471 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972713236 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.654002912 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816360394 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.230157324 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382290397 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657204907 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.640347303 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.639993904 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.642619923 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643200382 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642217449 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644311915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891800575 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981257366 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642207678 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379942718 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647964427 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661860082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.651864179 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972176237 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.654234277 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645934986 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.642881982 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661351076 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646280451 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975795015 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866189884 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.660929842 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644637627 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.20712252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652730559 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642551867 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642894711 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670062369 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66163888 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270131526 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987791019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658397324 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976958745 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.663357292 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.662855106 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.644872482 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657660287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658691888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.658030769 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652991528 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897660041 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667933658 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648791212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285118196 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.573390485 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320785368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652169199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.662763806 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648491789 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200085427 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647887601 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647020516 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936995097 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236550409 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650182342 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23315175 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.656180421 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.587229501 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979537683 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870554073 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650725508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.661867454 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986161539 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860681963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673720843 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653168832 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646847969 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.623489785 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321765322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65404293 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827262654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204897955 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662961118 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649708648 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.715149529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.659923953 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155893149 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65174089 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648448081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658161604 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663021752 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278875794 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655422859 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647116443 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410892609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652847287 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.239343914 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651894348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914201793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990279757 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.969437219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.661657556 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.662766046 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.894284248 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982455346 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652672781 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650173984 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331135921 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.51256678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.657863837 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648899336 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.65038287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662186131 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005538606 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.651942849 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.655033406 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661661403 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651589518 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651963904 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.650451166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659760239 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651763578 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266154515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.649815117 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695064831 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669181011 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651092919 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899808467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.666620008 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386240089 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885294651 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661627005 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68689037 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.655890784 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669137567 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.631198504 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653557093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651503244 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676082581 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872529392 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.675163186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.629472112 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.74139202 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86322289 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.652135575 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.667774767 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91859722 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.655275652 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.672182589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619976847 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688353605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653029113 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656949973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652663476 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684654358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728056518 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918549122 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.98660102 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987999932 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163968276 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67804519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656407214 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.669652486 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734409181 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654835484 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.661967634 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.654683248 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398561037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619387411 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395479939 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991048272 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6571575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665080293 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653951875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895711652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65555349 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931906873 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656974379 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.664239014 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680787144 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675512373 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669707492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866147876 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929326873 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65505117 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671980459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65817953 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.656499388 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995495186 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.868061279 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271299241 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331187824 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65943174 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.672682725 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218730843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933972448 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656487912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657528997 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657163027 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.683538343 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658794284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.665461059 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673000695 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882533222 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990222128 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19493674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994079838 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.681742968 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.540623231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663239104 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905905369 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500149904 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917248854 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39992606 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520833343 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912483942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73064131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91418761 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.659515833 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893747502 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.656212349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657754181 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656521679 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6573698 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.656304486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989564172 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405042003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916394264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.664010832 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.658336849 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689176244 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.921421615 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87630128 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625068757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879661107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996420145 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.66913428 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659672043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408196055 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000713032 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661890842 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.665248454 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923486885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663104405 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695844121 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.541133787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.66127232 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336040837 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.871819713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681318889 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658178365 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519988088 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40650092 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.667560957 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278422118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663963119 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662086894 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938292154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.668389599 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662254464 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950249389 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.667414415 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.678991501 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921763347 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.409617324 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.608352154 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.663205821 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668723904 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.667636017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661737677 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65743055 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666663785 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670525424 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.161951352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667044439 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662553766 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675523405 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.666426503 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666435907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.662138715 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66380814 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.672453792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.691369488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.646076652 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.668936326 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786167182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335612674 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678746991 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.279062053 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.00131745 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912529605 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663472825 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.639989511 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.669420554 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665812166 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666751051 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663995147 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655412572 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342033162 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.666117844 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.998337972 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671064244 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.874343586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875216904 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664201574 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929455598 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668334465 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688675509 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.644099526 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667781464 seconds)
  done (took 1120.945578315 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.706918093 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.675719429 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.688850581 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.767568242 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.722809936 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.733684121 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.675149906 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.736399067 seconds)
  done (took 23.235938761 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.668610115 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.670993604 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.664663321 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.669088457 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.669113308 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.228329292 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.671507256 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.668747841 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.685275624 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.674730012 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.674315098 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.397215439 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.668950675 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.669923862 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.665604943 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.673936464 seconds)
  done (took 37.561473038 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.1665622 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.678470447 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.544086689 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.738475832 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.68721278 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.663041905 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.291018349 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.694154242 seconds)
  done (took 30.99413441 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.673422851 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.673972061 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.674052994 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.677220007 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.675038933 seconds)
  done (took 9.906331239 seconds)
done (took 1407.181609116 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.673852893 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.673419001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.672858596 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.673173375 seconds)
  done (took 8.223771565 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.646269501 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.646981905 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.646672458 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.657822715 seconds)
  done (took 11.130440077 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.120783132 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.362025615 seconds)
  done (took 6.016144668 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.670708693 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.433284297 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.420892004 seconds)
  done (took 9.05918095 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.973037445 seconds)
  done (took 3.505541132 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.085794262 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.154852199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.685756903 seconds)
  done (took 8.461257151 seconds)
done (took 47.92834267 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.663488267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.43208004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.902942929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.659980529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.864740303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.833110899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.900629315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.676465769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.678464021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.666573429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.663414573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.843047536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.887424227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.426822388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.888034006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.428073422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.834035794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.66405959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.681939626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.665044485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.904639217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677090743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665771767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.67959864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.839028379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.827375343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.680807735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.433401061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.662231078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.666318413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.835139992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.66357198 seconds)
  done (took 92.329103121 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.662669808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.667076328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.666257884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.66297755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.676880548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.665553486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.665067254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.669407362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.666443929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.6880929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.666870294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.66620254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.687469929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.662672764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.668155058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.66568837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.668193726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.666692558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.688912623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667303446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667012809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.67162661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.667512864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.684432217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.666511743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.669760746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.666420416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.671785414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.669110472 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.667949493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.691081407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.664405746 seconds)
  done (took 86.991632466 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.665465918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.669375968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.671230974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.664787193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.670086179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.670265863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.66969443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672124013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.669457312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675440796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.670913414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.676928752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.672772768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679774465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.669614467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.683050792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.685960545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.670755711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.668446812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.67952819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.671949024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.666211135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.682515762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.684624475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.671171922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.672802242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.669368747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.672176315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674445274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.670370077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.672286249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.668820485 seconds)
  done (took 87.06847892 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.909612884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.683631132 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.684867685 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.677479819 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.686733073 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.682372183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.677045596 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.914008914 seconds)
  done (took 17.453739726 seconds)
done (took 285.37860879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.691805566 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.685445686 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.704785481 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.679462941 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.693764077 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.703380961 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.919162347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.704835754 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.907366944 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.679376224 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.699939645 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.683587165 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.655817341 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.835983882 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.672143859 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.702432927 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.707624523 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.674359447 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.680119981 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.939053372 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.706765993 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.674890611 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.682693371 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.680364801 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.660083769 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.758483803 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.757758453 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.849472381 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.810304755 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.75844574 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.678210285 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.681764617 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68993233 seconds)
  done (took 76.549125308 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.677831761 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.687216464 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.688391178 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.687069086 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.68734256 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.687318925 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.677141222 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.687027564 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.687118379 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.686712443 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.687408587 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.6879176 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.687608709 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.686416031 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.687464079 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.668775516 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.679134961 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.687192954 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.677639241 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.667796099 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.686978504 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.687640474 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.688531173 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.687354569 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.688933379 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.689897385 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.685867557 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.69007439 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.687085489 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.689665157 seconds)
  done (took 52.097190205 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.688591051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.675242605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.68235694 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.684880972 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.679944921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.686831283 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.047647146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.693686156 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.6855332 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.685279509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.674667196 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.691555884 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.73786714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.690018866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.684940549 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.68906523 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.689994094 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.681533923 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.675033607 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.699561366 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.057368726 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.694057559 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.054414247 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.701262087 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.686819546 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.683401544 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.688778186 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.67725725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.688010251 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.67717213 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.688327969 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.05049968 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.680293046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.675974464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.688768064 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.697400863 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.69337306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.68573407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.686786296 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.685788713 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.053126952 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.688402601 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.69250011 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.678077433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.686334602 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.69306239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.675183306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.682937447 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.998235094 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.691889643 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.681377233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.687721415 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.694938809 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.686434882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.997661944 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.690681689 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.686658454 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.688478914 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.690845149 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.051764105 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.698466413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.687809241 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.679428293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.685517529 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.679217252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.688452405 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.700936791 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.687402359 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.679401595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.714897516 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.680807459 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.689637965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.694099929 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.681459797 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.680131734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.679727678 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.688062624 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.681965559 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.696181935 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.048836159 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.695270909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.681834605 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.088868781 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.694613049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.696898667 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.696367397 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.694604172 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.759658727 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.048044389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.6638068 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.704948517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.691481451 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.055290201 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.699685215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.688706921 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.692068322 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.696118868 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.696701773 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.698853595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.680388134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.689139147 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.704290798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.68364103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.692111057 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.05646428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.700257194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.696279092 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.689239 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.763395543 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.698227944 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.701439381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.694542453 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.066343605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.696513005 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.697117822 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.684135341 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.701017261 seconds)
  done (took 242.37030047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.687954382 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.685584262 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.692649142 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.68534298 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.683842772 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.694062631 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.68455729 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.685816588 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.690368607 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.685925239 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.687973032 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.694124155 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.693253568 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.685922271 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.693675647 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.686201722 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.683925403 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.695642009 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.686760967 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.682837995 seconds)
  done (took 51.317801549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.701063541 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.394274648 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.371129952 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.703133858 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.698604543 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.692987278 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.76207161 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.74530102 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.703216702 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.072741237 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.917138938 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.705967657 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.699495719 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.700453002 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.374068378 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.680605801 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.072882866 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.401400805 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.701675772 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.399627522 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.681053184 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.700889241 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.691641986 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.402657123 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.082874335 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.062710655 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.765194761 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.406143885 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.701973381 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.701629443 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.40304033 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.703465507 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.695238181 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.394621931 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.701033136 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.714727745 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.702253987 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.768822657 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.769378671 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.077718932 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.411740981 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.074607089 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.715180741 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.886035503 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.705631201 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.680959784 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.41411901 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.707373433 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.682741142 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.704679094 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.707806514 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.379571588 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.702308315 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.377607358 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.708024265 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.703457845 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.396482406 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.372927768 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.365981885 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.921901187 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.699551468 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.063750718 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.708216721 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.406682705 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.710377137 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.704908268 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.704113466 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.922491074 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.392458871 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.068686758 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.080639066 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.079435484 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.707931586 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.778498369 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.70622715 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.078648871 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.778107409 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.140909864 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.081734531 seconds)
  done (took 154.613485071 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.013770899 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.811163346 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.153582061 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.353869313 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.288817605 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.853628625 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.83033829 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.981069747 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.703870601 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.835040151 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.495928013 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.806393333 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.536358379 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.778210016 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.821304738 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.836171193 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.183942527 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.694921105 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.493439197 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.467825747 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.705446502 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.8285974 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.515558077 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.109139058 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.695469015 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.523710848 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.704406953 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.302737503 seconds)
  done (took 63.883042025 seconds)
done (took 642.369795564 seconds)
SAVING RESULT...
DONE!
