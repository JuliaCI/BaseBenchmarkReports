cset: moving following pidspec: 747
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.724200693 seconds)
loading group "shootout"... done (took 1.026337517 seconds)
loading group "string"... done (took 0.409648539 seconds)
loading group "linalg"... done (took 7.722581658 seconds)
loading group "parallel"... done (took 0.158463606 seconds)
loading group "find"... done (took 1.264281376 seconds)
loading group "tuple"... done (took 1.864985974 seconds)
loading group "union"... done (took 12.451415374 seconds)
loading group "dates"... done (took 1.437423564 seconds)
loading group "micro"... done (took 0.209095259 seconds)
loading group "simd"... done (took 4.48283917 seconds)
loading group "io"... done (took 1.021756814 seconds)
loading group "random"... done (took 8.838839164 seconds)
loading group "problem"... done (took 1.467812865 seconds)
loading group "array"... done (took 19.435831678 seconds)
loading group "misc"... done (took 1.486536291 seconds)
loading group "scalar"... done (took 39.495198413 seconds)
loading group "sort"... done (took 3.080151013 seconds)
loading group "sparse"... done (took 11.670834755 seconds)
loading group "collection"... done (took 16.842661115 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489512998 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118218868 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123841177 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114810454 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194864593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118784119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122199286 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082123562 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.858626228 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134077631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.10989763 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403751037 seconds)
done (took 5.220084119 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163255277 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084549522 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07631889 seconds)
  done (took 1.29124625 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062105738 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128904418 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063285245 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063726365 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063821476 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063209001 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063121224 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063166033 seconds)
  done (took 1.642111677 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068066112 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063992594 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062417295 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063799016 seconds)
  done (took 1.393313561 seconds)
done (took 5.702804404 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229275056 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096281574 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.27581246 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.376441522 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44367221 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092100658 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071467235 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067279143 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126047026 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318227588 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099289068 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178137433 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088428921 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17185201 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.959196955 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114446635 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08332744 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120345159 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091206415 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129299474 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.377615724 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075849406 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071755374 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067741413 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064921395 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641559468 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658408564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.124378838 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082824907 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.096254382 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113959736 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646430599 seconds)
  done (took 10.320706194 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088636377 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086982174 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065585309 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12134208 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091352296 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067486749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071662046 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06427575 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085522803 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121292735 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090148241 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095528047 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064543457 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065984118 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071413475 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194163787 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078452399 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077878862 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065247123 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077406924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103628509 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076395011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075343743 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075135241 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126660957 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168215022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095341638 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095890878 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064095207 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076025155 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117308499 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123663366 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064559483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062239033 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117110635 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093275606 seconds)
  done (took 4.458645485 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.926972272 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089759275 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098222377 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.602080707 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063850469 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147081773 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234811129 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070051556 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.296347846 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141557687 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134519134 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142405894 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112933673 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069613461 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.150885176 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111667856 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.4540623 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065263157 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064413245 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063233899 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065568133 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064757275 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061037401 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066730645 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092039553 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084166218 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.147032092 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.896207489 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.231110527 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06529107 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158371705 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083754652 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354150446 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065110763 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0779969 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.403534791 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121422926 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064345463 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160531911 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114289376 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0624186 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113255128 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075489917 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066482366 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066391299 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065374375 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068495202 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07605927 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099102411 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067072861 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08102235 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062843095 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160012001 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062844423 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063483418 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064225686 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14848719 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062358308 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136078886 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061723709 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066496362 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098834514 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066048761 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085562485 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094001749 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.327554896 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.035788271 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063920978 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890462846 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074951737 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063366711 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067411097 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06389615 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065521311 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064347256 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.0700142 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067724936 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066524528 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061781064 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063440453 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106275165 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068293214 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.0644169 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06883273 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095016002 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063954021 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.475734784 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09552471 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066845753 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072836517 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102756335 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063216006 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069099614 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064618112 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064476328 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063550478 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064030231 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067248887 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061602464 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092442762 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06714741 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110685018 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.130076993 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064972555 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064105025 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069352426 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061353201 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06679077 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067179672 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064780069 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067186622 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065387439 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062768225 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105460104 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064873092 seconds)
  done (took 20.95947508 seconds)
done (took 37.79957501 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243969251 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075885683 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076464354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07609568 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076674915 seconds)
  done (took 1.778114467 seconds)
done (took 2.998494082 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105457134 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061340163 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096919053 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095745874 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061544059 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061473058 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097385016 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061585193 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094947343 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095754775 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097764075 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097157979 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061772492 seconds)
  done (took 2.314416255 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066103277 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077541938 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080229601 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059806568 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068972742 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077915485 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062688754 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078120707 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083844881 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07899557 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078679589 seconds)
  done (took 2.027858662 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06557872 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077213931 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080195442 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059720151 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06948161 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078611766 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058912352 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078025197 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080974215 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078748482 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078514492 seconds)
  done (took 2.013642619 seconds)
done (took 7.565214236 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062300636 seconds)
  done (took 1.252923767 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.490852727 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.133493912 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064074251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081411578 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18212611 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090285236 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.199014667 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069316813 seconds)
  done (took 7.668529079 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093897268 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065352848 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068561848 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065540207 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066387922 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065303168 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065822625 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064785131 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066638925 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065621549 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066563975 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067071421 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064855816 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065597082 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065247989 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065982789 seconds)
  done (took 2.378364707 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093201437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094253397 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069658534 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070226316 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068690034 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068011394 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069996896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069587077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066670071 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068417145 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07015735 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068451109 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068251017 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059689503 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069875484 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070768565 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066702653 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069876441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070278305 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071125623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070457224 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060130942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068449345 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069509515 seconds)
  done (took 3.009335217 seconds)
done (took 15.517603064 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171677206 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071880524 seconds)
  done (took 1.44220094 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064561767 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066040353 seconds)
  done (took 1.34684391 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069341592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058714708 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076611465 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067801638 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058908687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058699606 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07457631 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058687257 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058738271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058673696 seconds)
  done (took 1.855878527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059934951 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065137427 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064568313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066473538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0647321 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060250962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062349565 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059808659 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06615493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058751887 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063288479 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078020543 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062363887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.07976441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06247488 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063684844 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064920487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062645666 seconds)
  done (took 2.383541157 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057913984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057991272 seconds)
  done (took 1.341219403 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060823344 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058881034 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061513886 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0614238 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059211069 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058748499 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059020534 seconds)
  done (took 1.636186271 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393995186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117807366 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327250122 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065502186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073644186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243943672 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060947133 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065480248 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065602574 seconds)
  done (took 2.674417931 seconds)
done (took 13.908908124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07703509 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.166367822 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086540917 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.404308196 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088801802 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064275332 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109918664 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.16436376 seconds)
done (took 2.402297568 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.228048332 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.275430374 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.872462975 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.067253661 seconds)
  done (took 3.44424032 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308368287 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07460133 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073737649 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.063524288 seconds)
  done (took 1.756280359 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061653892 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067061428 seconds)
  done (took 1.359344175 seconds)
done (took 8.028355991 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060267625 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059749332 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060338644 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087853238 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061062805 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060760856 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.061465827 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060864986 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060595131 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060817842 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060844801 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061216842 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.060093189 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.059669291 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059274257 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059720504 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059854648 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059384367 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059937363 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059793668 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059800349 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060693243 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061244817 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060780935 seconds)
  done (took 2.73482389 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074855088 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062057376 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063059306 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062984036 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064245266 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062505803 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062988524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061915865 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064669811 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062548573 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064720091 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064457858 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062141399 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064850214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06262414 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064459243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064038281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063830291 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062303979 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064374924 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063951654 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062770315 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064202083 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063832014 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064573381 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063487455 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061571125 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061936741 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062501434 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062910276 seconds)
  done (took 3.156400908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061019889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056176663 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05721472 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065146328 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056763789 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05834725 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05824024 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057282872 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057737818 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058714224 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058185868 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057337589 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058043642 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057307161 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056462054 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056644124 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06050133 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07395882 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056964158 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057273954 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061581826 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057674076 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.05732402 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057378714 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058359066 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057339349 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057190309 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057706018 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057611092 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057856066 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057262458 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060981862 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061943545 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.067341265 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065679738 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.060755511 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.055956476 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06028766 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057419915 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056120583 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055743505 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055878488 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056166985 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.055861343 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065448402 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057921211 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058272644 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057679792 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05728295 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057177813 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057283968 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059432489 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062184037 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058572492 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057046591 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058425919 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060252266 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058112266 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057256799 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056866152 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056837981 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060393425 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058819404 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057918083 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075250158 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058566793 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066419125 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060251426 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058070267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060146441 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05767494 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073705497 seconds)
  done (took 5.513043073 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078248247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081645936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06191875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061855763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058235383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057921513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065584093 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057838891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062042949 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076765161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058094571 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061902784 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062478456 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061369043 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058112847 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061781084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063730659 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056751909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.056468536 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06038772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056953495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063301968 seconds)
  done (took 2.640134072 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130952855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062817299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098983112 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072225107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06666097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070988925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06215416 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061856736 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061827128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0622179 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062115917 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061525691 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064433026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062255386 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062126901 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062265727 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062043205 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062446893 seconds)
  done (took 2.495860759 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072002135 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062012652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082921404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061448603 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061759491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061539921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06501546 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066080942 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061429243 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061943858 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.065558071 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061177991 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.060914466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061974174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062746945 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062978589 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062470333 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063096046 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066592719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06673463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066290654 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066961388 seconds)
  done (took 2.671433869 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071407961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060775814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073125674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062493584 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056797137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056670004 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061584375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060479077 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061348971 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060326291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060733242 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056718342 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062133436 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06191991 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063502789 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062354385 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061458371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062101376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061773654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057862524 seconds)
  done (took 2.48485002 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081903575 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059024371 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058884663 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077514195 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059040755 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.05909736 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077119171 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058668672 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059185416 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079693364 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058685709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.058569424 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076840073 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077827665 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060287929 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078692971 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078395369 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078485894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059845131 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060675275 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080822663 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060414608 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078662213 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060320709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060603548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060061597 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059994708 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078133593 seconds)
  done (took 3.147328793 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060275201 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059139412 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059653772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059639689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060220424 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06023162 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059684902 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059562965 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059368197 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059626416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059662517 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059355647 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059384507 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059061994 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058955238 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059236079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058876396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059811926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060866405 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060629174 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060806786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060645677 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060465111 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060482924 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060713986 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060251278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060517577 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060766711 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06051943 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060540529 seconds)
  done (took 3.053662832 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069080783 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067007324 seconds)
  done (took 1.390566835 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058553658 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071376273 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056458339 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066454366 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064829461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059783787 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.064967357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064564514 seconds)
  done (took 1.756544509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06292039 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084136157 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058430501 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059353971 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.060794575 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113639409 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.069254926 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071017613 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070569478 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060471596 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058353168 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069405937 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057453003 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.06934606 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060196058 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066939241 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066105608 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070407255 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070866075 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057743814 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07037825 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059798089 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05765561 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060136653 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058907903 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065416158 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073433049 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070163425 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067061531 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057009583 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076362138 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05791663 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0590631 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067641045 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062798211 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057985337 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092030812 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058696544 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063111977 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057789439 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069875693 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07760404 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071302316 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074864873 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059441503 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060004981 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057469622 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059942133 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061258669 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067182818 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058172128 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065089726 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057571436 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059392014 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067939891 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058344989 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063655503 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066658587 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070219027 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067757476 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069749888 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072699799 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066246748 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066195834 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058898536 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076214075 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059317188 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070065542 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071903604 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05913428 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070516803 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05767315 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057005964 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057797538 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089263146 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059811438 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058870777 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057932007 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057683864 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059654997 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067230005 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062920091 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064604485 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061503335 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072887817 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066451441 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057822622 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064369439 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074492317 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061346433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05820074 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073253688 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06153517 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057978342 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074061375 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066508927 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059422324 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058407529 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061233567 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070864452 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.05913226 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055679797 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064929286 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058756568 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060649218 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062457615 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065185271 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057316795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067474278 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062364201 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059011074 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056566045 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061193455 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057828441 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056180165 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066346326 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057080731 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07099795 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063373213 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070171598 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070995445 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066880949 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072032143 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057082655 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.055360747 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07273187 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.064221744 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056781128 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071621203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055124752 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.201087325 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058292762 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060117944 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068370935 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058584919 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061099898 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058763355 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064400341 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060031308 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06022664 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063122292 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066539276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070402143 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059197066 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067208075 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058968721 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073222268 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068065968 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062688692 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062446598 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059137415 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070189451 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064923438 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066675657 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058132979 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058967463 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058288899 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068894464 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067255703 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060442465 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065915728 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062485354 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059302375 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058406508 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059404834 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061951631 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06209887 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058510801 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06565072 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066773049 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075047718 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066505299 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066815494 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057680054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058222908 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060272736 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058121469 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062328127 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066862842 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072436462 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069189097 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077259208 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057949959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067334073 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060120023 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073604353 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070494474 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059066236 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062895225 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057243352 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060000273 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066572056 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069134967 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071584312 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072295844 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062682934 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062298382 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058313809 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071927828 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058211873 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066119468 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066996477 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06276365 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058128058 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059565294 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066568343 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062454362 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05814076 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072771218 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064197293 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057636318 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071398484 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058566779 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068387035 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058054585 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061415532 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063343266 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060171359 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067318846 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072609187 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057325331 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058740495 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072827718 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060432355 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060205177 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065970621 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072192115 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06237538 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065405622 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06768128 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067789987 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06216683 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067123499 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058834684 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066936694 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060808691 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068990308 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058082286 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07439547 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05671295 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071523654 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057857544 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067576815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057829344 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066085946 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058504727 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073149287 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05901141 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058353635 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068335264 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056874963 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065903102 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056991414 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060946822 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062270593 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066230033 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058748689 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066270749 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.058876691 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065005925 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061401251 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065000943 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065308682 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061396097 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056821366 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06474576 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.207870637 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066423531 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060145102 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059793928 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059255239 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068561558 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060723915 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060045849 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066562565 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063057047 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064057233 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060551269 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06075012 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060708523 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067092488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067863458 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075992624 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066631244 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066013866 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067056714 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057883752 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073268095 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058302706 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065613438 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057285898 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065220151 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066719723 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05851476 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076306748 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059678637 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065742273 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070621055 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06686883 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061725801 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075275665 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061580291 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066078346 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065698053 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062332807 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06468052 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060467759 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065706119 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066096858 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067667994 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058450533 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064547967 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065914607 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058989197 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065061749 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058376458 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065810704 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060181962 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057179222 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062446844 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069142159 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062496845 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062818411 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058022071 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056059217 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.056916651 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.063054484 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061055964 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064825604 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071183477 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056260772 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.057941614 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056572365 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062896166 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074702749 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067488475 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065356248 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062864579 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057245865 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059990738 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060367289 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058579356 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061368251 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057772757 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057721254 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067300913 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058950571 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061349245 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058801484 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059207205 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066964343 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062779778 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058676436 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063936986 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058017526 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063029737 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057573469 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.05956757 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061995265 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057625343 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06114726 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067862354 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073710054 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064253453 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066431846 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058916068 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065788203 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07266946 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06560023 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058047146 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065622925 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0558015 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073310575 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066492499 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065961097 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067468161 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058922661 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073216777 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061913585 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067256378 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072312627 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058841241 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064473928 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057600954 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072471982 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062048075 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057547208 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064961984 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065254984 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062973943 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068988326 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05795034 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065191834 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062149654 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060913237 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.058986661 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058686332 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065219362 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071796411 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058238088 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.061013155 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.209677877 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066991357 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06375598 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071454914 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067537324 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06064076 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060880792 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062189902 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060101095 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070431419 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058699885 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063531339 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063154735 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.05883314 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064506608 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073776834 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067475689 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067569025 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05819988 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057659056 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075348871 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062287114 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061774083 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066211439 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067263921 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070326934 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067306238 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074061242 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059342102 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064136213 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070453537 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.0612048 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060106115 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062337746 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059897817 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067337234 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067995416 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065693052 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060145849 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064400493 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071007498 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059856288 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063552722 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063136635 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059127794 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068091076 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065893835 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066745841 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059484039 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057904383 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061544853 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066337501 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065040035 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066419765 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058935856 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064682659 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071641035 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06530826 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061246911 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057729082 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06175965 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066798896 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063028505 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057825243 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062225769 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062067073 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06521564 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066970273 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062337357 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05808217 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074244569 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065891755 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066883332 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060311116 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060133545 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058205463 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057847929 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069162341 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058258265 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060148834 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062352146 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059828361 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074750095 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065351867 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071988318 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057823826 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061139502 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056665262 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066463753 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063050783 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058922152 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068196836 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057723151 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072688968 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069587072 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066727143 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05807775 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062942995 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066530107 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072122671 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06772718 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066899446 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061983749 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067370555 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060178836 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068285712 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058168846 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057568809 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068068792 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066288584 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069879922 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057857278 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067301213 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060083504 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065943861 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065543715 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059559328 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059767861 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059974632 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067173393 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062063821 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066839924 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062212858 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072248958 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.056639481 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0662501 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.064615534 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06629075 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069906475 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068947452 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065187934 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058349572 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064658778 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065186722 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058431885 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062184091 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.203981303 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079522716 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062592367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061800938 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073677291 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065421084 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059218146 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06620163 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063761298 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068516139 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060026985 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068261734 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063181666 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060181048 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063083413 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063105438 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057516007 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058308605 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058892309 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067686638 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06331324 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059373379 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077300875 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060342348 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067279606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069095751 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064502346 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060185585 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057543542 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059798492 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07132961 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073122775 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062036204 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067403108 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059856433 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067486538 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057439425 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06732431 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066832763 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083804919 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058726244 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059530955 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0732248 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07300521 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062913251 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067491574 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069305729 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059763057 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079554454 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069546661 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059240258 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068301502 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060561514 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057804728 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057597824 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059731668 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068922654 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058140859 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060749307 seconds)
  done (took 40.031570438 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093093809 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058583795 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058195761 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058945603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069490088 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059295332 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058902806 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059338663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05931447 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061595989 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058265446 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05787913 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068684614 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071609439 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068611736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062264925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058380181 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059466338 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058243335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059129966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067931713 seconds)
  done (took 2.685996946 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063755441 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071746133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069743392 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074011095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066239472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06244434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069279078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062585665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070135243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06763173 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070096944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062376035 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067640985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06728042 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06768825 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062588948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070024816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066328861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063116658 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069034007 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062797608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069080576 seconds)
  done (took 2.813456396 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058680073 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057635484 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065380228 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058025858 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057556809 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061317419 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056857351 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062107907 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062426378 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062101849 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066477083 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058354752 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057689696 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062871438 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057318383 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058771991 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098079987 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058918665 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058728797 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057493407 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062766137 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066516719 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057627651 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057911326 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06192175 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061136666 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057612149 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060202211 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058198772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061787061 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058781603 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057125421 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066605718 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065665305 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061808604 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061775144 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059375222 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059170746 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057968669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057394607 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065947417 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060665066 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057827555 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058623064 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064937411 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057956389 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057804219 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066368244 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058075752 seconds)
  done (took 4.338365246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067282068 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107267896 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064540232 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088103453 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07105754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064115291 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063577312 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089413761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058793745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059886741 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071988351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071188515 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060469336 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062550147 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064938932 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060869404 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06131997 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060001609 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063712603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060708953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063684129 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064705497 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070402284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071000982 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061985853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060310993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060316873 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062227376 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070748126 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064215299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062522551 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06281917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.070894214 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065342763 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060270729 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060778039 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071376934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06079063 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060529303 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.05909932 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060649886 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062574403 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064932457 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.071012439 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059462023 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064045464 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059620412 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057808289 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.069843011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059504787 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.063400262 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.070067007 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060506583 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059829409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062480349 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.070492941 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059952531 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058381953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059761295 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069121551 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057681948 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060242931 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07011466 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.058999072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06303838 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.070135547 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063952217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061572948 seconds)
  done (took 5.903113041 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066406193 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088616822 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068150619 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068460648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067305182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.067583274 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067303389 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.06667521 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066777915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067578992 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066651932 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102664831 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06358666 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071432522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066848446 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066836503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06855156 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069095099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068805776 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068510895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068672261 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069236693 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068635074 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069067421 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071152672 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065200745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068167652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067587849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067979393 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066842153 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.069281095 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.06730709 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067484456 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067462358 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069287273 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06775805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05835623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068419048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068498639 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068123102 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064620713 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068710809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068236366 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064920641 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068171715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06805917 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068907276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070830679 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075652811 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06900721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068338458 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069073119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068402547 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06863842 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068973967 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075543261 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069419378 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069412612 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06878421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068998951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069230815 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075041687 seconds)
  done (took 5.662977771 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071034381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065067978 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077566987 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061098896 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058575261 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067548817 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059000453 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058548549 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065365957 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066047151 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067009149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067990419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069615396 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066328016 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065953617 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069124633 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067351687 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067649998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065413279 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066377019 seconds)
  done (took 2.690923134 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070209636 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073824315 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062957299 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067600134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063241729 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067338073 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062791364 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063769282 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064218372 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063950626 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06875974 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068518372 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064406463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067007329 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068263086 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067534024 seconds)
  done (took 2.419214033 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06384433 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064000414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063856314 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058679621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061607563 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057454483 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059386792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058277368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058813375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072043229 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059433645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070628746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059164505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058526683 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058508798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064891295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058474423 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058970312 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059211281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063894926 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065490662 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060556351 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063323394 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059118815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065020961 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065788997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060754923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063007489 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058947047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059645206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064671898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065359722 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059174368 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059480584 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058099535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059385496 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059361183 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059543433 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064996353 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059319716 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057605085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064001377 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059223622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059802617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058637788 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059668156 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058362443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06441481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059419931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06403472 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059252598 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061140833 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059687683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066332646 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061346451 seconds)
  done (took 4.731742328 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071655488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062022993 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056970615 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057324215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063202713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063075203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062292499 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062078656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063651002 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058264651 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063680854 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063076805 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063549082 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06290146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063481452 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062887354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057736332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063354098 seconds)
  done (took 2.491216134 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067861556 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061572175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067721513 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063503379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063112516 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062386957 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058258203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058296445 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058489293 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06269066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063145048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062331535 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058615029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062314073 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063430927 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062693908 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062253779 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058727333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063371357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059011529 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062405336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05840799 seconds)
  done (took 2.723133872 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086059994 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080462709 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118596405 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076690839 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084996926 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068816973 seconds)
  done (took 1.877927608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086957107 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096685765 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062680095 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062671852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071131657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066241905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066112242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066456313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071540978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069818279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064525361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07021342 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070155855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066002247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069858906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072392085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065448239 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065901142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063161386 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074361149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065967624 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071987154 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0652601 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065049635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06463078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065774805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072011004 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068124402 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066370023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069363527 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072002534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064905154 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069680976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069055894 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062873828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071532171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065178658 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07241309 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070122825 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066416598 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061405826 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069908624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070094863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066015809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072361545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064588359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066246213 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064903758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06646188 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076451443 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072111758 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068424368 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072008291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07451604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074357044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076356209 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070310922 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067522223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071469688 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069268685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06652048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07065416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066394141 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069196197 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073554071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067764048 seconds)
  done (took 5.939067641 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092756348 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063184971 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065242803 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069850162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066787742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065302341 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064809327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065146398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06459995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062091118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096590846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065389659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066777595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066395147 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065234049 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064716665 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065283688 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06635624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062001137 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0744885 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064329919 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066307894 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066682043 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065961514 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06852582 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072127858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064901482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064492241 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064781048 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064372977 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06612207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064629062 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066316962 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061899329 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065958074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064523497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06431958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066168431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064418178 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069860195 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066223317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072000304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064262874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06486022 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069032157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065554956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066338499 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063462397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066446761 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063744669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070442519 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070663122 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070509925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067920023 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066393311 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070251138 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06642884 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066278186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066188319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073688077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067865796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065685814 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074505046 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064397918 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064629149 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066256524 seconds)
  done (took 5.834171784 seconds)
done (took 122.423986733 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205135353 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180779631 seconds)
  done (took 1.737478403 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06960467 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091462768 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070806055 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129846229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067730187 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101010845 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100511663 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070589921 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067136829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068941604 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068419505 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071169821 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134358862 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067297334 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067240795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069421879 seconds)
  done (took 2.68632962 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100958015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173035007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108905985 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065607307 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101280701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072409569 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066343887 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07727815 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070378932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069789168 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07328205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071899991 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070002139 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071763162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070331735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073435271 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069952911 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073013527 seconds)
  done (took 2.854650828 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089013715 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082377595 seconds)
  done (took 1.551164625 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149200572 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100442764 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137847758 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309190925 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.12926388 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12576638 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128065421 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.121627423 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106122254 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.117370892 seconds)
  done (took 2.796963915 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097400261 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.166639344 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301395504 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115844372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073202957 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096815805 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116372107 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078636333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074641131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074280865 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076622879 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072014231 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092119747 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072834914 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072972637 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07358807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097637853 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071342197 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070726232 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072897918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097904274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067470566 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073300988 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072103797 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074621482 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074680132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068188424 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066357006 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071630756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072480123 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074980351 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093336302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074412223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.095514064 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071260743 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.096784508 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07068866 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069549351 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.069931309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069211661 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072056437 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071927932 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074055256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071628168 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06676164 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071443262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068366572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066870048 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075489567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067910356 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075579967 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074661633 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096025357 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06816291 seconds)
  done (took 5.900662647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101514392 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100176007 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066193468 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106495678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098547052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065329236 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097949014 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09373906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101960868 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065716901 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066543549 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066213194 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073906799 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077086262 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109271015 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101144615 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067200273 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065201085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102535366 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101343831 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064979479 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094440451 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093111845 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099760556 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064324756 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06544727 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064253922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064130958 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071256709 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072142474 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066029375 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072424817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080085849 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070925528 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063787102 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064374667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064853393 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073007566 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072784838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073789304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071442876 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065023216 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065538521 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066384403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066303961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065234243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072448687 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073421458 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072078492 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065895389 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066146225 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065708831 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064765956 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071621929 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.06955438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07137593 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070905633 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063842205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063936399 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067073641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075257607 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074520571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071116921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06483779 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072093853 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063777835 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072528942 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076132939 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063956682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064422548 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063928846 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064078758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064466214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069840791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069902773 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064406626 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063801224 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063799357 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074227149 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072018201 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065515557 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071418601 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064967422 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065837613 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066015782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065904489 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071461242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073434366 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065077117 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064049785 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064208514 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065582118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065072944 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070340799 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070533363 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070976421 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069650407 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064153248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069882187 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069832498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064483373 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069646592 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06347809 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063375723 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063767243 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069077892 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068325778 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071007886 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063261387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063218897 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068907242 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07141274 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062733111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068258026 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070294792 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.06908951 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.062680175 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074660445 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063188299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.070472802 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063233196 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071004371 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063650495 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.068913323 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063201465 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064078875 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063390844 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.068939793 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063685339 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063552266 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063407148 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063275169 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.069062249 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.071625152 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063713134 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.06916565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071030245 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065989275 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071269951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065388854 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072550607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065161797 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065859178 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064695265 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07286262 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062592927 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063097716 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062853992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.070054148 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062372648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070126878 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.066315811 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.061677714 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071501014 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.068911773 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.067348918 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.070005081 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062599741 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063103934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063091981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.062555979 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0670627 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.068543842 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063268788 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062341983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.066374096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.069189828 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062454514 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.067682914 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.067386334 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.067611741 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0620682 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.062727122 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.070766392 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.069384357 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.067253674 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.067509236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.06790269 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062832028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.066712653 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.068588955 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062877113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073380638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063038925 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.071816635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.067047106 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.066939421 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.067793294 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.06943668 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.06936351 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.069196443 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.071820927 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062293407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063434487 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.069259088 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063492202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.062689335 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.067637206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.062334412 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.062459786 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.072004313 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063596482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.069925438 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062008085 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.068119095 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062159464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06321762 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073090306 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062097078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06272578 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.067476143 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062340526 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.067848019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.069641633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.067785936 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062317207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063355412 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.068112224 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.068700707 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062584678 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06285775 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063800592 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.067218503 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.066855898 seconds)
  done (took 16.913132125 seconds)
done (took 35.830574104 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195748988 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161388305 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196096128 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116875959 seconds)
  done (took 2.19049311 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.090738469 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098345012 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077649505 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06662525 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082921927 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066397121 seconds)
  done (took 1.938646429 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258464528 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183670576 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172458842 seconds)
  done (took 2.064101715 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212600217 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195627575 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476698951 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291204554 seconds)
  done (took 2.72998384 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.125412651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078061047 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062754725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073343693 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.103340964 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132176343 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085925444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.107692868 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073681246 seconds)
  done (took 2.356597036 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.127005617 seconds)
done (took 13.002902044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097594843 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.269049553 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077827545 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.232057761 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070791891 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067296885 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.199477144 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075589902 seconds)
    (9/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.075348931 seconds)
    (10/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.18108017 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075137106 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.118434799 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193998742 seconds)
    (14/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073544534 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072901286 seconds)
    (16/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.220633842 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17345618 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077866374 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072642591 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087509712 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070399515 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074974273 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073877509 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 0.170456472 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.205613079 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.166555838 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08893914 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073112833 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074124244 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062668904 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.149821852 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073822742 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063488442 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126689624 seconds)
    (35/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085049762 seconds)
    (36/309) benchmarking ("sort", Bool, false)...
    done (took 0.147600057 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089824608 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160151465 seconds)
    (39/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072903751 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142292682 seconds)
    (41/309) benchmarking ("sort", Int64, false)...
    done (took 0.065579911 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083244034 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078835604 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072788694 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064036207 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212738563 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064933912 seconds)
    (48/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064764117 seconds)
    (49/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073502661 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154217813 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072975996 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107614456 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179226415 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207947545 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063351477 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120955304 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168373233 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065589978 seconds)
    (59/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.1757897 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065131976 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.18639703 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075476811 seconds)
    (63/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076930893 seconds)
    (64/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076274856 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0729951 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153079188 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 0.134112022 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148350989 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090086589 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08636756 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196809184 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065588934 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117554868 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078690569 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197188908 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.18085795 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215722688 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13219789 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068663766 seconds)
    (80/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081858546 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062967532 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166163624 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089193672 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065420507 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066635049 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112424981 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077218607 seconds)
    (88/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069745989 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.305597576 seconds)
    (90/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.20366005 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190206827 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065701704 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094348698 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063925925 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 0.133614502 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.231457671 seconds)
    (97/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064865834 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065859121 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077202052 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066044544 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222711171 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084605881 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144806035 seconds)
    (104/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07309759 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.084005871 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075223182 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159547942 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072667201 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074241761 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121745914 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093231567 seconds)
    (112/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.147841975 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06717808 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070922718 seconds)
    (115/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074952863 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064318912 seconds)
    (117/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07437179 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064342524 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090829556 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169329707 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065358886 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075978634 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127653409 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064895157 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08405516 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086024629 seconds)
    (127/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.12757219 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194267472 seconds)
    (129/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186918167 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216814108 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072672875 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09061365 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.143178736 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064136947 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171375076 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17897556 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063328136 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062876479 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091161655 seconds)
    (140/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062885238 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14866356 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07255749 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078514845 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063876312 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071138205 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063982862 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065909182 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064288768 seconds)
    (149/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.158192991 seconds)
    (150/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.189042035 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215953872 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147170846 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148032219 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.140318818 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075594936 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171304942 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063223585 seconds)
    (158/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072070041 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064168406 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073121312 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118168959 seconds)
    (162/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064577993 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.06335817 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134378969 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062453265 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245002191 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076315685 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062321335 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064338127 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.080979329 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062751678 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075466912 seconds)
    (173/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062425362 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062877312 seconds)
    (175/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.209941159 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063987091 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064626551 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063973201 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066298456 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063791556 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061856529 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063186354 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063369243 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090961176 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065722213 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062466123 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181496515 seconds)
    (188/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063262657 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063735424 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064088802 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063402714 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152793558 seconds)
    (193/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061669288 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06968431 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229716023 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080716168 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090075284 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065482123 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08255044 seconds)
    (200/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.066376884 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088636366 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090719091 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068561886 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072452418 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065556996 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072581929 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065891481 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146004465 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064252275 seconds)
    (210/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.14163053 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072576921 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12490993 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065659671 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110229048 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092090287 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076225079 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072188813 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076811295 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143399359 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143876253 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067200207 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128730712 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064147601 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072055489 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075159819 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063157643 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065301528 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153260407 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066476087 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06510726 seconds)
    (231/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062653348 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14444561 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070095254 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064004135 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187543041 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086297194 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.172766371 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066887112 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064475048 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069360792 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063722077 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064820612 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065099516 seconds)
    (244/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068210029 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063365875 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063053398 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071058879 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157525618 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063923856 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064532422 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062308542 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072134585 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062299809 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14513596 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075517258 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063381005 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124756847 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065278479 seconds)
    (259/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071531518 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148195442 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087849072 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064933271 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118468362 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071481991 seconds)
    (265/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068442443 seconds)
    (266/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063939502 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063519357 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064102711 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071054973 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064853223 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179436112 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063526314 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071831396 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064209731 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066454487 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063406331 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064279651 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067940305 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063190576 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063809174 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064781215 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085409549 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073065702 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070763263 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070707114 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064960012 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075386681 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088053188 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065175907 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064137122 seconds)
    (291/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065349344 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071951006 seconds)
    (293/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064102722 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065237033 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071375042 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063333584 seconds)
    (297/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091253796 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087115308 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063693038 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063132174 seconds)
    (301/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063244157 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062540008 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082842028 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064302873 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14832089 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064168249 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063546403 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063253835 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062952714 seconds)
  done (took 32.638149653 seconds)
done (took 34.110630841 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08218117 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085644003 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071813404 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083572254 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079596418 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095395279 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071874438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076663805 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078694386 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077645632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07758063 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07100809 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073295142 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073675474 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071292345 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086373627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078638656 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072026758 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072664648 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063400413 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072615161 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064557724 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063152192 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070786242 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076088932 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071073524 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073125721 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071671712 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06239137 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062305211 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067060189 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070580034 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06418446 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073659169 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070147306 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070221756 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071714992 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074516965 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062726549 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064240942 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074327071 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064177308 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072667567 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070764488 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068828326 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071511048 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072326392 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075774654 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086471227 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068280915 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073156362 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07289676 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073645437 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067553638 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068552123 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071882976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083355139 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070263929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066266995 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072157917 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070960228 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069187644 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072341662 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072218478 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075767549 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075916843 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07062236 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074342244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071487292 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063247788 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072184657 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068851044 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064159323 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075144253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077632998 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062583167 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068325804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071854304 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072245347 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0631813 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068261622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06299495 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068723819 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068522781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070500368 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069334352 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070976595 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062549404 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072648638 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071272112 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071561062 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062339393 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075842418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063216689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070289778 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064030926 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063884257 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062666715 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069610188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063707926 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068389456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072104018 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062560031 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06866568 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077273259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063996745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071301717 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062854051 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062818136 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073500584 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074641733 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063832844 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067945696 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062866587 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069075353 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062841398 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063244416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063853156 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064032363 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068303258 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063450866 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068256535 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069281388 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075830197 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063488325 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06867943 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068471876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063873319 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070398716 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064124887 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064065619 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062813316 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077129025 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068191427 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063936178 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068419476 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066180165 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.06932314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059941846 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069487311 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067001885 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065350458 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067267994 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060245718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071544055 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064929041 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206341588 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062263114 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062895672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061511821 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064319385 seconds)
done (took 12.349066036 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063603134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.08747737 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071815763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.07992182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076617531 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065303001 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067801667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080328954 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067030001 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083488964 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086743611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085522383 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090455501 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063341003 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06509692 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065070327 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063172518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071894956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078196543 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086682986 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093656696 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064312037 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073261477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080008638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075184261 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080999119 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065878659 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065206119 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065205899 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078421254 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086181606 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06243888 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063258157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07520927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076077149 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068093215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063054278 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066020797 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063131879 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062210245 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064402577 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077997578 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070183632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068190487 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065363861 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065313351 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064192627 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065666308 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075179148 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065156454 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069560343 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073158828 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063789778 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062083197 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060835865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065760039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062201727 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062751941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062945394 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062491825 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062828287 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064807924 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064009912 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065071042 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067933557 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066847069 seconds)
  done (took 6.169551191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079956435 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089803328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07820463 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079026369 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062485172 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063355885 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063484874 seconds)
  done (took 2.084318049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063884429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074133228 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077264328 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07781453 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070355605 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079226989 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063094372 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092267128 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061666086 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074282032 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.105867387 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078669762 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065371342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073939426 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063010561 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070320101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063713355 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070873246 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070474148 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079722712 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068442839 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092394421 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078096581 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065549894 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084477756 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068722753 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063683196 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064791346 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063791031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063347108 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06338193 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.099848808 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066194522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075068691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065583068 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066832407 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070480442 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067632327 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066923689 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073475668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069470172 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065817113 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063166082 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065461803 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067091227 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068698348 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063430849 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065666381 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065323799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075751624 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063663739 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06868195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067632846 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069353006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070551829 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068848164 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072907032 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066200795 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073497412 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070235301 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063346754 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070700376 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070862842 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102128751 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07117032 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069171076 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068415362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069681389 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065330318 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066492438 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066125998 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072409601 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06464742 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066604851 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067912996 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065999536 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068569158 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081037761 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080791812 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077114819 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066626303 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065799554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068404177 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080559387 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069014331 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06566981 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067815107 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063635502 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069124192 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065908722 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070511763 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065849544 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072673378 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06694147 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066514569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070517558 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062805834 seconds)
  done (took 8.406764022 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066043747 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063805798 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064632273 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065204318 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065934197 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066324986 seconds)
  done (took 1.990945792 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085159576 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064099975 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079142227 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065382344 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099242564 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072036888 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072026747 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073387419 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078198463 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077479295 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07217141 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074495381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071904571 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067763818 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071603091 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066514707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071622256 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068014739 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076819133 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066981685 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077473466 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067169799 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066850922 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076323287 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067441637 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066443689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065782745 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077313579 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078890311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073382139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067233669 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067664087 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073149663 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071749271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069617365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071353556 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063229447 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068288614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065164862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065684133 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071504513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06517079 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065678397 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068574164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070481561 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070587676 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068406826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066478096 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068791107 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068143764 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068137365 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063640996 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065573196 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068234436 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070797468 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070667253 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068252483 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069600476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064768966 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07042744 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063321217 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065607479 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069868361 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065295386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066228451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068037637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070920599 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065291236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064994148 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063243409 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068485796 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063400972 seconds)
  done (took 6.600344304 seconds)
done (took 26.806759737 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.967189064 seconds)
  done (took 2.515719304 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.554720953 seconds)
  done (took 2.137586676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.681125254 seconds)
  done (took 8.262580317 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.266185233 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.294464532 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.699577087 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.125335433 seconds)
  done (took 2.996620297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710795975 seconds)
  done (took 2.306064129 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225584262 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221121377 seconds)
  done (took 2.048655451 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.336243314 seconds)
  done (took 1.923901385 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089999912 seconds)
  done (took 2.671195234 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.212259707 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153150117 seconds)
  done (took 1.956422825 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465589931 seconds)
  done (took 2.051276693 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.061202625 seconds)
  done (took 5.653116418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223858289 seconds)
  done (took 1.854682385 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228218753 seconds)
  done (took 1.822329782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744357182 seconds)
  done (took 3.331657752 seconds)
done (took 43.126549484 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078946107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081726128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084041464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080323152 seconds)
  done (took 1.890657755 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069419735 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066872577 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071526356 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071506294 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069498072 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070127231 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070204003 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067609772 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069230413 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067496792 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066573401 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067158334 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070107349 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067357916 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07007248 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071583799 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067648297 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067740747 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070451901 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067458632 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07014224 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067799938 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066164055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067884194 seconds)
  done (took 3.243265804 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073857741 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070015052 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073300627 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069043771 seconds)
  done (took 1.887397976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071609067 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081394695 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083323986 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089473805 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074309373 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073988836 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080026814 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081655624 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063527388 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084073986 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066338942 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065019805 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065077863 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084737755 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080379387 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060692506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062090788 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073938683 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072744345 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075287831 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066279008 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063442423 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07435303 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072927049 seconds)
  done (took 3.366324282 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074966812 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062079512 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076453979 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089590253 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091737157 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065564391 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077076248 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092102111 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123937966 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063472539 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069448606 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063653088 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105195782 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063451083 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078817722 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105727288 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108237353 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067224235 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095721497 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063556554 seconds)
  done (took 3.246381287 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07259857 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065221579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068202695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064170286 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075608352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071294091 seconds)
  done (took 2.024467146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064260794 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063787779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063631526 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064509343 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069678131 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064986158 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063958093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065860102 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065427111 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065119261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064975646 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064046913 seconds)
  done (took 2.380400357 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15335242 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065653253 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066043243 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06428099 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067679557 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064744556 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07869767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066887203 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08269939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064812365 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064753395 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067003333 seconds)
  done (took 2.50809942 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089392174 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087638928 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121965862 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106052458 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088156991 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089712453 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.141510791 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129700206 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106921726 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068180296 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080312142 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097724915 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094071262 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130433244 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102922608 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068400169 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09294097 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076256591 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097102972 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105298361 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102334108 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104918806 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084368711 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093569825 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097361903 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105363163 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066986077 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066597899 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127240777 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.092053408 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.083499955 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087142794 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101534618 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064547897 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08087135 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093381358 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078384925 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095373619 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082959587 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089460559 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072344872 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.117802109 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09362806 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100181734 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111581419 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087592857 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097944338 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093674103 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077632302 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.108574261 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089163902 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086054202 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072788878 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146459306 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088492994 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.100718627 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106086704 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079983522 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085532463 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091265497 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.116147071 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091018942 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100322165 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.242504088 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08340922 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087210936 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127148939 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080573889 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097057692 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118475969 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08541065 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071678212 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.086055301 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066163447 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093639922 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096007423 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090583746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105356922 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079576721 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116234769 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103833797 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070962946 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10884412 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089012312 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149024856 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094403134 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099561512 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088947065 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.143660203 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081397297 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07557083 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089260134 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126372473 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087998565 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09397875 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122226023 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08664472 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079306374 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071909555 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083103011 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091609566 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105813688 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095181062 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086577088 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080788577 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086871313 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074406741 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078843335 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094844197 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085236477 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114608395 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100831057 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109846979 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076602054 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105612522 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090708363 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126516519 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115654632 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083156126 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106790095 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130805886 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10595429 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08340666 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098773722 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111960965 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101744667 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086052255 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130282419 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109410417 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082677746 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086869932 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.239255069 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.09974247 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145588722 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088923728 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10392328 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134040629 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103639419 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091542236 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081884491 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089129348 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105893482 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135714434 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090356863 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06932179 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092347586 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125644648 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074236606 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093061151 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.08741328 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082607527 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079659551 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066237897 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098597161 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130903029 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111268381 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098020322 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092383567 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067703083 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097766171 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094236375 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139051636 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112747719 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09564772 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089618842 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098870912 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078647105 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126995459 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.126893813 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089869336 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089829228 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121103078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08776686 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099024262 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105314345 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102908971 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096267047 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135893461 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120739563 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.114564823 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102962749 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120721596 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079756604 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106064196 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072780097 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101849758 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073341067 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099653545 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076333826 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106164733 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075003239 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094023317 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064453817 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070006149 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.254307893 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085827089 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081763144 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127231806 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121218923 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080744569 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092187736 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098725571 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09613285 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104887951 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.086309173 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090527568 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077249121 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07897123 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089209212 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093500439 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102358277 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076257939 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072921344 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136839598 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101443608 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088983082 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089904884 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.11568914 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082396727 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081450845 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103752288 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132600226 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115581536 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078281076 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088893008 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067652039 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082191846 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074131439 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107741176 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073012807 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109015732 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066669063 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127639295 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085546897 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100125803 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091398069 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121755399 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084160014 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121669308 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086486143 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106221477 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093088414 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088742302 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104484568 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090447877 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097492672 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102231892 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084178848 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088023652 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121826647 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105874242 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114554327 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105207944 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133626755 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106398583 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073494204 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102541002 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090108877 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145094288 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09377894 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080252543 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082934977 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098104414 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.231752043 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136168299 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085321937 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081371961 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110994049 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089178395 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087919812 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074841554 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100983825 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085019277 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107668408 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.095970206 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092251418 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10414633 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104824354 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084857095 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085601226 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119938736 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12733482 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100485707 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085196935 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087007884 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098134083 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092174894 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108104751 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080719593 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074526162 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066611083 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070480605 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115645142 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102328263 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092965774 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09282479 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101366031 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070101458 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084730059 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086890682 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079261586 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084782277 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108528903 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09868244 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1236587 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098891316 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090834494 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137725834 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126028557 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088842958 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091415112 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095038804 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074776339 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143038149 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110279835 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.074418188 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078383553 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073337266 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080988114 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067461994 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103185113 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104432512 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07562755 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097961989 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093042119 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116107521 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091112881 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075926079 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.07961606 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072899647 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073227011 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097129689 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076035305 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075346318 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122259219 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099769599 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.256721545 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07773355 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071954159 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12869072 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068326149 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13069734 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082405664 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108181925 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079372537 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077779687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089607861 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101632715 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106942388 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112069054 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070346523 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101357005 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148654166 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075479909 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073975587 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072977108 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109967058 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085977662 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142294779 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089377842 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087919142 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075676091 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122522119 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101323861 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081425022 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122106875 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079083469 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070102242 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081216042 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106845295 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071238435 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073434768 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110958078 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.620922512 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089485114 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075478246 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083122101 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118269108 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08108441 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106802214 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116038777 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104614129 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.178162194 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072617728 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089297424 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102798419 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097067087 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089693337 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078324218 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08722238 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087684716 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07926405 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103718496 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079434448 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085655884 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078813739 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102304608 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128206503 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084709706 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099420341 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087006211 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085187815 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096105053 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105023603 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099802167 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08262636 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086024475 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103405901 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080701503 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076846923 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096228537 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074208583 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075416655 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109685117 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.081022653 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089460842 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097292692 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.079403163 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101176091 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108887174 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108970088 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094151964 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075521559 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080845366 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084710959 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071300966 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07591166 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072753134 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06839228 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103253947 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081715027 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078549075 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.095238827 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102271477 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095130839 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101908976 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083859015 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090044836 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09492179 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118348347 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143113665 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092986286 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111039722 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123674618 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074061986 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.072617599 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078113131 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126181242 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.078059595 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0887553 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227475742 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072487876 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07567821 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084182044 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099744803 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077224576 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075661092 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092565555 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103482879 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079405152 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077371141 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08914062 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102500453 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.123498908 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085412858 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072121288 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103790893 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098419077 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118346819 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070968715 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078952088 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.12329407 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084143191 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097802692 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076977547 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115706913 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122420067 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07004226 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082534455 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065998629 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.353276633 seconds)
  done (took 49.07122189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153296268 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.149381476 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081260639 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096746639 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191993991 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.208739573 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116513658 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.096345922 seconds)
  done (took 2.830191602 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066228339 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.080930125 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10161009 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082581616 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065372215 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066549127 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.194559638 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080560699 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064099086 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103440623 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07257969 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065780767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.348879728 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063703584 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065080929 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071916849 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064487974 seconds)
  done (took 3.392261015 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.349663001 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615831094 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.313542692 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073959684 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.941862043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084824198 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.153475033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133242665 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077654758 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545997182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365981985 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127612381 seconds)
  done (took 18.528581778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071853199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071199459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076951881 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076346042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072620919 seconds)
  done (took 2.109423059 seconds)
done (took 98.090975336 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078217822 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164463291 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066165769 seconds)
  done (took 2.004164566 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078063746 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078984973 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07980376 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076932297 seconds)
  done (took 2.062460518 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069874369 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072166347 seconds)
  done (took 1.885200124 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23106532 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159895456 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089989112 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078317044 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075823273 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078371341 seconds)
  done (took 1.987045928 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067410022 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069719228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070558184 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070681347 seconds)
  done (took 2.020225114 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064172658 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0643571 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06731509 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069587983 seconds)
  done (took 2.008542956 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078403803 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080169744 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075616491 seconds)
  done (took 1.978371372 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106184624 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094042889 seconds)
  done (took 1.94224144 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.074700577 seconds)
  done (took 1.820971488 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08295112 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.092232797 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14251455 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107040441 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141669878 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123914143 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074379508 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076580796 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071828003 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07115494 seconds)
  done (took 2.725709787 seconds)
done (took 22.735395215 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074563938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361689587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355710834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081677775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666553059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355666162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96589348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088659554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095718093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066816504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083151296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646590846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959112879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320865715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943824586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321531565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647543208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066508483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066124479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067507175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95412226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066155205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066940061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06719519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647471441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371967297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067720928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323914908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066870886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068983668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355069902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067755364 seconds)
  done (took 16.081846627 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066338304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119551781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071202945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082435036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068522168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068296348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070569909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067377644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106979443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066995246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083676544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066493501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070457723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068091739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085703651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064282958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065329493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06467797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06655218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064933381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081777814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066955567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067727819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067647614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067592043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080218554 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068150258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066973329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067672731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069564931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070259952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069025241 seconds)
  done (took 4.091973023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117789325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124374433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071738411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107317183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11694495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069009562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149503406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089622994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112118828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067365903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083644425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067088589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101139845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068221797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087204719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067170979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06875777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067584862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067490007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068742226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086655606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067709618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068814031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068906595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068637332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082214607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068991783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067804024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06821243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070808445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072392164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069769464 seconds)
  done (took 4.398054704 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06571137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069761379 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077901324 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078880044 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065122991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067534833 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068391471 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065184777 seconds)
  done (took 2.32265737 seconds)
done (took 28.655164478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074409529 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065446558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069341805 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085353823 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072267882 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068888004 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064047227 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072835103 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069276833 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070491027 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071943943 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065858711 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068883227 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064005715 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070964344 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066868335 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071381896 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069354189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070140131 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070883522 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067138508 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070878723 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073753809 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070199789 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069931301 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069601764 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074461174 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071022045 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065885599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067744983 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067867057 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076530941 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071920887 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071444669 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064725892 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065185575 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069246791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067092157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068953403 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074075692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066842466 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07277466 seconds)
  done (took 4.666714056 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079825518 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085812584 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078245289 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078243617 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095309694 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078064562 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082027402 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075032303 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073573592 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081469612 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069470366 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074308525 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07519553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068338812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074061148 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07084867 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076068036 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069638104 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074468764 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074394277 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083218887 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068306759 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075066947 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077366662 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070674007 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07602263 seconds)
  done (took 3.75714323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068521266 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082796839 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089330625 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153580239 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109279248 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080835967 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080042769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094081846 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098723623 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066777794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070028968 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092726851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092613063 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073525724 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105581925 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08394686 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077358443 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067792536 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073039953 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102083961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089217192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084715502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098392516 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083194651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063326095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07295526 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070468298 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078580395 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071306062 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078065094 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071004716 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070967017 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067260655 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077934004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070264427 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064344497 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086745737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078150777 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079161352 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107311861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074977135 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067352645 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094231264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127900553 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06521059 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068607364 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069349657 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078660805 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066770317 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094434223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083659363 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064763854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083520816 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067347691 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06714476 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081659597 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068021581 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067911585 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078103202 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071934862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085704912 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070638025 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084131615 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065559504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074968542 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067050953 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068260259 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064457072 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099903719 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072634549 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114892058 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066699451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064136633 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077313267 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076564915 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071189524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064390073 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080917079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074920778 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067050273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074824902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065870122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066602218 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096663443 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062554998 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061618614 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061582462 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.0653007 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066682741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063733904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076224547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062787246 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066581853 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077380526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063712788 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063895283 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065766463 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064847988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063217126 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073631944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067415838 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065206905 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075525009 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064451042 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066487419 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077415146 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072509987 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063499048 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064801262 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065707307 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065241613 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067819918 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066778575 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066692498 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071281574 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072858245 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071414023 seconds)
  done (took 10.683617027 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152627495 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148512098 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067310211 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143525001 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074003757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071000304 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143834508 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085589125 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066550698 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067898487 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066261566 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093040472 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088094812 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102308591 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07057745 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066422384 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086970429 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097816484 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145384132 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.1416706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08910034 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074026523 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068877425 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067943114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067922011 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074350297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084845002 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074324963 seconds)
  done (took 4.396743903 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071527398 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08903637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068814752 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077607555 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084504867 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067136021 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068646429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067577137 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080017168 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07343413 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066093319 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071201524 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069506758 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068923187 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067097623 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072489311 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07300613 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065385694 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069641982 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071077028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076287189 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.0903554 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070549938 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066071182 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.06875106 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.0665147 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073693024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076551747 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065960089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079426398 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06404725 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070178557 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079819314 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067030048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065992865 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06685821 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066275771 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065981277 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066413268 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064365124 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064253042 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07049984 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064128617 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070493348 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077661413 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07102847 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06552848 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065855132 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066603085 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061286114 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067342928 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067345641 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069253016 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073544541 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068332134 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068077053 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06971162 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091702229 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072044424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066379684 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065095903 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064806118 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068080718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074788755 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082123798 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067257611 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064557104 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066147849 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071459282 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079869054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065810255 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070731701 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063425868 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066098036 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068363709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068701408 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067468982 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065191061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06577273 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066282101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066371062 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066230876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065508373 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06895095 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064003909 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064555469 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066674965 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067170192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072538588 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064838551 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068952634 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067270998 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064920289 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069130571 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071085213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069165373 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080429089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074883077 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066712901 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063880548 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08004822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067747367 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065363798 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072317173 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069744768 seconds)
  done (took 9.146458211 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085340657 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066059353 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083253483 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091646942 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07664953 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071751485 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080230854 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067578464 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080486047 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063685485 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072757033 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062818589 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077301201 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07341746 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065303369 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07390694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066367294 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082817888 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.07778029 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063082563 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072505083 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075978974 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076678614 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080500899 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080135143 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080949277 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076250746 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066633661 seconds)
  done (took 3.913406053 seconds)
done (took 38.317121338 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.85392913 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.011362509 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.841620033 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.037393811 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.982768855 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.846582172 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.985113106 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.827900172 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.010947149 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.874873067 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.144241943 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.288628829 seconds)
done (took 67.537280187 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.84437115 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.990535686 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056290777 seconds)
  done (took 5.81441282 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.991299873 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.479709922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.090897236 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.829874923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.834541728 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.226562451 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.607863182 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268550553 seconds)
  done (took 31.105962323 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.99720418 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052006497 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.519493592 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.554821528 seconds)
  done (took 15.936904377 seconds)
done (took 64.555077824 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.836318417 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.8265945 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.828041466 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.855124317 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.834467031 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.826328203 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.826158003 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.827635274 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.87064857 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.982170084 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.825516105 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.830714749 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.826186561 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.855545889 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.38862739 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.874542016 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.835773082 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.835417523 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.83586632 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.857269616 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.826625371 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.823255943 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.279803679 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.978208213 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.430270201 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.216327698 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.358522046 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216689873 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.826549945 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.822105184 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.052253688 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.262731553 seconds)
  done (took 206.339535537 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.826124164 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.771303787 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.853037205 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834489599 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.174767447 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.005512479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.926518433 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.235888452 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.83096682 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.846258597 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.994610889 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.828745433 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.035292487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.777446765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.863033172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.916572931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.99093395 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.065019756 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.865453183 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.974771913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.831102006 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.867291976 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.829167411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.978184873 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.838255658 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.838451056 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.834324029 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.844038923 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.013346412 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.966642585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.83674317 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.850724792 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.026169103 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.698046172 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.841023117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.84423825 seconds)
  done (took 171.319735758 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.023067389 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.833760776 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.827355627 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.884792167 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949845082 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833738561 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.497782904 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.837430996 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.302383598 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.832937278 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.828433625 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.827521491 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.828210936 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.839907755 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.932575309 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.83174583 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.842547936 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.83028712 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.854682865 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.827339932 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.828961244 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.828321774 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.82792982 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.828944368 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828564319 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.829531713 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.174410339 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.081958357 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.830534484 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.828828443 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.484577777 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.846276214 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.978508525 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.834830111 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.92014602 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.884602679 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.955474324 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.83291893 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.047823979 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.936661271 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.829742494 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.828442192 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.893153712 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.838970897 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.830064073 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.829680668 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.834081753 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89417465 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.114380766 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.830253177 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.828184629 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.948718469 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.319430551 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.829093875 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.829300753 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.829513985 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.446009941 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.834662959 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.833274618 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.836968418 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.836817375 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.830170894 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.831400139 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.245526014 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.901035258 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.065905066 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.273180526 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.829161244 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.339075707 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.912932687 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.82714457 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.827922579 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.828185137 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.830724538 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.827850993 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.829498923 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.947665365 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837745939 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.828198668 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.909166902 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.965893027 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.953265858 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.834182237 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.83932902 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.665812661 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.900844604 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.865642063 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.665023871 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.833551875 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.201732735 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.612677375 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.832152353 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.828145035 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.84420447 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.829903503 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829209069 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.829351017 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911809099 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.828973271 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.831604994 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.948228208 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.558022686 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.317714173 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.838258733 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.831176694 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.839233789 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.831470731 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.915210823 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.953112521 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.836159286 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89674625 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.837631013 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.833046639 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.94101813 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833339852 seconds)
  done (took 407.575840849 seconds)
done (took 789.085513057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.432132054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395813595 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.486852062 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.41345434 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38899892 seconds)
  done (took 13.886763377 seconds)
done (took 15.657234538 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.844866061 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.836834201 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.889369725 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.91544525 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.847824213 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.849789511 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.911291948 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.850179341 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.880491704 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.885294068 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.913822119 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.914833383 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.854940875 seconds)
  done (took 26.165827526 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.840926131 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974021045 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.042341479 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.873152224 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.841302758 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.06083378 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896675159 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.975772014 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.971297273 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.083558393 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.057604028 seconds)
  done (took 23.390250747 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.840913087 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974319613 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.053491917 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.876853353 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.84290701 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.063155613 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.903966599 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.970621217 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.974120962 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.072673619 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.06391196 seconds)
  done (took 23.416666836 seconds)
done (took 74.743565291 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.83651494 seconds)
  done (took 3.608822079 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.855485348 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.980273136 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.837997911 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.836471356 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.836020609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.8374306 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.837656754 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.83789527 seconds)
  done (took 16.632656884 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.838179076 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.837364242 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.836103052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.837901335 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.837458498 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.837155045 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.836954128 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.838914308 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.838229875 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.837662694 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.838809836 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.838674822 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.838369504 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.837847859 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.838892271 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.83852839 seconds)
  done (took 31.18072426 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.83973907 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.836868631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.837930549 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.838793819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.838813563 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.839488991 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.840492696 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.838627827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.838948342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.838682659 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.83914103 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83928345 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.83933333 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.839118239 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.839216591 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.839732742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.839259465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.839892841 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.843758545 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.839768063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.839823431 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.84003662 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.840036061 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839702969 seconds)
  done (took 45.921419841 seconds)
done (took 99.122725633 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.674273128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.5758434 seconds)
  done (took 10.024671703 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.839943409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.840628519 seconds)
  done (took 5.458368788 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.841099271 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.840298975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.840300108 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.841123404 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.840548217 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.842456426 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.840131552 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.841001423 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.840701857 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.84195447 seconds)
  done (took 20.184105934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.840896535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.841667631 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.841180402 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840696965 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.842301973 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.840942669 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841624223 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.840912066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.841953695 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.841585462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.841218764 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.841517769 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.84148572 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.841418896 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.841862879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.841011357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.841884487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.843080999 seconds)
  done (took 34.924688878 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.841590851 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.842820737 seconds)
  done (took 5.4614391 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.843524898 seconds)
    (2/7) benchmarking "second"...
    done (took 1.841943557 seconds)
    (3/7) benchmarking "month"...
    done (took 1.841984502 seconds)
    (4/7) benchmarking "year"...
    done (took 1.842447343 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.842574782 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841533567 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.84231186 seconds)
  done (took 14.672793158 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.843468553 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.992784976 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.038542289 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.658005292 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.84328878 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.845230893 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.129934787 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.845648848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.847554792 seconds)
  done (took 20.822358038 seconds)
done (took 113.323179504 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.615237339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.842379997 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.101168263 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.904439098 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.880630128 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.185590737 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.84849374 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.492163143 seconds)
done (took 42.64847832 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.89455341 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.839184192 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.884432945 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.886661415 seconds)
  done (took 22.386987963 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.840863695 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.169244222 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.865818381 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.649825292 seconds)
  done (took 22.321789836 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.221497205 seconds)
    (2/2) benchmarking "read"...
    done (took 2.18864148 seconds)
  done (took 6.191208211 seconds)
done (took 59.573096287 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843582915 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.842443573 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.843984357 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.842733772 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.843545355 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.843283312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.844231144 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.844737524 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.843514529 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.843419285 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.84514966 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.844681953 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.843491165 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.844414243 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844572836 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844834478 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84450644 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844486743 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.844345785 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845069398 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845036508 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845709547 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.844923453 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.844664653 seconds)
  done (took 46.04167591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.845259528 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.844784957 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.845649259 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845634097 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.844351652 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.845540441 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.845147121 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.846050924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.845267323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.844576084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84477849 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.845456433 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.846184939 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.846216285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845759556 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.846308185 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.846086337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846945379 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846555522 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.846790883 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.84689393 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846364425 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.84677102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845515813 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.846966348 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847229981 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.84633777 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.846915725 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845740291 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.847942447 seconds)
  done (took 57.161268843 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.846995263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.846168387 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.84580407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.84702045 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.846727944 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.847856954 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.847131936 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.847273977 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.846143584 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.847548803 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.84642493 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.846942682 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.847614698 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.847189754 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.847920577 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.847908217 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.848496138 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847974906 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.847590604 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.848168372 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.847283356 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.847530742 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.847800566 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847677242 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.847752676 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.848286907 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.848890132 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.848129973 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.847745402 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.847604259 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.84799239 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.84826805 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.848182249 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.848517717 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847517237 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.847988928 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.849823078 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.848541262 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.849100856 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.849093894 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.849594394 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.850423962 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.850189315 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.850018643 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.849115856 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.849830833 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.850343277 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.84960074 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.850498637 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.850436839 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.848528631 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.85014131 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.848926462 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.848374689 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.850104741 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.848811072 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.850076403 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848509509 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.850238546 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.850126578 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.851237903 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.850400916 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.850902271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849994128 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.850356552 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.851424878 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.849822277 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.850834741 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.850914334 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.850948458 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.850602637 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.850514203 seconds)
  done (took 134.897109131 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.851363869 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85162089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850676581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.850739005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851000796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850437264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.85111179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851515791 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850162273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.850523498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85105177 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850620052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850556566 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850934808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851296448 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.851487366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.851374697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851560187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.852200932 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851425168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851622639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85210623 seconds)
  done (took 42.511710318 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851631206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851230757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.852451081 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8519095 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852791106 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852634381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.852508101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852449236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852442736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852696369 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852201473 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8520735 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.852654632 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85203751 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852499935 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852669129 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852197251 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851833279 seconds)
  done (took 35.129995562 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.852963367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.852475771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.85259721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.853289588 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.852627809 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.853884865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852674167 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.853095158 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.853825165 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.852938452 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.853488317 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851983932 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.853577654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853304277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853453314 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852962757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.854058365 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853388663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853732024 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853262582 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854056116 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853645249 seconds)
  done (took 42.560855698 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853754162 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.854084027 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.854625595 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.854190485 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.854946165 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.855612328 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.854778734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.854158928 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.854608906 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.854104716 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854737258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85453527 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.855067572 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855532516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.857485149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855241332 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855425322 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857902936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854853094 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.854138122 seconds)
  done (took 38.890014525 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853624084 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855492572 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854432054 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855657882 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854337822 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.854234549 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854813414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.855773309 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.854427814 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855052175 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855102926 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854267456 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854802782 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855740735 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85516479 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855331147 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855679921 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855519876 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854987959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855005631 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855862044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855223587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855345058 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855084438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855185561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855998058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855263693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.855774853 seconds)
  done (took 53.73537565 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855968806 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.855826152 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.857243382 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.857188203 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.856951726 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.856464379 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.857613143 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.856866064 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.856727927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.856943737 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.858753064 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.857490999 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857380936 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.858462108 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857138888 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.858765241 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85772553 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.85776618 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857862246 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857402885 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.858860773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85842993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.857765929 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857815124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856871799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.85806097 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858130408 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858484967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.857594259 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858034611 seconds)
  done (took 57.520139212 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.878314294 seconds)
    (2/2) benchmarking "in"...
    done (took 1.879343871 seconds)
  done (took 5.551659431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.857609296 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857652268 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.859001264 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.859025593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.859625281 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.858525003 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.859335043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858249432 seconds)
  done (took 16.662995664 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.858701689 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861541154 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.858971485 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.85941637 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.85921941 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865945079 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.859112657 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.859629382 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.860284265 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.859967132 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.862660574 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.861029819 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.866285953 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.862902008 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.859135254 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.859261915 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860177837 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.861693881 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.85949352 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.859902622 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860798083 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86022884 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.860053254 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.859269563 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.860590632 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.861415246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.869079783 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.861423316 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860997942 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.861442292 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.867084006 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.861656126 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.859581198 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861959875 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860262888 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.861227072 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.868517461 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.86134154 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.860674515 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.861016508 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.862330432 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861714495 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.86315523 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.867989231 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.860163148 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.861477467 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.861080602 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.860385958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.860999362 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.863615375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.868478991 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861730455 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.861228925 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.862376169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.862337861 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.861226851 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.862396769 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.862384481 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867155673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.868933303 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.864282908 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.879687783 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.869013975 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.860764273 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.862458805 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870364076 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.883005301 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.863359361 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.863424833 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.863001182 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869676049 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.864026305 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.863576336 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.86322299 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873946994 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.87008555 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.862029137 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.863584334 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.864652557 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.862874914 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864478717 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.861937103 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862437357 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.862416839 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872257564 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.886112872 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.862627294 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.862926122 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.864428807 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.863624427 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.866544343 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.866572305 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.862873399 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.863726295 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.864639713 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.86503188 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.863438299 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.862279647 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.862864777 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872731115 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.865461017 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.864227757 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866153897 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.871194531 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.863997213 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.86409723 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863765569 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.864419009 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.871937402 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.864128788 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.863183488 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.865799592 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.864803982 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.868747152 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.864174107 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867094604 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.871533291 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.873543098 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865945369 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.868053264 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.86777844 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.865889432 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873680811 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.885560946 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.866750497 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.867662373 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.86902788 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.876299264 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.868410166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.866179606 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.866924902 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.866027444 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.86643173 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.866968035 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.866147606 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.866685666 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.866917255 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.866241761 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.866875107 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866656275 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.86886585 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.866825383 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.868613272 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.866564597 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.86916985 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.867174796 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.868708883 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.874610904 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.867541696 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.867503538 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.867832638 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.867751341 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.867736375 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.866985113 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.867577744 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.868626757 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.866379422 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.867312196 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.86878471 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.866690367 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867841131 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.868045946 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.872493371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.866233626 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.867007272 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.867286501 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867381614 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.86746031 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868314501 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.868229668 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.869766059 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.867875305 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.872054028 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.868939969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.869582143 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.868100805 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.869019355 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.867535367 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.871086581 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.8783866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.871824576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.87674791 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.870490443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.875206763 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.871583277 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.86948731 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.8691099 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.868308985 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86872483 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.869451345 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.870436269 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.872501212 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887355491 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.878104511 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871678469 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.87131579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.874260091 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.874015506 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.874845737 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.870674689 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869341033 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.87207878 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.870066699 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.871089816 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.870343794 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.872072393 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.868646496 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.870770555 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.872550636 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.870229863 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.871049825 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.869832751 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.870739146 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.87048201 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.871623673 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.869686035 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.8705451 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.871733611 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.878048349 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873211705 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.871649208 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.87023499 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871721662 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.87042765 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.87245361 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.872696805 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.875231984 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.8703333 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.87196894 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878984562 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.872020341 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.871004747 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.871300338 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.871995553 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.872719681 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.8729201 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.874260486 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.880512074 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873625212 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.872090259 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.877049466 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.872802501 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.873702518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.871348929 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8720597 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.872199358 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.874638374 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.87329138 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.872668513 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.879529132 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.873370791 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.872832612 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.873226311 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.875460927 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.872795809 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.87387901 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.872432145 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875310129 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880033013 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.879499916 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.873448881 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.876417945 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.874480145 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.875068696 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.877232535 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.873293942 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885111086 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.882300307 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.875141529 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.872589887 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.87270221 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.876081041 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.875141563 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.874534762 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880404664 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.873963917 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.874142373 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.878588176 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.874156424 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.873900204 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880692956 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.874562994 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876806293 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87505397 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.875439605 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.874172242 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.874696963 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875860663 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.874182715 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875658389 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.879533041 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.875728473 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.874594818 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.876363737 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.885037824 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.877715116 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.875860966 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882787949 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876503512 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.874074808 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.875964958 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.876498646 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.875326993 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.876141837 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.874142354 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.876742449 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.876066848 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.878528295 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.885220566 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.878916086 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.884926135 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.878118695 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.886526049 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.875741319 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.875775354 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.87613895 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.87838352 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.882680874 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.875554894 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.876043974 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883215339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.877765532 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.877122778 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.879753977 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.877535324 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.875408848 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.876539426 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.877148576 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.880871951 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.880494958 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.877616188 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.876318963 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.878716784 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.876115814 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879604618 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.878714701 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.877940928 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.877906045 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.877977747 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.876623591 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.876920585 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.877288811 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.87802389 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.878625722 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.878023628 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884605862 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.877870391 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.878891212 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881063592 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.879884048 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.88670095 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.877862778 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.877914758 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.878943538 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.87894424 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.881244632 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.879314866 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.877953029 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.877409906 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.879974501 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.878723429 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.890288695 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.885664525 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.88267904 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.879287012 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.878381476 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.878941837 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886828873 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901685151 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878955442 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.88031823 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.882791294 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.885404129 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.880751012 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.883819282 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881250579 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.88626822 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.879661944 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.878261429 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.881679356 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.890661143 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87852598 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.879689247 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.879852623 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883570368 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.881921289 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.88022724 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.880608969 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882862372 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.880658055 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.891627908 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.881523214 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.881832827 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880164003 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.879951068 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.879101489 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.881332985 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.880900017 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.880648791 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.881040383 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.880533294 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.881273696 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885162949 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.880029053 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88435586 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.889773502 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880923073 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.881463289 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.883259936 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.882176192 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.882707676 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881582542 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.880603939 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.882649224 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.882219205 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.881684357 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884101035 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.888631152 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882571453 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.881749026 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.882471788 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.884953612 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.881327551 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.883167538 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882239225 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.890463167 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885252276 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.893411638 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.891331864 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.883147231 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88405414 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889549026 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.889905344 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.882582946 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.881249455 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.883247718 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.88414405 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.884459609 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.88262109 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883297703 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.883684932 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.887180988 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.884548178 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.883416529 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.883203845 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.883536761 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.884315094 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.884583118 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.88704552 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.883629375 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.883616627 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.883527323 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.882566865 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.883630643 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.885350807 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883983159 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.884439767 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.886216828 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.885001524 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.889697495 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.885181877 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.885693043 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.885783233 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.885486631 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.885483751 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.885330647 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.885148067 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.885610387 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.888811868 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.892394715 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.885774601 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.885656738 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.885521838 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.888940427 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.884849634 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.884835382 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883973396 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.886015788 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.890990384 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.885484597 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.884789875 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.886032668 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.88507047 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.889210998 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.886642972 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.888236494 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.884468837 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.885460458 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.88784112 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88824041 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.893464421 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.890531537 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.887570408 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.893334646 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.890198851 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.887054026 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.887383227 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.887491639 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.885793811 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.886176075 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.890022027 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887472725 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.8879926 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.885216259 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887331884 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.887124137 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.888939522 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.886362916 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.88776388 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.888817232 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.893135784 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.89511725 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.8877823 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.886587247 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.887580403 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.889351397 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.896997766 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.887033857 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.887265608 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.887835529 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.888936991 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.889683065 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.893993331 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.895493107 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.889377798 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.886883574 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.892831454 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.903790345 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.891172904 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895698632 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.916103572 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.88951775 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.887236356 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88931268 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.888414981 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.888462744 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.890495479 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.888703497 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89502598 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.889550229 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.889782411 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.896466029 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.889758709 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.888888059 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.888820951 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.888903486 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.893283613 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.888786257 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.894996239 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.888339302 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.889074188 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.889350567 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.891253441 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.889755464 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.88900201 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.890230382 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.890817647 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.889920431 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889137135 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898463504 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.88890351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890433552 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902328531 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.899916321 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.890783146 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.889367693 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.890163428 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.895222334 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.893061567 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.890877324 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893473195 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.89893037 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.892512255 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.900274929 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.891573488 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.891066746 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890500488 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.890790229 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.890812723 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.902396511 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901101353 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.891442946 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.891216343 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.896280105 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.890695632 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.897521151 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.897507791 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.890842693 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.892102825 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891595047 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.892177662 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.891846424 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.892050926 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.894814238 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.899254643 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.890979319 seconds)
  done (took 1120.693378011 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.89218921 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892031189 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.892025796 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.892407187 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892617032 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89342366 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893243633 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892485027 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.89278285 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.893596216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.892826227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893350675 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892763707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.893323901 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893288052 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.894902256 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893666146 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.894419905 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.893867807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.895056707 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.894805386 seconds)
  done (took 41.585870348 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.894492348 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.892593671 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892778704 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8935526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893722629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.893483675 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.892674694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893381488 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894037346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894852661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.892320968 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893760519 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.894269403 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.893701348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897402577 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894185994 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.894292516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.894365051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.893839672 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.895904188 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894543378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894163106 seconds)
  done (took 43.496046459 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.893182827 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.893671164 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.894494969 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.895286869 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.894239342 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.894550495 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.894902533 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.895663408 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.894221868 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.894553576 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.901214544 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.90291362 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.895334403 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.897504865 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.895467913 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.894985105 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.043475802 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.894972118 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.893612181 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.895767174 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.894477569 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.901010675 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.896599428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.896230397 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.895333507 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.895604673 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.896747647 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.89560838 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.896061913 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.896053941 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.899660249 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.895771892 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.896135277 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.89888609 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.896678792 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.895940787 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.899185807 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.896232138 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.896654542 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.898657502 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.905066133 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.919769722 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.897799124 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.895687736 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.903779986 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.896314954 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.896759208 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.899813935 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.903610641 seconds)
  done (took 94.945667535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.897413735 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.897395108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.899446515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.896346083 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.897212941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.897384633 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.897480253 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897441548 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.897324786 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.897551598 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.89707555 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.898179791 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897912268 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.897899373 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.898205888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.897963496 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.897285368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.897826851 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.897296902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89856186 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.898344126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.897534629 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.898840095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.89846758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898107195 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.898579432 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.898711681 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.899000666 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.899064019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.898285941 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.899404706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898660993 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.899970015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.898990257 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.899222062 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.900113929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.899578285 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.899893442 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.899649863 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.899405755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.899859924 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.900755536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.898527332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.89869805 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.898824253 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.89983559 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.899728649 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.899410965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.899362328 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.900028924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.900183501 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.899936246 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.901089238 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.898808343 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.900776753 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.900159898 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.90118444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.900979971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.900410319 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.900138408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.899881661 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.899870294 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.899905082 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.900107636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.900654665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.90090863 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.900434156 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.900303258 seconds)
  done (took 130.96757474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.900198919 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.899891567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899710605 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899796648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.900004853 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.900713389 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.900796131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.900137951 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.901282083 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900937573 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.901314195 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902175399 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.899971105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.900539301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.900513595 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900698477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.901710586 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.900397666 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901590072 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90078943 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.900455851 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.9017342 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.902069259 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.900824038 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.901520187 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.902879296 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.901784314 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.901424238 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902511248 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902932855 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.901794222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.902752882 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.902194327 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.902059692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.902336442 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.902713984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.90178407 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901862756 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.901728502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.90227127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.902442726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.902224702 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902930979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.903372227 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.901925434 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.903057619 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.902452451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.903487979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.902547779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.902903517 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.90283036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.903001915 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902850312 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.902263622 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.902242506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.903969193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903280764 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903343386 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902279122 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.902567103 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.90308269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.904350792 seconds)
  done (took 119.754215515 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904185976 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.905442773 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.903974769 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.904122221 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.905299884 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.904838715 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.904902569 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.905790267 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.906582668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.905270022 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906796816 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.905192933 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.905965729 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904618612 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.905835182 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907032611 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.904442691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.904602003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905193721 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.905786748 seconds)
  done (took 39.942616348 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.9045031 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.905922067 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.905473255 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.905915179 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.906429898 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.905500595 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.905509691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906118718 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.905784418 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.90686166 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.905586575 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.907284793 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90637209 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.90644306 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.905956543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.906475089 seconds)
  done (took 32.335100865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.90622995 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.907630995 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.907336207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.905212433 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.906104288 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.907606404 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.907297406 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.907573222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.908025578 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.907549814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.90805831 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.906750618 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.906212722 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.906004673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.907032724 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.908442411 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.908484578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.908001009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.907372219 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.906550748 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.90891368 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.908465817 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.906745562 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.90845529 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.90835483 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.907711163 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.909319379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.90736306 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.908500971 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.90871212 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.907599881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.907647306 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.907816176 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.908667415 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.908141741 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.908161043 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.907523491 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.908583652 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.909219351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.907798172 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.908154276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.909374754 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.908846656 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.909648848 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.908885054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.909475717 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.908473611 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.909191285 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.909609183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.907906849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.909281811 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.908678453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.91037706 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.908778942 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.909419872 seconds)
  done (took 106.784822501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.91022317 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.910135067 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.908664459 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.909279966 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.911002174 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.909579307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.909697813 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.910313931 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.910118606 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.909831061 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.911013574 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.909873157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.90992177 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.909812463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.910341614 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.911237143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.910728559 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.911296514 seconds)
  done (took 36.225810412 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.911310528 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912455317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.911352786 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.910270099 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.911618052 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.912129222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.911715977 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.911595996 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911515433 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.911317841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911249377 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.910615724 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910407166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.911471908 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.911840542 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91137606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.911280972 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910670517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.911650094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911582035 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.9117513 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.91133032 seconds)
  done (took 43.896340796 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.910664882 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.910561925 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.925804796 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.929568921 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.930752036 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.942486682 seconds)
  done (took 13.393403403 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.911889102 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912954597 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.912441838 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913157949 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914258228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914542459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912827398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912161326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911711213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91367008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9115361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913141676 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913883417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913693239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911869335 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.912837418 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913959095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913217281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.912953916 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91256868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913446619 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912822452 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9146057 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912886418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914628893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914435391 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913400132 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914239578 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913878672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914225386 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913924993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914126385 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913328556 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914644444 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914577961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913830635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914807248 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915678744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914138422 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914607897 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.914059151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914633319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914381413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914364591 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914203305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91599768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914478001 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91438716 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914438029 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914699563 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914088819 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915160742 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913507498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914722946 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914286165 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914866426 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916627715 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914972916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91555117 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914921665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915460493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914714225 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916024378 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.915255646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91493775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916295676 seconds)
  done (took 128.176144128 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916001759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91579817 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.915238821 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915102555 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91578738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916235788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915715688 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916508411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916255599 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916036585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.916325631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916266076 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917578869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917536407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916349681 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91701997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916000754 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916778174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916715605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915880336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917876692 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91621916 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9179405 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91723716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917071605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917147369 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917324133 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917105104 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917808728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917047549 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916693445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91633889 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917470399 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.916348962 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917579008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916986218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917445951 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917380512 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91828034 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916847863 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917889362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917659265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918263484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917265859 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918618401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918520271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917742679 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917305668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919708231 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917259712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919472383 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918789197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917706822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918183744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918190983 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918430891 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919333678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918813767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92017503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918158229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91987587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920500686 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919315157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917726356 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918186875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91898084 seconds)
  done (took 128.402929482 seconds)
done (took 2613.049244552 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.935427172 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.176471654 seconds)
  done (took 15.963930965 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.085181879 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.035446418 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.921011516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.969633695 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.923492333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.941547308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.94376906 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.924289636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.924651835 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.922867779 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.922745739 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.109300045 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.921679265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.923646739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.922361303 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.01703253 seconds)
  done (took 53.263745907 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.928631776 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.928840967 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.938675706 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.928874246 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.928656957 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.946807864 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.960142158 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.9325294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.990292634 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.941900818 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.054287683 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.943402336 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.927672624 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.996409897 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.945237048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.944765651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.03117918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.006795185 seconds)
  done (took 37.130108296 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.009172637 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.938111008 seconds)
  done (took 10.810437752 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.930696548 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.957170113 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.948888633 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.922096223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.929776974 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.923354002 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.921291462 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.951723865 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.929938816 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.960640019 seconds)
  done (took 71.23151213 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.929818374 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.929105754 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.929568053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.924978239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.923552297 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.930914189 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.926253933 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.928836492 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.631418412 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.966748661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.937504462 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.934893883 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.927914534 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.926549478 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.925109789 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.951281248 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.033968384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.924589055 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.924650324 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.932179483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.927681625 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.977544578 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.94030718 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.929434866 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.960354124 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.626166365 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.938953581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.93197288 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.037722033 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.926369341 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.925490383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.137885918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.93240804 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.387043136 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.201522276 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.931805961 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.938420191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.933449238 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.926139969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.038931243 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.929200497 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.934168939 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.89026022 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.177184039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.028749424 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.973544933 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.286793727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.932995233 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.927695705 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.959239532 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.93081913 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.927939626 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.945394964 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.447746975 seconds)
  done (took 136.141510384 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.925273843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.277281594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090986996 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.928563421 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210688931 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.132782032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.929203372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972188192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.929002036 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1570398 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180233342 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.034760506 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.928262919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.925359306 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.925751984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.925902005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07241558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.998466564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.930332545 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.925505535 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953492049 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.16640053 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048644827 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.930465994 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.953024449 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.133968855 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.052891868 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.030622128 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.693914452 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.925864193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.988610592 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928821374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.929173073 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.926937439 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08037774 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.020592279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011918594 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.929576119 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926870144 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.926588624 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.671197685 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125340158 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.022105338 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.054061085 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.180934915 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131632942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.705496184 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.926589539 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.65810281 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089534131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.154578633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.160315833 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.049265142 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.933085062 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.262908482 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.927828525 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.9274238 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.173821201 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150489261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025753745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931106472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.930323248 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929574478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.214167005 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.932436585 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.022083901 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932509536 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.929122044 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.024441839 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.029118345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.160420047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143211792 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.962151992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.264015772 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.438291298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.173917204 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.994094925 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18152883 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.931782408 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.928802827 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.006378016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.761411816 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.181980678 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.20908117 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.172812651 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.963925724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.651583136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.929059631 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.153198358 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.150352966 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.178313325 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177826889 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.171052895 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.240128087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.931357551 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.930852809 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.179433578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049866079 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.934258754 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.270182963 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158554266 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.471112423 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.956686116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235025656 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060191932 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.93460961 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.555719858 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.93074637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.152474365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.970541844 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.933010944 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932519172 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.148046094 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.902518671 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931801746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.571837414 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.991053441 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.935256447 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159873148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.935926993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.192287296 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.936383151 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159476056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.035455781 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.961516103 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.104841966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178743533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.937278203 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175408237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.170099663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046446575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153716991 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.548279108 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.931127927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.216850345 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.934765507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.93151207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097621259 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.933751388 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074085336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.93521712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.213454323 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.955174841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.172326918 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.938431451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.189155564 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.966903909 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982104503 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.93699832 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062721784 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934461965 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.78874884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089825757 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.937524928 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.933364865 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.478338132 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.93542601 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.08154282 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.156488719 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.954858961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.004862884 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.595484877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.933166095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011577985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.95743707 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.315690185 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.933875636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.185034804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.936568439 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.933909651 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.934241825 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.219546745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.116677122 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.93826253 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.933392248 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.830075183 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.933575287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.932862455 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.115686222 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.311111254 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.933722742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135263382 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.93750549 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061686635 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.939468149 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.998125533 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.266090442 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.93563591 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.936451638 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.9352375 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.934574739 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.937320344 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.142206768 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.959270326 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.462970417 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.071555426 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.202912071 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.244170327 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.174482333 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.979047279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.940958767 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.189306478 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.937776208 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.997809788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.938638562 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.955116273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165426485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.938892736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.141612317 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.204473411 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784400925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983987243 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.940240215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.936963662 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.937224105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07325126 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025364706 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.93943544 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.93677028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050833046 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058618855 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.144707846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.938580448 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.061852992 seconds)
  done (took 917.174998374 seconds)
done (took 1243.568815308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.937283469 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.938343767 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.943767035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.941401681 seconds)
  done (took 29.630775615 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.939528379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.937898693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.937822233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.937934607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.938693498 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.938228796 seconds)
  done (took 13.501067514 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.949112552 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.941360383 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.941686799 seconds)
  done (took 21.702468948 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.014981462 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358116976 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.082402252 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.376186356 seconds)
  done (took 10.703085441 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.940890849 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.939575863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.939056704 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.940400403 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.940189415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.940641749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.939180286 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.940545003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.940984449 seconds)
  done (took 19.333581868 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.61346468 seconds)
done (took 101.352866526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.023728084 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.32357717 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.079821279 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.936956494 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.037685946 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.038440575 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.270397299 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.268701568 seconds)
    (9/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.337028615 seconds)
    (10/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.118427598 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.965084694 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.791054837 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.245684638 seconds)
    (14/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.026473883 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.091061623 seconds)
    (16/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.398333128 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.199479258 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.94876515 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.963899573 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.331895459 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.023296224 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.028242595 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.959510767 seconds)
    (24/309) benchmarking ("sort", Int8, false)...
    done (took 4.900323933 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.943183919 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.037959663 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.032246619 seconds)
    (28/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.089186408 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.647179222 seconds)
    (30/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.136212892 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.070940049 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.944095126 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.944697689 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.063574754 seconds)
    (35/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.362599907 seconds)
    (36/309) benchmarking ("sort", Bool, false)...
    done (took 2.156978782 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.694672567 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.132907097 seconds)
    (39/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.099423957 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.087141776 seconds)
    (41/309) benchmarking ("sort", Int64, false)...
    done (took 5.573568818 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.196535541 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.941381379 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.042239437 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147323651 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.207189985 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.044053708 seconds)
    (48/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.130915537 seconds)
    (49/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.963919159 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.942574076 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.66777813 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.853329116 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.949032157 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.942721515 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.042026742 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.63904529 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.295815757 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.330715402 seconds)
    (59/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.152272343 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.023399392 seconds)
    (61/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.034620933 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.520587773 seconds)
    (63/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.204275525 seconds)
    (64/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.959443474 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.965205267 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.082494842 seconds)
    (67/309) benchmarking ("sort", Float32, false)...
    done (took 5.613037982 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.945342103 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.267944402 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.851265732 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.264734496 seconds)
    (72/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.253713954 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.641236009 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.279538103 seconds)
    (75/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.272515934 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.198271882 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.328943969 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.079129262 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.07933882 seconds)
    (80/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.827924575 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.051698356 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.946306031 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.279577719 seconds)
    (84/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.045336687 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.004188676 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.06743533 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.488561242 seconds)
    (88/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.980117805 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.069296727 seconds)
    (90/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.348993021 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.945584294 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.141136239 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.951038613 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 4.019722484 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 5.620802716 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.259395644 seconds)
    (97/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.34738024 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.169439986 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.616939447 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.355247163 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.938347402 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.350468557 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.031758165 seconds)
    (104/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.972230447 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.281527588 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.028507767 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.112285334 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.958833109 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.593538254 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.884281605 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.085527339 seconds)
    (112/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.163526241 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.018159065 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.025305021 seconds)
    (115/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.07539911 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.326128575 seconds)
    (117/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.979871901 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.945470849 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.035664791 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.275128086 seconds)
    (121/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.276842259 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.209643154 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.049850675 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.945281951 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.278860716 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.957634901 seconds)
    (127/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.416116028 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.336976416 seconds)
    (129/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.025923701 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.415783379 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.972696382 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.541877214 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.119756102 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.26842192 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.9525107 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.949472368 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.025181234 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.036962142 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.946430084 seconds)
    (140/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.979586707 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.24113258 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.050159819 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.424804274 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.238392683 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267844412 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.949820354 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.027177869 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.975136037 seconds)
    (149/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 5.463667529 seconds)
    (150/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.703194315 seconds)
    (151/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.248391427 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.986209785 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.946428474 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.376395577 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.948961731 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.15662341 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.141825633 seconds)
    (158/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.975866898 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.64033976 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.046519536 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.95171674 seconds)
    (162/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.229831799 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.327678147 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.073860929 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151656458 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 6.950053689 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.955295412 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.036779553 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.165228126 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.647368004 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.19910296 seconds)
    (172/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.423845397 seconds)
    (173/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.45366766 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.94936705 seconds)
    (175/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.316088678 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.342138916 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.205895461 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.054679995 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.951473932 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.992706686 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.087116025 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.266556601 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.768268288 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.042875643 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.954500215 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.839335115 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.361250749 seconds)
    (188/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.661727917 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201721036 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.391548091 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.951452606 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.295618133 seconds)
    (193/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.258686284 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.112505477 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.265503467 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.758729863 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.97644043 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.070012093 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.274158698 seconds)
    (200/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.588745771 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.069781781 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.550324814 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.022832809 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.017491479 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.288489603 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.18906366 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.95511758 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.999383171 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.339895952 seconds)
    (210/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.030710578 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.089085437 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.074653459 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.950547658 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.83754171 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.950333801 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.686457053 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.137477463 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.26667276 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.084235408 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.951207511 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.023750238 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.055400601 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.952877076 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.979558892 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.421362989 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.102007962 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.068085485 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.061527616 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.95592324 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.891157933 seconds)
    (231/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.255903231 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.953116413 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.974775339 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.220614613 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.273809687 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.858758916 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.170620108 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.092988012 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.046068324 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.990334749 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.119747982 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.956603333 seconds)
    (243/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.607132451 seconds)
    (244/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.054245059 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.145192523 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.229629888 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.960859643 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.056630869 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.098794771 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.038451746 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.059041689 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.978624386 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.034656916 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.955809228 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.616183958 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.278491175 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.962130185 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.063544912 seconds)
    (259/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.983891776 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.062172036 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.735176393 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167106585 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.959219451 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.042709633 seconds)
    (265/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.08264475 seconds)
    (266/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.085666092 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.340235282 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.28055978 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.977230079 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.955762747 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.964304725 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.251290205 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.988177648 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.293475106 seconds)
    (275/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.043563219 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.044591548 seconds)
    (277/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.119672338 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.983113747 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.706230008 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.217628043 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.176365118 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.859853552 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.993173689 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.974369634 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.264638282 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.132310302 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.815223086 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.612536596 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.969392483 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.235027768 seconds)
    (291/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.73515756 seconds)
    (292/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.981407734 seconds)
    (293/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.728426327 seconds)
    (294/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.825196085 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.98883954 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.207399088 seconds)
    (297/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.998593594 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.289337391 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094348938 seconds)
    (300/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.362989904 seconds)
    (301/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.476079722 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.061090536 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.839886208 seconds)
    (304/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.229678922 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.958619277 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.160686871 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.268880417 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.139438476 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.070009193 seconds)
  done (took 1038.115057409 seconds)
done (took 1040.050482658 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.994352635 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979851349 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.968806561 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.992142796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.074052629 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.006031616 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.982477822 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.97330934 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.019981244 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.020543465 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.959894633 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.003483412 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.963628936 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.963530999 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.969477835 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979396859 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.2731375 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.997099113 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.982105209 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.981478523 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.982542875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.961269291 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.019876593 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.003543574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.974116936 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.974193401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.966410558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.982875949 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.075678985 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.966221708 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.975097835 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.978108091 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.271569743 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.001850673 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.968620067 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.983563572 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.9769399 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.983466097 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.975359408 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.996230502 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.421570886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.970474891 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.966062551 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.97130773 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.97192735 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.978585587 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.965137712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.978279981 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.982545899 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.981089407 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.416752004 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.987567642 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.969130353 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.973797986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.985688736 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.966599914 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.97601912 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.982719046 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.985377368 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.983260575 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.26342985 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.011704672 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.97586551 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.983148153 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.974050439 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.453058079 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.978156496 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.979008824 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.421997475 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.987514114 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.452822371 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.982091315 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.976162314 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.981872828 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.998124795 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.27525008 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.003991359 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.972291416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.977037108 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.963768599 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.985029447 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981922017 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.978811934 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.974914341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982983727 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.008732308 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.986002684 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.967639258 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.98650075 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.986924537 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.977046815 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.979890273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.977830222 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.972729209 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.98668651 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.979649027 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.969548139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.970937277 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.980413061 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.987895234 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.421163112 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.991356379 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.972739283 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.971056835 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.975672451 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.982332082 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.421443212 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.97585882 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.999391102 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.02504951 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.978341424 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.263658472 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.004346756 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.986419262 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.986711355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.978784364 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.973540433 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265453619 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455717272 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.991138859 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.976069302 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.96701957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985917033 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.978365616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.974326261 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.276610905 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.012012968 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.98517302 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.091208189 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.990584554 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.000904965 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.96754994 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.980887294 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.015187779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.986814799 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.001976113 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.980143028 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.98718062 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.987444667 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.973720765 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.98479564 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.990983826 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.977202965 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.984905774 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.974365901 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.015085143 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.986222246 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985039471 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.999485954 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.093571293 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.974854507 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.268171145 seconds)
done (took 309.626621644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.046895027 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.968116532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.084789946 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.969336705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.054732835 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.03998295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.968407402 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.970869102 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.968099797 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.467758871 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.968695478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.972622292 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.965180284 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.968352807 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.036044004 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.969694243 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.968707532 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.251360466 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.968610369 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.047575294 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.968476947 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.968796189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.968609355 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.470971002 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.967789236 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.966898051 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.047276335 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.970729651 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256528129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.968308403 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.968494925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.259488337 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.047992516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.98274156 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.978291725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.977058233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.055374965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.979376388 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.035228598 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.035832151 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.0851529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.002083255 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.96685141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.968638643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.973104523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.970633249 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.970112912 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.003701016 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.968239878 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.978618563 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.25282323 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.975836025 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.975690626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.97108544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.971968669 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.985249055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.971555855 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.970904304 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.049028653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.970422737 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.037154349 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.474227075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.468663427 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.970552542 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.968951017 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.971388268 seconds)
  done (took 191.302997242 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.034776336 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.044458414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.035402989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.975925397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.02029393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.043347412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.976074854 seconds)
  done (took 16.031446025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.977083738 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.971778516 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.023021839 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.022522827 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.970817897 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.148642578 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.983686051 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.978084465 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.999444965 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972126013 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.634743725 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.02244455 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.977594181 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.971049169 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.983085697 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.029992544 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.973729948 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973007079 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.081700875 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.12086011 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.978495182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.980013776 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.999126366 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.983873801 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.974395116 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.972216982 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.972801084 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.978294045 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.974725249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.973398589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.973623914 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.023457712 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972995031 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.970970797 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.973868364 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.974489661 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.973772748 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.974698776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.974307009 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.971270449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.974494128 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.974806977 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.9752093 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.975080803 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.972677161 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.996182013 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.974877176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.974910822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.973810767 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.974068232 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.999586693 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.974504073 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.976210517 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.978086032 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.015914701 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.979208982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.974060522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.97518545 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.975384343 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.975421395 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.976240566 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.123216707 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.02466105 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.975895384 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.026191667 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.125999663 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.975106393 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.974545531 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.975856006 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.067293714 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.975116378 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.025972982 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.976683231 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.093504588 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.976555716 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.152644926 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.997945372 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.978289007 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.978315587 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.974047332 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.982502098 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.975867379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.976150877 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.9829984 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981396681 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.976367499 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.976276393 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.977253556 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.983299897 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.977440364 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.025819058 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.977012574 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.976030287 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.11884722 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.976948706 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.085658458 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.003759649 seconds)
  done (took 216.211557006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.98193961 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.984353162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.978261548 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.991620443 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.977483203 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.97764412 seconds)
  done (took 13.797199209 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.978571331 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.981580357 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.977356462 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.9788222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.976422603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.977034731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.97776183 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.979063258 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.980679535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.977866118 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.977547804 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.978894603 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.977915057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.977271157 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.978794799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.976753584 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.979035228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.979392546 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.97900882 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.97805667 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.111592435 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.976916969 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.977222517 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.981933492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.98349347 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.978943946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.989996163 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.977959374 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.979134927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.986172586 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.982827376 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.978441017 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.982474141 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.985585615 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.983723311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.982424862 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.983698414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.980334869 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.980057017 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.979956082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.981057265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.979477443 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.979564556 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.979206227 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.981856753 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.987615459 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.983581494 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.99049747 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.981131078 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.980126024 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.980044577 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.980886917 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.98017611 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.980041774 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.985160841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.987903463 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.98475775 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.98197418 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.980067805 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.983286824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.984757062 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.980282123 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.983297617 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.986065089 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.988128889 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.980456347 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.984139081 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.984318784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.981036752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.981918904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.981142786 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.982039644 seconds)
  done (took 145.687016177 seconds)
done (took 584.947401101 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.596741589 seconds)
  done (took 9.507384751 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.111089016 seconds)
  done (took 9.024726847 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.906093956 seconds)
  done (took 10.816900086 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.003931222 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.002712172 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.985676734 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.981813351 seconds)
  done (took 29.89736078 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.172195179 seconds)
  done (took 9.082931929 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.992676572 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.978839753 seconds)
  done (took 15.942093384 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.047807545 seconds)
  done (took 8.959330009 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.424574818 seconds)
  done (took 9.348974095 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.004518785 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.000687328 seconds)
  done (took 15.936603854 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.100004289 seconds)
  done (took 9.010938955 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.684339154 seconds)
  done (took 9.598464565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.989675747 seconds)
  done (took 8.918265079 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.00819856 seconds)
  done (took 8.919640494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.05859816 seconds)
  done (took 8.969248373 seconds)
done (took 165.842989993 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.989516104 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.981096881 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.982560337 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.982119589 seconds)
  done (took 29.847671339 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.017449556 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.018763786 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.028079159 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.018529666 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.011237005 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.008801566 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.019785444 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.019329487 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.009709112 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.016531395 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.018330215 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.016305384 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.01904574 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.027351968 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.028201847 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.016688671 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.019761004 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.019746873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.009986156 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.028070568 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.017099292 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.01866947 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.985351524 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.983613784 seconds)
  done (took 50.289457476 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.169688541 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.049968985 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.138523516 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.030117496 seconds)
  done (took 10.301593156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.985423806 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.048931673 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.035888195 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.032671277 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.070292332 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.088774642 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.037813555 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.193745551 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.100590012 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.111447528 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.993030467 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.006383231 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.010550716 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.034876602 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.087508691 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.985345425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.986368154 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.101515524 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.047980289 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.251169643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.985977851 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.039501771 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.071591105 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.038499431 seconds)
  done (took 51.25957317 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.987457123 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.994928966 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.994177948 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.987475568 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.989403113 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.988743061 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.994902431 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.989172352 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.0095978 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.98987629 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.98836788 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.988956309 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.994298842 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.989452332 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.987885071 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.001634198 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.003224663 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.989499582 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.992778368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.995186506 seconds)
  done (took 41.770992309 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.985881119 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.831502821 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.329559657 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.236857272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.984489135 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.988438919 seconds)
  done (took 32.272690805 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.999246947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.993857674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.98753565 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.044514647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.125732292 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.993623127 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.987528155 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.99821188 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.035035079 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.054697883 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.008963161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.01574176 seconds)
  done (took 26.160943988 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.988035801 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.990748901 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.990990413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.002852172 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.998231611 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.99630252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.99557968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.985549914 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.001178558 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.006274035 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.994440763 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.999074953 seconds)
  done (took 45.869111605 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.203348116 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.213304907 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.199829913 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.573596466 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.980555832 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.886067909 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.692176266 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.662686927 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.281818665 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.960452582 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.954312404 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.892274301 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229337625 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989482283 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.238840488 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.908932662 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.989618884 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258670143 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989618769 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.990872473 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.277254764 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.039577582 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.203202489 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036145864 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.202544895 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.449994037 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.242683827 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.248167006 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324035211 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.04267267 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.178894318 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.041953848 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.99786983 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.000322341 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.990087884 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.002942714 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261284432 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991083791 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.994751217 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.990960673 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.916647475 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.320647558 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.096144238 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.409402173 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121480774 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.232738398 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995285155 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.159987928 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.055803606 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.2240932 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.085738962 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203837867 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.916749963 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.341895269 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.108074117 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.993835515 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996107974 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.691053966 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.2302728 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.071313481 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.330283782 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.09546712 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.999253752 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.081293152 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.994320349 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.10748711 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.182625911 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997324741 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.992176597 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.000907886 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.090223761 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.208049802 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.994031045 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994958453 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.010440342 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996660679 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.345806611 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.546370898 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.989363727 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.554228359 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.459536199 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.969423193 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.452418925 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.046129326 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266165494 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.203324747 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.075244842 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.240205748 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.85819289 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.999272503 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.801216001 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.075260367 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059408027 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.994361188 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.167783373 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.283843216 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.102387845 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.993657984 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.919969901 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.006291317 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.197357931 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.4601134 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.058734428 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99574606 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.996602809 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.000179008 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.99752136 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.012336262 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.008600526 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.913958421 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.277871539 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.10372194 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.249038574 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.981938871 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.681351073 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.262163412 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115611217 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.593973595 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.122046902 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.997080468 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137926323 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.008570611 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.003320182 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.185431482 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.412785922 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.176687928 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.244638349 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.03386964 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.025707551 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.003521458 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.07811762 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.222967796 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.996684184 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.241106204 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23599387 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.647547503 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.03020382 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.066241804 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.006237331 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.211505008 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.087317031 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.53118509 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.212810879 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.557553941 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.003339377 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.5953298 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.248756202 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.372014539 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.01258406 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.176278986 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.036455313 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.698690032 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.924036656 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.00285835 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.323481049 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.081033882 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.029658173 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.000514363 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.999067178 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.006726101 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.079141839 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073176376 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073627851 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.925896404 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.001130339 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001129525 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.000586034 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.542478581 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.65892671 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.287498145 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.001874327 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.073343656 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.000879939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.596168354 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.002277653 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.182530475 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.01081935 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.75400337 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.02482152 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.23809483 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.388871111 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114419678 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.999799549 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.008478469 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.700415494 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.009518827 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.70059338 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.282467558 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.992457188 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.441046108 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.056342396 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.082048009 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.016719926 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.002273424 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.003284189 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003394228 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.203925378 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.514989759 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.311635551 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.339922224 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.08430617 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.267883812 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.184708977 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.463849566 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.686251605 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.501362636 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.228968506 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.003002018 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003461331 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.464076207 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008882828 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.217674512 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.204052475 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.269477063 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.291535196 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.415374463 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.007910264 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.077483437 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.243467446 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.002650157 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.437261979 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.044465822 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.342197601 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.807377211 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.263605076 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.060780705 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.015378705 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.642782049 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12245681 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.96170994 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.130099384 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.928630904 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.663671508 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294911264 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.276765249 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.978700324 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.338268667 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.292380993 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.249017843 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.623884229 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.004798551 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.052727807 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.084572726 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.012112631 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.540760786 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.049355088 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060872471 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.010124118 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.004126694 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.005216669 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.683334001 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.08238587 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.136508978 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.790019894 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.50004736 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.921133479 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.270710885 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.055089867 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.449533637 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.043418048 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.219077027 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.00893546 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.56821276 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05813247 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.271538952 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.956850416 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.217918752 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.202518242 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.023691989 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.011308207 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.931377856 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.88098558 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.009125673 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.190141939 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.892740054 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.007564545 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.295517124 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.621096405 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045461356 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.006714297 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.320019256 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.387917653 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.177964029 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.014645538 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.219747448 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.133760786 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.924728443 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.499889124 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.587017246 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.706001618 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.018623037 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.209165478 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.342846576 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.289572712 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.048743536 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.085332445 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.273060685 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.979186943 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.0079455 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.528014311 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.105131868 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.248142747 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.308764774 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.497441957 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.408830545 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.238786282 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.995925496 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.217704209 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.359313369 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.247534842 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.947438148 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.098743728 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.223099213 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.28006141 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.881057006 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.718824825 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.250789852 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.01338683 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.934910226 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.217892108 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.509673195 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.373286532 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.548060126 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.199511347 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.04007064 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.49987184 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.024662759 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.944209464 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.009438482 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.958265708 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.22372482 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.192135082 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.053159372 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.565414139 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.269524399 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.398701228 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.248343368 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.052962118 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.935266283 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.723630382 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.958130824 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.047189264 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048724864 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081267808 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.014663525 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.215536303 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.447916142 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066778635 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.549151103 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.210349904 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304728098 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.277007966 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.303018713 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.962085957 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283332819 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.959713689 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.541666257 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.102121983 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.087659058 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.011124563 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.014461128 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282437689 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.319048054 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.585455603 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.051487474 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.342013311 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.102079362 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.012323588 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.016336954 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.495912841 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.252663003 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.227073042 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.090922257 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.207974024 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.084771876 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.52535459 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.018058405 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.013904609 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.147432824 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.013762121 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.752007903 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.3005272 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.749091831 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.215194853 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.532267935 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.87769279 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.197682099 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.061866193 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.013498564 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.017754321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.018378808 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.252438235 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.277187804 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.76880354 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.018492897 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.012930888 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.882625705 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.670175082 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.248905801 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.14726281 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.015945603 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.016199045 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.129483323 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.013464068 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.277734977 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.060310718 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.01370697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.021458334 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.227544922 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.529332126 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.029630506 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.713575792 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.216180624 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.02120232 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.505602203 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.456723531 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.269781884 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.062091131 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.203338417 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.259123574 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.532446569 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.208996021 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.016408264 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.241376212 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.01736723 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285774517 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288813891 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.015444298 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.230802601 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.486553103 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307550871 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.02617742 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.8905288 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.025616001 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.282453598 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.060721768 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.016463164 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.023772359 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.013062907 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.685935044 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.487030082 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.1663924 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.323937727 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.836746851 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.769977647 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.019120435 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.018281676 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.729511388 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.736666247 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.230305097 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.30165021 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.970042599 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.220443832 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.720194893 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.016427493 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.265911062 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.942854114 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.018037988 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.519120827 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.293054839 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.954724245 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.022303225 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.571207071 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.015425305 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.101040272 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.01713796 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144328191 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.281595124 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.386257971 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.123485067 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.656468163 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.676200597 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.95776167 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070777018 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.82712894 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.579924706 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.734985392 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039388655 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.034514408 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.942786363 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.020691257 seconds)
  done (took 1702.544099766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.051244556 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.031717712 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.052321786 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.073776635 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.047358416 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.136240968 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.042436757 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.052832903 seconds)
  done (took 58.433751317 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.016318879 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.032733491 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.020167424 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.018129303 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.035630551 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.018292492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.178039362 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.029505531 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.02172112 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.023425974 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.019234576 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.01871993 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.297591057 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.039923202 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.017038881 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.017579938 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.02208234 seconds)
  done (took 76.790112845 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.020124948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.248508706 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.07291812 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.021403294 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.978073609 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.020222658 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.995011855 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.045570275 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.026911627 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.257823188 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.32103131 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.047646086 seconds)
  done (took 92.002968844 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.023928947 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.018434085 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.019942746 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.019615042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.019325909 seconds)
  done (took 12.053054884 seconds)
done (took 2231.570248818 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.312782492 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.076985745 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11793534 seconds)
  done (took 6.141488666 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.167661574 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.211681157 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.322370333 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.089299633 seconds)
  done (took 10.745626543 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.274297942 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.386909368 seconds)
  done (took 6.607820444 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.39454242 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.037968646 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.386548435 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.023000308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.02637046 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.027690882 seconds)
  done (took 23.02971045 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.022732916 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.022501507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.023039775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.022992422 seconds)
  done (took 10.040482192 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.019406874 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.737509166 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.024093762 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.033281073 seconds)
  done (took 21.762244242 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162764254 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.13356989 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159869229 seconds)
  done (took 8.405247777 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.171904437 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.860799831 seconds)
  done (took 6.982322649 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.163930296 seconds)
  done (took 4.113067822 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.050070636 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.292092148 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.524190151 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.538283814 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.622990298 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.779454916 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.348559274 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.272905307 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.434077989 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.455681223 seconds)
  done (took 26.267948462 seconds)
done (took 140.176278561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.381560601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.040341073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.226738976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.390420565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.25017954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.226928875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.216362515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.380978759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.063658581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.050502848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.386264703 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.250835556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.164836069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.04567612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.17010812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.049700867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.249394962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.390869004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.07103092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.289696598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.227640321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.033294018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.230798736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.045834196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.252369948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.178892254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.577451523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.052303793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.220114748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.588477632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.180947976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.4380837 seconds)
  done (took 173.273986053 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.02290128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.0248144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.024545717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.024716042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303836223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.026429206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.026421236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.024996529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.22940083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.224456684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.024421381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.291830495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.025646902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.024511391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.026991613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.025065691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.396497462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.025416462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.024791309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.025040619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026401603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.148995761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.024547013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.150674573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.381134436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025840467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.026062344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.024537664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.026189649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.025328212 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.023803805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025663 seconds)
  done (took 212.685713509 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.025934042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027080175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.026796618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.026590143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.026538081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.029026286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.028197849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.025315779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.77825804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.757254623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.02489835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.025931551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.031325818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.026463977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.02919392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.026574946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.026216297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.026851367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.028128824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.031339912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.029867273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.686344105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.027420731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705497466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.030722563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027435841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.026706163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027906176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.027148338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.027795896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.029851127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.027344489 seconds)
  done (took 225.656771398 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.267694937 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.028930853 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.029644738 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.040036441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.029527695 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.029444286 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.038580196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.276363584 seconds)
  done (took 20.699557622 seconds)
done (took 634.279975281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.392000073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.752622826 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.170734444 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.05297085 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.26465775 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.094043892 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.047016401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.109015573 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.879562651 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.120477263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.457453513 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.057019232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.843620219 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.076351927 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.173295534 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.105084271 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.391080445 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.700585562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.192588232 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.691858774 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.208956316 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.99363634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.12759001 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.909216463 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.473832659 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.027314165 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.074599062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.395988837 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.053745526 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.210625323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.656273003 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.316548301 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.065643417 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.051324963 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.105071359 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.080342813 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.259188391 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.060244954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.172886378 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.788339636 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.696968362 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.753621888 seconds)
  done (took 107.011965756 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.039805387 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.036329513 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.036405806 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.036251079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.044224722 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.036391946 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.035714013 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.035166603 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.036322191 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.035478387 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.035199837 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.044619745 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.035830621 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.045134564 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.035566006 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.035854293 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.037368347 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.045773769 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.036300673 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.036007144 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.037163919 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.035646726 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.034505708 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.036968704 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.03618417 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.036765597 seconds)
  done (took 54.94824192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.034775314 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.201225805 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.273521154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053775484 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.033389294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.036770285 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.061312783 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.041786728 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.035885345 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.034530397 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.132693831 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.039376496 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046278766 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.27599038 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.049579195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.033438405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.034496951 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.034136739 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.209139758 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.050438827 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.062925586 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.042750932 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.0623068 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.050663857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.03548451 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034579333 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.037694805 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.459142182 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.04681142 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.134784635 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.078535795 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.066974581 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.424302872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.288301619 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090924247 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.042133103 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.036273845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140717501 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.040640975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.035678717 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.063661245 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.046482335 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.278602876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.571315372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.049744758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.035637781 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.455567524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.15235851 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.078173549 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047663755 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.286799642 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.053072113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.035904682 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.037121202 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.072789884 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.050149565 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.037105901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329399937 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.052381964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.064760572 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.047146826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.037817712 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.218738365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.046725562 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.205882393 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.046669055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.043246018 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.038565739 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.280097236 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05513145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.585144349 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.05070697 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.037228245 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.13966589 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.212288811 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.483303176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.055047227 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.220864551 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.441556636 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.076360241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.048835966 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.444508761 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.078426887 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.049479642 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.038199338 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.037765418 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.038404274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.087032003 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.063975288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.498837272 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.587272698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.346006954 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.077711363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.050875377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.039169776 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.32878443 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.049772391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.039667709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.271638009 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.598889459 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.053408957 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.046925359 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.562513928 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.054350237 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.067863366 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.05179224 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.292642314 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.055058764 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.088405078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.040454246 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.046766449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.04206611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.067679689 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.049496501 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.040076137 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.554740988 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.157226561 seconds)
  done (took 252.058985709 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.041123983 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.037914002 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.038412608 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.038679239 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.036819659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.040703125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.038647234 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.036895318 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.039330139 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.038570114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.039913787 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.039748256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.039501083 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.044582496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.501640607 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.04225804 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.527671274 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.041783696 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.039574544 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.041680289 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.645456199 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.047990516 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.039851723 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.042212598 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.044040809 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.041614515 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.049276083 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.08464285 seconds)
  done (took 172.710769234 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.044015898 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.120558969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.055002965 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.09043045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.057160611 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.045106249 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.217626592 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.067214703 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.049980161 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.043856166 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.042860101 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.074037853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.051892117 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.14148672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.083533833 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.154568349 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.149666924 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.053981171 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.044041868 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.043814917 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.090761558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.058281497 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.074585006 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.106170023 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.057033348 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.099782827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.054990105 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.044795509 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.043126891 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.180374576 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.06753136 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.076111627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.078520513 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.064558052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.163333318 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.164424952 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.153149852 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.152032654 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.053406144 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.046754212 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.045456548 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.046059402 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.100207338 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.059322239 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.045221172 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.160079888 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.066307974 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.047030271 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.046188851 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.047150026 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.059361626 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.064599135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.082678462 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169696972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.098049035 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.072003387 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.142111099 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.16496963 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.045363915 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.142394643 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.055794379 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.16019201 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.066369845 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.047769747 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.047778467 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.050451567 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.094641085 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.15873722 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.153070466 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.056409678 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.143216733 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.106077914 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.061007661 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.047654333 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.047592596 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102954262 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.157519528 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.105337622 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.108105248 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.083625333 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.05908399 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.046767315 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.048399739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.07467421 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.056271721 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.161415047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.164236586 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.056852438 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.047950216 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.049483062 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.049554714 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.071433471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.114536583 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.087996344 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.154857419 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.088000075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.086036271 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.057176301 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.063496559 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.054907681 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.081940883 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.056636 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.060897461 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.323017126 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.079427613 seconds)
  done (took 221.190054536 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.440804933 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.094521659 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.120063813 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.32188446 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.441854859 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.981044798 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.087733782 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.097833698 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.121698887 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.225544124 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.168151263 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.137674268 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.087113508 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.070996483 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.092811857 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.123219799 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.1238252 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.396701231 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.292796612 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.680349903 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.090675873 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.39174815 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.423518367 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.45926382 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.142877644 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.493959194 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.690260266 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.193497204 seconds)
  done (took 67.972492755 seconds)
done (took 877.849368057 seconds)
SAVING RESULT...
DONE!
