cset: moving following pidspec: 518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285851376 seconds)
loading group "string"... done (took 0.596799265 seconds)
loading group "linalg"... done (took 6.921554898 seconds)
loading group "parallel"... done (took 0.160552673 seconds)
loading group "find"... done (took 1.109973298 seconds)
loading group "tuple"... done (took 1.725701754 seconds)
loading group "dates"... done (took 1.1851099 seconds)
loading group "micro"... done (took 0.222966618 seconds)
loading group "io"... done (took 0.992884904 seconds)
loading group "scalar"... done (took 38.066647416 seconds)
loading group "sparse"... done (took 12.597394067 seconds)
loading group "broadcast"... done (took 0.953271246 seconds)
loading group "union"... done (took 13.323626766 seconds)
loading group "simd"... done (took 4.494418395 seconds)
loading group "random"... done (took 9.134032579 seconds)
loading group "problem"... done (took 2.030758275 seconds)
loading group "array"... done (took 20.970603668 seconds)
loading group "misc"... done (took 1.736223358 seconds)
loading group "sort"... done (took 3.288859026 seconds)
loading group "collection"... done (took 17.51773236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511799629 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12314646 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133523811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135218767 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.174059227 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146056038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125362756 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100764653 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.126843682 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165612697 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136680674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477010636 seconds)
done (took 5.272355677 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204890838 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084934411 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096838437 seconds)
  done (took 1.024583048 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066529344 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121530877 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06691125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06566139 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065664751 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065036873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085895273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066548822 seconds)
  done (took 1.386553897 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074868708 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068847322 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085306454 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06821247 seconds)
  done (took 1.147982071 seconds)
done (took 4.687530706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.851915092 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.241575746 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183837739 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45541879 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153518807 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185903495 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673515177 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319460504 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201197586 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082018969 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121767715 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362622232 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129622351 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668613377 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075971182 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107233911 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.164693431 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424173677 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08329675 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083144946 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103858834 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128760324 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102288499 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091352412 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.160275189 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082877293 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148240641 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081919513 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084180225 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.227010785 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18868895 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676413702 seconds)
  done (took 10.534133204 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096620752 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114622667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068726395 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140130847 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097417313 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068749451 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070658533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066579801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107686981 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14494824 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088898508 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119547185 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065374089 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086754999 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085392886 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.221506855 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079903351 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099559346 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071211894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093150321 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106979043 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095516583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079850514 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095446221 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129308422 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208447377 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09803413 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113627466 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068627939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098808429 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130128418 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129594012 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065376857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084851094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126828233 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111744636 seconds)
  done (took 4.597277275 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.086378961 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.157342985 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090979309 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179651516 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067172813 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125965938 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083030391 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100157208 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21925559 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.097960195 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.4799185 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13029331 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101517401 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068586231 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068308275 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065812958 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.594761631 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148459587 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114790824 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107027751 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092468606 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072846781 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360381963 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070440739 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067597381 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087721822 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061481054 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13464275 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129781319 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070546411 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.183165858 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087372456 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08998651 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102110982 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180486805 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089188095 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153506636 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08581156 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066377715 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170312616 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091987211 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067255847 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083133975 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122655517 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124597157 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069475246 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085029471 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176927256 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0690598 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08265725 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.858089179 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167360926 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06818057 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074997571 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085057942 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268675426 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106973076 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068029609 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064542239 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248369017 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152954997 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069404305 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086913322 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067995757 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070158504 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371408139 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087794366 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.692658708 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071655174 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077375185 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068013696 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065287346 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09245274 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072880459 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103838042 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067641192 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067547562 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084827689 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067076911 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068091391 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104835573 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209292022 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066954683 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085815218 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065677408 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104009892 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097720023 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086963755 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065740053 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115985992 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069582915 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067632354 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121700919 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067136369 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104883021 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08614666 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115977188 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086257367 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.12031241 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07391706 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068658048 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117425476 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088932134 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101545393 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096164517 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068085066 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.242388728 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08402894 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066219154 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064338249 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087198992 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066902114 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086097007 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071508136 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079389381 seconds)
  done (took 21.16811566 seconds)
done (took 38.236116532 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291419783 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096370972 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07781557 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097296554 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097493914 seconds)
  done (took 1.588815561 seconds)
done (took 2.490366269 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119107759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118628914 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06393528 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114820207 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064382486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119952153 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098331592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100293782 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116401131 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065883359 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096283308 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083715677 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065545496 seconds)
  done (took 2.156409727 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08375222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083258053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088928264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085046839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064850889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102764367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08242738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109334585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082936218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073432343 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085365481 seconds)
  done (took 1.838183048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082560625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083161715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087701358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081992716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062645397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098791123 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080676726 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102778922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081276885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091444158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066251323 seconds)
  done (took 1.814450406 seconds)
done (took 6.699841308 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078649446 seconds)
  done (took 0.96752145 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.698059049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.947672295 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080463771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139537263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.206878095 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.145002699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.352906875 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090469453 seconds)
  done (took 9.757435662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100515238 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087564053 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070473526 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08929585 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072765465 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071956148 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088427375 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070844145 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086658079 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072501763 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067603735 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090932398 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070329462 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091282136 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069659858 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086866367 seconds)
  done (took 2.244163242 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091781925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110129903 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072872244 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094240624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072372497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091802714 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074769417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092678242 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071053087 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089781485 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075317498 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090757722 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072693421 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083165538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075429335 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094190429 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071629886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091482409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076360727 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091680107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076081157 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064390204 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091425347 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074735786 seconds)
  done (took 2.975159248 seconds)
done (took 16.83950801 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112822108 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088969523 seconds)
  done (took 1.097742481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082928474 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100211761 seconds)
  done (took 1.08270593 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083996839 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082429809 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090578004 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096185947 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066447323 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083440523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107059541 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068057762 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065460535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08404509 seconds)
  done (took 1.730992149 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070076789 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09450507 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071770007 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.101237652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077379312 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083112857 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07621538 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085349664 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081924716 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063148286 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070149777 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101989709 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071842746 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101770798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073525858 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086822801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071755768 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066644184 seconds)
  done (took 2.351630798 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066975036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067148648 seconds)
  done (took 1.04036718 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068625396 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063956925 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084934445 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067059786 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082284603 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063952857 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080828197 seconds)
  done (took 1.416732105 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416181363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111825778 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340903852 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072848933 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081282957 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295569612 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068446027 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071340565 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091932498 seconds)
  done (took 2.495392116 seconds)
done (took 12.118444822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081261535 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08585289 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112610508 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.405612556 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095638571 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.086812933 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.134811015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233969117 seconds)
done (took 2.145665665 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128900201 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621092887 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409304016 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212669513 seconds)
  done (took 2.155528311 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338358738 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110928114 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06031359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085434293 seconds)
  done (took 1.509220711 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066397196 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069515796 seconds)
  done (took 1.047856295 seconds)
done (took 5.754538304 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085954451 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06551541 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.086224074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06441531 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084729214 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064633487 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06369405 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082693105 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067040319 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066406172 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081630992 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069677443 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065772295 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084886147 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064571917 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063724477 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083671564 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065110839 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063793523 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082828191 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066508866 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063615497 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063194319 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066099524 seconds)
  done (took 2.667787893 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084776513 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08377142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072827342 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073078273 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088880597 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071630823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090197181 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067312252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089196435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068981592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088627538 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071793241 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067855586 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088726665 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068476839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088956072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071761589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084482023 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06871045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089389428 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073836497 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066548004 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090181976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071680881 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089455406 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070237987 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086866838 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067714207 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088510955 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071803845 seconds)
  done (took 3.274207562 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07066845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063281737 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081682376 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071046744 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063490996 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083894639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064366303 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064365158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083532991 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064341186 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065018214 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083375171 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063852038 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082554378 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065945132 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067337787 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097543563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064706958 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063828882 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083861348 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067356465 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0631018 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083357084 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064050364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081155278 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06472184 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064123815 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081365782 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066051856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063743837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085161009 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068701052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063982325 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08939864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067861373 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063966194 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086907095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064210366 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064153342 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082205648 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063795065 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063563246 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063209851 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069767796 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084117378 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06687465 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064026956 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084371928 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065294406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066464073 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082375287 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064431972 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083216213 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067070923 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068113558 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082305964 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066439408 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063906497 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083178754 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064189858 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062849471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082263236 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066597138 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06370401 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097355061 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07111775 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083023397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066874631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064777606 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084873469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066188568 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076028515 seconds)
  done (took 6.107889542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092819967 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107356762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065084847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084908878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062264776 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082505248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069487951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064130246 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083757648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070040887 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082542929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065921209 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065494816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095283821 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064961335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08330329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071218276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061583699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082959703 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.176499973 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082845938 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068480914 seconds)
  done (took 2.706539488 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176211756 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071332652 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.126435852 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093685789 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070222463 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093089797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073352806 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071327058 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092142484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069988431 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089555003 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072172995 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089910413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070119233 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089369609 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071761863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090232089 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071431006 seconds)
  done (took 2.508884013 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079018113 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066548089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105333197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066188262 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085260003 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068654485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090674171 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075410909 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086946897 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067876164 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074672284 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088482552 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068286696 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084782331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069866667 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066227746 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087478973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066451749 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092836151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071169699 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091167534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075690387 seconds)
  done (took 2.657017685 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081739495 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067650686 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10221844 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068949274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081315705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065390689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089265214 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067609223 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070380636 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088973145 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067083436 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064069074 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068680317 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065287651 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091876965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066939642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087205127 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06752631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068749586 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081268161 seconds)
  done (took 2.44058601 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088712106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0860966 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06890771 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094688495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068892375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085377605 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078209465 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085787909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069267876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105772217 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069142952 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06707489 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074040069 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093695078 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069723173 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096088065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077318278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096276698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069904547 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08789045 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08854773 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06686239 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074298552 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089602177 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06832871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086517341 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068074326 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091267651 seconds)
  done (took 3.196134052 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06779162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066509971 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08177857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064907067 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063648687 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082653425 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065118605 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063979801 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08510113 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064688232 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066449053 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084537719 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067366891 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065700317 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084803004 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066995254 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065615777 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082300768 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064606692 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063660716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085200411 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066695024 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065771564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083148495 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064765407 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084275212 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065142112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063888158 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084597811 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065099438 seconds)
  done (took 3.077160686 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077375665 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072764667 seconds)
  done (took 1.084258679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065177822 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079512105 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083724973 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07027143 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089089534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06795301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073729323 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069238897 seconds)
  done (took 1.533533388 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082234854 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076862951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08680461 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08055389 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095934459 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082366792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155154251 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086817743 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073580579 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064279286 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099664174 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065365743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091297395 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067291262 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071909991 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092215579 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065054601 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090941266 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069966132 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064079924 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087549715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075255404 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088311768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062981099 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067143169 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108667131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096028084 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067706899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069837393 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092759014 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072897353 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078800718 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067927799 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067010226 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064302703 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075447748 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1038977 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07043488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093167109 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069108377 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096530218 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064297337 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071089671 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092118715 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077658872 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085898962 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068498801 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061898512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083611384 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069639187 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062853789 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085816406 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062472635 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073141283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069282521 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078786281 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087650596 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068607703 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088229741 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071538414 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07313915 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06845085 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068135705 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087204245 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077482415 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070863226 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095313536 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061810695 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080128967 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06580235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075548915 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108987051 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072615496 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086872871 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067868797 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083794787 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071236888 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067713122 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091670643 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073207652 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086141961 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072697506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091996689 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067603013 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069348812 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095618602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064712115 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08896155 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065121458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082480285 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065538396 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064147616 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08610261 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076656638 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088843863 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06804166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064868657 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092810176 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061159124 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085874532 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069354884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067573994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097200342 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071790811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091934406 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075571715 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094031623 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067751038 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087696036 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065262652 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068252651 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085859319 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074564274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061832882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068580187 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066635801 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089267494 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076560926 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064632176 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088004243 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074883526 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091789614 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066815033 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064160019 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089187963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066975899 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089066072 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075195891 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065390532 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061685141 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060812546 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09245064 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067604791 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069663891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091324122 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069650262 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08089236 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065477531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092264711 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076594683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067329968 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087310901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073409411 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086922244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067354303 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073046198 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088810263 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066934025 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091257136 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068386804 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061971799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090325544 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070005373 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084753374 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072075996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069261694 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090416979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067877731 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085281582 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077098231 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087003467 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068975894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068352457 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085729946 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080026203 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087583623 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065536921 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065513846 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098098089 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067267656 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0869619 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069096969 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070722182 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089067012 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067725916 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067420328 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090443223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079875482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092270779 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06950663 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094514582 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080646003 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087239255 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072192784 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068099801 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089134835 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071052642 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096681801 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075506869 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07117804 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090247815 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063386372 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093118175 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075436356 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065184281 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084760772 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066313495 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09124509 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073204109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090557091 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069300958 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064704247 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066246973 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069350294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08993203 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067814036 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065900533 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094397962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066306858 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093831874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068374626 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09558267 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070789653 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062134209 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0898805 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06483664 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091680161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063906426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064654523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085470741 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069487667 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066554622 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068669323 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05992313 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095359175 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074941161 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067367286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086294453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067227176 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093106417 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06976507 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0709746 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089698519 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073063495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096444831 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067258342 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069640578 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097314945 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066435287 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081289762 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073630781 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0659604 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086272781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065545051 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083359678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071099214 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093670097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07519963 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061437459 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089473137 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065979508 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065643371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082317305 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071828748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08921056 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068801401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073252743 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088349941 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067463775 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089953566 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066915077 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067133639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088855674 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069995641 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087530972 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06979395 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065743438 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08926793 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066614335 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084096147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069801062 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066819596 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086844874 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072999439 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08478147 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068838424 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068797208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086787915 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068133083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086169912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068342576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070363325 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086929369 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0680509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068915923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081886253 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074043643 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085589129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075349885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066709797 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083646355 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07459401 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088308544 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073477484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086978377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068604422 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06809235 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086542301 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070082931 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092199568 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065794952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076907008 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094419225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066896284 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089358768 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06747933 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067748084 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085437593 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068575302 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087302403 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068423083 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066804403 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090876294 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069903465 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085346053 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069691362 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067812685 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086226414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068124924 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061010299 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06540137 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065645238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08767617 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078151024 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066996329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087409203 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06646526 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087744098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066325352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063106169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095619054 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075822449 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087484749 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073976373 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085493849 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068890514 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096120885 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062905353 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065597208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084490022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065662194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073533323 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087988062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075981844 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087389642 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066983782 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063710067 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086662459 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065934945 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079836326 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066377335 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070255987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085359408 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066829184 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067185762 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089359921 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068309025 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096180798 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067225152 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067242497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088268288 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063798829 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0855626 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066763196 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0694931 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087755229 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06486982 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063966877 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086396812 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068069499 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087015073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067521358 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068210045 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093720923 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066979739 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088967072 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071418741 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063777829 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089946429 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066923724 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086008411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066907904 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070195663 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090409297 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06810105 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095482918 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067715121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067724322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087182038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064900984 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085772993 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067662671 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067484381 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086472853 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068810927 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093571032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066018237 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069935742 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087270025 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06811658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092259739 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068630598 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06970528 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094013443 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067394985 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088152898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075600747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089949187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071618932 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068244816 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08856363 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072528624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085011425 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074441486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067253627 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08715773 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069516225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064897705 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087065073 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067068582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085417493 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073343747 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067098485 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086658929 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066690197 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083702565 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068973535 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070377 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09437817 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069472724 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089296826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063752495 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063792755 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087600698 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065271235 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067913075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090062082 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071960837 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088836134 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06756488 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065350502 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096017457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072669795 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090289897 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065595472 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088422306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069426084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068991582 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067471729 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065961594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067011255 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069226525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067445107 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090197314 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075202257 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070127099 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0896207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068391278 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088105877 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067838563 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061854505 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087816036 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069263239 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091764615 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069621718 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066647672 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09763484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065196172 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086704225 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070931239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065536547 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091696176 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06236073 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087845509 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068271145 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067604077 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081815991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066000792 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064593353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089857293 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065710367 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08174246 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078531185 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095042083 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070840115 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0656791 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086386639 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063099439 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062001335 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086784883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068642493 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088480216 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077538909 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065622818 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086831735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062942383 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086314641 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070894228 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069462 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083980713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063459563 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064859156 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091072327 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073281961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085954851 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066818545 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069791389 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090171139 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065139254 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069274745 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063020695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069013991 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101912569 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067797438 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088249552 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073511444 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0945607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068393831 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061597351 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087237557 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070227285 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086596836 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068886406 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067224778 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081300885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068550171 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088565992 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06559438 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088569595 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06824431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074913349 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088332105 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068409497 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090499775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070754558 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076032646 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068556339 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073397519 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092567961 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070740712 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08566831 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068638501 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065494455 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086041614 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06886429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067604035 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093266311 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075090781 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086915414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077205026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097004415 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0696013 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083533429 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067898792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067071168 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082783269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069020846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065311786 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085922996 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065571432 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065258741 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090281841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07202911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087971603 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069064871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067031247 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082666424 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069926318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088747319 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069694172 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063704858 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087282996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06819752 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071056094 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070613881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064213288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091042874 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069090925 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067145915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08357889 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074293563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085915092 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070672794 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066258248 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088138965 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068097926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089689753 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073380071 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068173218 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09006628 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070826915 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089115725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065726327 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064512883 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092585592 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065982044 seconds)
  done (took 46.632937233 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100132615 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084043703 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063610092 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061787767 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096472628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063674282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083262724 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064526922 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062822367 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064549533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061277972 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084344216 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072054528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099430188 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0748422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088591228 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062158935 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08383738 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063211112 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063486556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071491926 seconds)
  done (took 2.552475397 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076090321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069864597 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071556453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099430384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069128168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092712537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073978766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092562398 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077569869 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088260649 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077102673 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092396634 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067497163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088821225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067647692 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091970445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077017147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089590424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070722306 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094257442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071407888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094886408 seconds)
  done (took 2.77631262 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069359686 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066382035 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088301825 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063141372 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066167087 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08212171 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.079721188 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064038532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06921531 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064165151 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088513296 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066314554 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067983214 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08302751 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067100801 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064015205 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130067092 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091093346 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066923545 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087431574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063150362 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068222518 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083143198 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063688493 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065223573 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091318899 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067689299 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084856988 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067240179 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065983058 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086586565 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064928458 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067456147 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087796651 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065987297 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065208206 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087880883 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067124815 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082099644 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065562176 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067177697 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083515327 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067432101 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067408391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08593644 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064290579 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087701948 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068011688 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062149011 seconds)
  done (took 4.62370445 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082326107 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131333339 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067793343 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087597931 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105126492 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073715238 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093026976 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111240747 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065187497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065160721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104540807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104984887 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067833458 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092548417 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07398549 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085964081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069495928 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064698702 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092502138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065951566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092804622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073790846 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103236269 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100616885 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071641738 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086118214 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067204636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090663849 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081927432 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092171277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072262359 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092924315 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082654759 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092718373 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066054712 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089190164 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083667849 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08752753 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06938766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084379063 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069963059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090629577 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074583981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103888112 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068109941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091675805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067870003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064120675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101056979 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068655257 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095881203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103041233 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070805111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087371116 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071865048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101730002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067110776 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085112728 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071318096 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099708949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064404842 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09029295 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082317376 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088593011 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074697573 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102550721 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072038024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091568001 seconds)
  done (took 6.818444894 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077174125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09394796 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082799548 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103435871 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072777764 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0951747 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09262544 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07462216 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093071154 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079295811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094082304 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115926539 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070214978 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096786928 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07504287 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093911334 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074632308 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094189225 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074526496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093852454 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074085535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079569266 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071829487 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078722829 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125595178 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069505891 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09482722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073482943 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103576482 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093651952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081599951 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093620771 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074671248 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102627293 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080579253 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071939871 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064950368 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09708465 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072936002 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095575643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068149363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103078205 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093812576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069502058 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093898013 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074344013 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081189829 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079255129 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100164089 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100265581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074182264 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102576423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073219353 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094880096 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102008322 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108539256 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103446926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102748171 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074345536 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102642842 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103054713 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088845441 seconds)
  done (took 6.432563228 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085034205 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096846959 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078522025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083947217 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066143959 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092273715 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065311553 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064743853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097334789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075194568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099693168 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090628431 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075534684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099389401 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070830178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095382049 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071274569 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092250619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07470126 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093149815 seconds)
  done (took 2.663750872 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076574085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082919915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090159957 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07253736 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091368164 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072972062 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090664275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070265875 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087105761 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071337362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077005089 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098548019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067617599 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094666804 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096504934 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074567194 seconds)
  done (took 2.311503221 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077349764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093985693 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081357063 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087706175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066303293 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063661837 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088394689 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063647957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0631628 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100900079 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066434193 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090835337 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067199589 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08650418 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065376617 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070178438 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084716044 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065140929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087309373 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08094207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098621291 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066829689 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067490496 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088173371 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067101148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094080988 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066809984 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086326487 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065556669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066354953 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089891792 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070239673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086043762 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066202158 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065611095 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085761246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066685632 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088190658 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070573519 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087258317 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066690785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066892823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087648695 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068457209 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083212603 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068508617 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062735448 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090311999 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064837475 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088018502 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068011606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068950035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089060788 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07401625 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091111123 seconds)
  done (took 5.232505162 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081359606 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069650422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084571807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065428957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069555466 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067731502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069116734 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093258381 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069645635 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085251788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07014537 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070206434 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089883513 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070745102 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089301058 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071990927 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062397754 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090066875 seconds)
  done (took 2.368780354 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073462567 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066671019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09577308 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068146084 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066133659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091351668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063488295 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086685274 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067024834 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066493482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087985979 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069176983 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085631766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071142777 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067111219 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088478294 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069896443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065067962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08908077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063461437 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089945076 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067207941 seconds)
  done (took 2.658831559 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074456082 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092804999 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161248858 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105984933 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083644083 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078871252 seconds)
  done (took 1.601114178 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093244673 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102167527 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068948359 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088955531 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097741262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068134977 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09176401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069481521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099232912 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099296495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069463759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099128361 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078282264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099783315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094716211 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076498276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089366409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070595759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067151741 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108246289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089831715 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078260006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090474976 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068782896 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090306566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077382363 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100228928 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077665161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067125818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099671067 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075586503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090376973 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07822295 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099567609 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070568674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0997769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069244223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107858306 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094496585 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07901097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091611284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0761072 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098836294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074746371 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099793467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068550339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096112975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067866425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091654193 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109561136 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076031031 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098367421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074570666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100473165 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098628439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088509783 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099837406 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097946479 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075914171 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099208068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077301611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096454302 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09780134 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078411748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09616562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079987021 seconds)
  done (took 6.75433553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084732818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108652031 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070333527 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076016528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074635279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093582272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069362336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091838815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06813533 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090197389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13058175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071001745 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09847951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077727675 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091590815 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068826603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090902097 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076902822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09088721 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108532932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069565967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097744952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077017277 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098898004 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098770253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075011785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089893776 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070199574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090136072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070569126 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095503307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069889465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099718962 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068027581 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074997708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067076524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093297958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073645508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091516443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073799396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099452512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107726967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068908341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090333369 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077557797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068104123 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067805948 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093516803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068607304 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090214063 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078448553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099946688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097562202 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079262198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090499871 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070245879 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08966756 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070331153 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089591185 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076210139 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09838088 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069237318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110746582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068629707 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068053739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100486451 seconds)
  done (took 6.578656123 seconds)
done (took 132.174367149 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202472851 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188191065 seconds)
  done (took 1.393630283 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070094251 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096406684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100746749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13007448 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089730983 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101335951 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099295259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100941791 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067212207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088392338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068824023 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068587372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153766696 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068260731 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066523654 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090899956 seconds)
  done (took 2.471591301 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099086718 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196533069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099753008 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088973214 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09890711 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096899795 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065752339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097658618 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073037489 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065762068 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09647207 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072433202 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087856916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07275778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093570524 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075797976 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065499343 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09630854 seconds)
  done (took 2.655987762 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102750898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145825009 seconds)
  done (took 1.261234169 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.185974305 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140017645 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209166689 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.42141324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.209272632 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.28428847 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181532742 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178716344 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160368429 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17659043 seconds)
  done (took 3.152038872 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099938563 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172463772 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306857512 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117693265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.096483594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092616567 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115900729 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.105158212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100107714 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081097313 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101044561 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078115565 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119654429 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076344353 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097517587 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077985301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122791568 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074094116 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098546909 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076855865 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120068 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067928292 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096357441 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075449195 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076194438 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098158858 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067081605 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088842696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076006974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096377968 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079602333 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114435964 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076158837 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129381195 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093614702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132412671 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077639384 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095580862 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075474338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094663905 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078132312 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099096044 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073841126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099076079 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067233903 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077155739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089064688 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067582797 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101340567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068500446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101474495 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079327394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131917042 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089851665 seconds)
  done (took 6.278193573 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.72148978 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.129814183 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070723236 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.132593772 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118461527 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074795991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.740567243 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11294434 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202642488 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094270562 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109931069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072186109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103216511 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085121566 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132630107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102857969 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116910315 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07177624 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125270834 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122090991 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07000588 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115968665 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091706135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401492782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067714572 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092972019 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069100151 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070710436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155914491 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081788264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070005541 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167585693 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087932402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.147827983 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090394192 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069810231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068838934 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.104027209 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204705468 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184128281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153486738 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068823359 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069073545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092219202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090374207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089673854 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13588816 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082207428 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142404494 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092864916 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071557817 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089669525 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070864365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080853522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076437556 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104731516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.253973651 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089883566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070388043 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071771444 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227588686 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081187142 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102770445 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093426798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.178352209 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069844042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.723011784 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088078689 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068841852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096247035 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06879352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091869134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071283959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142215605 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.379536611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071797961 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070543732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091042033 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17614637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078520234 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090789942 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137587524 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068008777 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09085603 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071191521 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069944555 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163448999 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082991438 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070183914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09129077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070670403 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06817909 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067066042 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188021268 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103633021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081626854 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185400925 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090704374 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137602331 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081054718 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092388497 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082004132 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089802595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072505125 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069968172 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102230298 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119046644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082289097 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092891239 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06996853 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122348993 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082144904 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090972549 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080434876 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422764325 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103757215 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068158587 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103763879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068470552 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135568315 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092682185 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.207667533 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069294189 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102364977 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069436429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090057163 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06972662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136021422 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091701649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070129484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068966166 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092610217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08101721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181415236 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071492613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183918482 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157408309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091513828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143966706 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070006341 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141294414 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090503079 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071207914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070648836 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.71449629 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069859458 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068753775 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094268056 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162991214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070018945 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102265576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079993554 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067010446 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765371266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081410297 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101043636 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080278585 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093358296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06973537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090425261 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071269907 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135778173 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192568055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071783233 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068210016 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101557038 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135995278 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067906331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101235683 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07845443 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102123096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070109405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092946173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0813826 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117968644 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.104659147 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.161228137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555515247 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069548301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101011428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170457424 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068882545 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10908587 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068821332 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105399477 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13734412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099264886 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256453402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138347257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.163132745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081191052 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106221684 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067214337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090787533 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081797104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091247291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071787995 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100919583 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071599567 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070288936 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108015784 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068674121 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200278504 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090760739 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080684495 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090773725 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071652259 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10652082 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070327216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069752329 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10373988 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07039923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101633746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.809397447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100816403 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069141208 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070431579 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186114065 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140850936 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068163475 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091559521 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070618803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.13419423 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182153138 seconds)
  done (took 31.02553302 seconds)
done (took 49.247094489 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260874475 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17893498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25234386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118301199 seconds)
  done (took 1.916985749 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147435869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102289407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120177257 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065705422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126175916 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08808658 seconds)
  done (took 1.691789128 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.397419346 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.239315151 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234050883 seconds)
  done (took 1.90732701 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221136359 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236736009 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417051494 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304903839 seconds)
  done (took 2.328144196 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169814217 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114658419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068060843 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107080055 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161016396 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.219099066 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127249507 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17634221 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078525677 seconds)
  done (took 2.308510357 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195899003 seconds)
done (took 11.38136048 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.192113525 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.170401078 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190913923 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132429089 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.191228167 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 0.172709975 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.146412634 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071769562 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096357413 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.206513442 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103448502 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07779238 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.157026804 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.199047344 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074223133 seconds)
    (16/309) benchmarking ("sort", Int8, false)...
    done (took 0.175161137 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210503075 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11617334 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076370116 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073821132 seconds)
    (21/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11070063 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139792097 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.219741595 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.183254902 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193039724 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.174315381 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.224613615 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050906589 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.196380647 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.176839863 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.1696242 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073886979 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215896065 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073915435 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200489953 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.153363325 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10919603 seconds)
    (38/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125611808 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091372185 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098686844 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.181718083 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07810486 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062781064 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116593016 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123634134 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14160909 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129092934 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.211049251 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053284324 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073766124 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.17554263 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.183236291 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092507839 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192771787 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08797081 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20858808 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133824841 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068411807 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066412521 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161861619 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130586713 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079711335 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07576133 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.223867922 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140056434 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10171001 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.138454901 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099640545 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112023833 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105479818 seconds)
    (71/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067015262 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11506177 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074018618 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101990192 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072833863 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065020665 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.135848694 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.065713543 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118805922 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073769036 seconds)
    (81/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099519075 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0669056 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 0.124619145 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079985212 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07105531 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.163361102 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205139623 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097782201 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097396374 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133376737 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167405532 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053378448 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072775829 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092045979 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0706406 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052492879 seconds)
    (97/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096109594 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063905959 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0671957 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094201941 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171077914 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.076059038 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091496841 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099707997 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073783294 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171693458 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170460311 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196175315 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088891647 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101183416 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073113006 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075902708 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067555879 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165286863 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094026111 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07252834 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.104367383 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099987688 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088491595 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099654338 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076480507 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146329993 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093849831 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071615329 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052025712 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163438856 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.296140863 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128275227 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.135593254 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118477948 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07405867 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091280325 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073780038 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073009603 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096116991 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077554731 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118159254 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07384417 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202223952 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065923679 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160734137 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122453825 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160286373 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063149585 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09196998 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06640455 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114443734 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074015164 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09948763 seconds)
    (150/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.08555188 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135386552 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144997469 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080743112 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091720872 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073735117 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114845531 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068593557 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072707778 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136741309 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13854887 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076379279 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076540892 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105383437 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075458679 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068404425 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122942882 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066554469 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098252762 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074885593 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068011425 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162589491 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071758325 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07493711 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069479879 seconds)
    (175/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05304387 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096054803 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077446841 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052797217 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115107076 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05150378 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089868827 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068495133 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053686558 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107133006 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07050234 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07570108 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072851105 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.16842106 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097330529 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067156669 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101075077 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07581454 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065905403 seconds)
    (194/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076684687 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066478064 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051454475 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094995396 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053517062 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087521911 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192633739 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052365055 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090319962 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194557273 seconds)
    (204/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173689202 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172817516 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051699424 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051397686 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09261146 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076317705 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100276051 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074597816 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090034572 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114295418 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073820006 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091627425 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062367507 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067897811 seconds)
    (218/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152099066 seconds)
    (219/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137826641 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077846702 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072568917 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089555981 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053804984 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.138060299 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092070061 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051584935 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064901815 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075557862 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07472317 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095648675 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053166002 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075935659 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052521363 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085821156 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052437718 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066757599 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06613546 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064710488 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060935624 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16658443 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054182511 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151433752 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071636676 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097713399 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05201192 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069339508 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051349912 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091877927 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073517926 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117714114 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065615074 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050837933 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112352926 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062887415 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07119929 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071743162 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066673518 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1221531 seconds)
    (259/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073334585 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051498213 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100452528 seconds)
    (262/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079243327 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053261795 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091807954 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051746739 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.12882875 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053751595 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061944266 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065905558 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089933321 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067292979 seconds)
    (272/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106926567 seconds)
    (273/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088955647 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066030735 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116243521 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073674844 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051526347 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05197266 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064292878 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090767248 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053234786 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065593157 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052249331 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172668076 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079032815 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099785407 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052692674 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065809123 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079660392 seconds)
    (290/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053348425 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051962085 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093046999 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072772775 seconds)
    (294/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212171871 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132955 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122123006 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073873365 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077801989 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052795987 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073017493 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077196182 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053885132 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051651005 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07108164 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171621237 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067750359 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118317138 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06630398 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138573805 seconds)
  done (took 33.159892608 seconds)
done (took 34.20446872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082839136 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115387883 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076196086 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092390707 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106535886 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076779625 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098681969 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078894941 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105385286 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08317138 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104915647 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055911017 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074249703 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098795044 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075291524 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115733816 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079258935 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096688476 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075215692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064843958 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07271875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064856931 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066613322 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.08210875 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078680921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07133025 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09747832 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0740154 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090056205 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067209406 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0690408 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098406567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066509869 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077547051 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097944186 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073913753 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098751618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078037078 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067823695 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091353261 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074794869 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066030056 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09724983 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074678427 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071866857 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097032822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073345955 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103417339 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092394373 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092350449 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076095244 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076569855 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10179034 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073799619 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093609861 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074582995 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071074484 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116725884 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074409927 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092922469 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075486008 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074573336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095877809 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073772323 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096730517 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077705376 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075489423 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095725988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07570767 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071103025 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09011762 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074183838 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092687647 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068232181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076392973 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10169872 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066106733 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072208427 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097608065 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07323794 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065122641 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093313331 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068641112 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072247323 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093703705 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055827065 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070117028 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097372425 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066522673 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097441379 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074508528 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072549235 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092473586 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077517447 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065707229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095649881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067193667 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06641011 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093073861 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071346292 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065420587 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092907585 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075139121 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066995588 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096937953 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08042605 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089944647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073367966 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065203993 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090706927 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081081872 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099422778 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067657663 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068322902 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064454315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072440273 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064446258 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094085009 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066411209 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06576352 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09716685 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067480084 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068113017 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098392072 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079211828 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089603651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071386725 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068265898 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089726978 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073258433 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066499557 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090645756 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06894249 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061958195 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093061132 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067537402 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073294249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093347878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074017003 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067468851 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099238591 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070769723 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095499072 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07278735 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065204305 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082608864 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070232849 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068066043 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067471745 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064979746 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066878415 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092267235 seconds)
done (took 13.333418327 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068232688 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16990612 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124082252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096883167 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111421063 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067736273 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077007674 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128358154 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092001615 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104621171 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111919763 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086455091 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.139973702 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065135863 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.091569852 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071516782 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06726164 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113457442 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101270867 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085507885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138831428 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066122936 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122615551 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090079347 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114120279 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.118278405 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068136073 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070838398 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093790331 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102174113 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111881331 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070422509 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066064606 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125011118 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118403676 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086292831 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090579419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085041712 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065671317 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090825567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.089271081 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124582755 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07994559 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080532003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098499391 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070773247 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068130096 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109977536 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089607026 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105304089 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11134233 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107179108 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.094275906 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082488457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.090585521 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.0890042 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106478325 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070023492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066605734 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094046662 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066608785 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069073042 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112850654 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115177074 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071065439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105692718 seconds)
  done (took 7.332808361 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084341665 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090092423 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109156019 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084308494 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.092225287 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067503461 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066449844 seconds)
  done (took 1.69989206 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069258296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088554858 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114306319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090851852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110405896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08778309 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101733608 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068435834 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107489756 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069615105 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088845899 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12841522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06908234 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099495253 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092735758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091418929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093157971 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06673451 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095811589 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091570312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093749973 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087186906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068831227 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093179175 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081671527 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092637714 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115957783 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070852598 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067798478 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069659074 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093505021 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108247343 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106615442 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074853817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06642414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081160645 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080359001 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094090865 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084235997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097959732 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08268597 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067795362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094084096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066800479 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071539822 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104020497 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069561171 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092444483 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071762909 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087045812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093481006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082022215 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067349685 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097116749 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069309696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09748039 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078356589 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068590871 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112260305 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069759663 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109665513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085167311 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10606045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086027051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06990307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106985419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081603193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094157816 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070033427 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071292437 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109083669 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066624666 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068500884 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104284632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069394575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115910664 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091172268 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09334077 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078671067 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067632655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093608281 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069056686 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114034634 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073105174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068086889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096435793 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071667516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06532301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091899375 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071675399 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065867901 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094737109 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070899013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068169342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096205931 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084684954 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093244232 seconds)
  done (took 9.447921647 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071223091 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069195995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094535345 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06934515 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068958142 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093793636 seconds)
  done (took 1.582196959 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096357338 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093871631 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082439362 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072692128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.13120352 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081609745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10893565 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103177357 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085911964 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079248722 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108171954 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083251326 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114162585 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07327896 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107907408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073435351 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107432914 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077792605 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.104930494 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07504636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113471177 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075015401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074036223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109050651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071506527 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099141341 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077840332 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105429252 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081139951 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105372032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074402927 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071111408 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096824975 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079168309 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108901456 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070621149 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098478084 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072633634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102264085 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072412521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106802561 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075371807 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07650388 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098226869 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080355722 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097124463 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072834028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102035789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083060593 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096081182 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074033951 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072822366 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097114529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072797245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095949968 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080999863 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096251558 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083923294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072777257 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098162648 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070355461 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096789035 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08057902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096295917 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081076122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096917127 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072694761 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074284061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100069024 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074073672 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097613541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071425409 seconds)
  done (took 7.484379571 seconds)
done (took 28.645708086 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675749602 seconds)
  done (took 1.789364344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.778336232 seconds)
  done (took 1.894519484 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.205882622 seconds)
  done (took 17.33423625 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616307025 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.805587852 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.851242365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157367318 seconds)
  done (took 3.548999041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.921125886 seconds)
  done (took 2.061494191 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240257728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226614777 seconds)
  done (took 1.594893014 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785399237 seconds)
  done (took 1.916783469 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.252936663 seconds)
  done (took 2.382162827 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295666266 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181482357 seconds)
  done (took 1.610540148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.491065027 seconds)
  done (took 1.623515307 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.90378271 seconds)
  done (took 8.041070359 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20729396 seconds)
  done (took 1.355730726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266864895 seconds)
  done (took 1.408504339 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.408872218 seconds)
  done (took 4.544407369 seconds)
done (took 52.232332205 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079510214 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082146397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107235122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078896684 seconds)
  done (took 1.4797114 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079270006 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073091883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102978875 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073586032 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103164529 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074193176 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075492286 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076177827 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071956963 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101837952 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074141594 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072768781 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101962833 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074343359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096273372 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076042388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100621223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07515429 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075709079 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09861697 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071805083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074774364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101380018 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072927399 seconds)
  done (took 3.142215649 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07967076 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072746658 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101124196 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073311254 seconds)
  done (took 1.471916269 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079899573 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091670287 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116686948 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07686741 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119870849 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113004072 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070959284 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069208192 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096753037 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078200541 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068548305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123712418 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113328826 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078353629 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079796626 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092775498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069190002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112689324 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078572163 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077878942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072458838 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076487979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095439498 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090893043 seconds)
  done (took 3.289573765 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080046742 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102982884 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104438945 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087367323 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117567254 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065664957 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101758016 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089883681 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149781204 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065599969 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095680023 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067699157 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072731559 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091541123 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077816684 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130451758 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111040505 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069080782 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12300408 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065767857 seconds)
  done (took 3.01837987 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07500724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070353608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090790189 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070304023 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07806913 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098891552 seconds)
  done (took 1.635733146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069704134 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068092552 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092396611 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068312861 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071410892 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092332412 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066938038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068011185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066621953 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066644897 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065936479 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094809135 seconds)
  done (took 2.038770275 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.401123513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096871351 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069515565 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065327707 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069790688 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092940753 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082071999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068157845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118019923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068208927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066720758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095834816 seconds)
  done (took 2.444072732 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264240677 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079184667 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294983642 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134945032 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14570655 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144252431 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102854993 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143486576 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173719224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131558519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225251256 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197246767 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135353031 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165518469 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115589313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098447134 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213974229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191392652 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102391591 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229160319 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173859716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152322585 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176021145 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129035035 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135286258 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15222611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072479602 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107357749 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201104413 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164979431 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175304739 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139252594 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122316636 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233322392 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228471719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171934608 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16182588 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111342795 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130935834 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164210071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257538574 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115946754 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195819901 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135558897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107835712 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168795767 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148511363 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147159555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134710559 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090328351 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20247968 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238851184 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168668911 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088029725 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139470549 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142600337 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144060187 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130738256 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24197955 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189537447 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154035901 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097948047 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099483799 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209410114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159015397 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137017769 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155528209 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12017227 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161109455 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152484042 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149711789 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171292971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158171193 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116501284 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146202427 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169289091 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15755351 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198357953 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151303777 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074880161 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155329587 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131087253 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081514823 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16736224 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075233722 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231895553 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125624072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.132910391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115835886 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137292663 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136943266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219712722 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175272559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131096011 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066277874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131726617 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148200799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14614895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116976699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136213672 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145561359 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079031709 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167567102 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10211777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152006373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075662556 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152727256 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15716973 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103814839 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152982239 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129083318 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101885679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161108359 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216681413 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116683802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084681701 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222258055 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152078944 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107004279 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201047868 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186694868 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126103849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132131078 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180344784 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239315197 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116503848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194900161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136838311 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110338681 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089663449 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152669132 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141327171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150487775 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082377354 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173958464 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200644113 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101771577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097243872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162340417 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106790128 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080760075 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132379752 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12897986 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122361266 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102064153 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134430332 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168968996 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156028271 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107726005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154287765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100559048 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231718191 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117236389 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12677016 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106309718 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070253607 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167125398 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188292784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107257779 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194130962 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15217679 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134268134 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146163057 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110204221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168690089 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080115962 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096603081 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174325755 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13780554 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137879894 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180638215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104256309 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156742326 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149325042 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164333497 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160338774 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157071325 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133974905 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115426671 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139512363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157725141 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073838628 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119591852 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081203632 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132618357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12476033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083491243 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199801959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154416109 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127365237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111501371 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095286588 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177095191 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105408995 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159413629 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146823695 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122533051 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183013325 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209272001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162475794 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100833712 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203722409 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071048835 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102290588 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091237534 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152587585 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112060447 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083993247 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173587227 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177562082 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159165011 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167130534 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140422205 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15019289 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183409786 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097672651 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116838325 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204906857 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150372567 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.130153703 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117778111 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099311611 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200848395 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137798979 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214078621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115660783 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180959011 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18614075 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127519 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081411962 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135572421 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165157373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134194251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203146758 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101761688 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116790214 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13916033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075921964 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130102602 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156954457 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149071014 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193485546 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142432499 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164147576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082393278 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146491025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148878016 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151670741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091384388 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149316378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160801063 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125282018 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148403121 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212830841 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080864276 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153211076 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237019773 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175444947 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112985566 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139620997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147538227 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158260509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149569002 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171570873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140513287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164176798 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138811547 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086018594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116689252 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098048288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103572771 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125081259 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138167195 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144098824 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123622445 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162728461 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132450566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111641969 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147354884 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125775123 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090247053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125685609 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234391331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149053557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232243374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10091746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203764329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196699137 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103179983 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080966533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106119962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170601321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084632243 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16158988 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.0971552 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137699345 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155186978 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17201198 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124694245 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069750162 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137840404 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164467811 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140993847 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126735953 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13447759 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195930005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12973588 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07992732 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143121785 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134438552 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130547408 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206461642 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.090651532 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098870633 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103935413 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081574461 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156338957 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212705096 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081155197 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154340995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150538608 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140954346 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158195562 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130799264 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100268159 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143139254 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207909717 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129975835 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089303012 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144981473 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187793948 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188387237 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134967404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124887544 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201349998 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181112238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.191168364 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11922942 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143287092 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143783888 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13630816 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17107567 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111910001 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197855943 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111047752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167243952 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133658657 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13667113 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16193336 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126993527 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090889847 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206402067 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146412543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083604592 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105996016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14944793 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151278405 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137142009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076397765 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169119327 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102245249 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163213063 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2286332 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083432974 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104259193 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124854316 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08160437 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138606201 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132644923 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114628779 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123739279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235582146 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11671819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181883593 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170856152 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143121282 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194572249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127532807 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637850335 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078266214 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186904537 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146969581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232457537 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12720996 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148111341 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138488463 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154846826 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175026577 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135549824 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202977236 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163296311 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146763101 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080361232 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101875064 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135253088 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118702528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133748728 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115053321 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14660118 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123022845 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145918409 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152915386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111024086 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096072396 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215135019 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147119004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175000675 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170971963 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114574745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14899863 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170403119 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109676068 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152920436 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212656152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108993476 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128847149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109483378 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103198686 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230132051 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073486542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221551175 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150150949 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138936835 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142255138 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145318678 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161492812 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137487701 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151834651 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123683696 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140450238 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141513124 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083846717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10608638 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133135043 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143693843 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099328657 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128658891 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124604963 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208861005 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072129365 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125679728 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132517753 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177649286 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235433131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088651469 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112182241 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150416719 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144401656 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144003831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152104015 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080389282 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111980512 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109677805 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.107292609 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137641633 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115082462 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134615608 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140650359 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224844428 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083682414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253083958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124483867 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10721168 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09759415 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080209441 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125149509 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126471228 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137629892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102115031 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229177174 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095669898 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088526885 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124000679 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07468578 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112095144 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158421137 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141461379 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149008832 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126471173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065214097 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138802748 seconds)
  done (took 70.068364316 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146447618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125103123 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.135990631 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191725036 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165681773 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256111207 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199960696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242320158 seconds)
  done (took 2.687249159 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071694623 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121942083 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101023705 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.110338109 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068276804 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095677854 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.251458722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07948015 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.098037021 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089415695 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108871855 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096278406 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.494209268 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066994069 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093830815 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065647517 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094382141 seconds)
  done (took 3.330400012 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434093665 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66547518 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.455235358 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074379254 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.107998493 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112528164 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.669940651 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170348331 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097292216 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.450329339 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722550571 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160031199 seconds)
  done (took 18.341591407 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076943945 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070082115 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111613954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084436049 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071729129 seconds)
  done (took 1.641156887 seconds)
done (took 115.728271654 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081463089 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.326045756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052926861 seconds)
  done (took 1.643767326 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084654026 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084270944 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114710099 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083541057 seconds)
  done (took 1.604730506 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076070662 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076026792 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112233988 seconds)
  done (took 1.499325327 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.289215922 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140863766 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116896449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084929233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078326754 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105507742 seconds)
  done (took 1.506204323 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074206488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074731236 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100942841 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076457863 seconds)
  done (took 1.559973047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077748017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052854018 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054826998 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083866151 seconds)
  done (took 1.509159224 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088129565 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079589108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107470824 seconds)
  done (took 1.50719843 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108010465 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113030436 seconds)
  done (took 1.456956497 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08337896 seconds)
  done (took 1.31736985 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100849078 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142575702 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157852939 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13944146 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167454675 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13745458 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086300519 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085013569 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107849302 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089031583 seconds)
  done (took 2.451409362 seconds)
done (took 17.918037239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080544736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392073544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362054169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090043465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.699261734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356301382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046191874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092011891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15071001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095926185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084786145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650443027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.9675866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322428667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987056434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.417573558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650576745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067777534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067176502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098056295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003585591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067620436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096202707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068584249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678113462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372853438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067933221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.444914688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069003287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096564587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357059151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068314125 seconds)
  done (took 16.299531543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071959516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145494065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075469643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083502776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099761792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070366215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098777189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07072753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153974064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068592974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112672887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068898557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072290514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097335361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088070103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067983276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068408927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068020537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098449868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069688549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086769028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096962596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069052444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096131359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069628589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08042239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097746409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069412044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067757701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099367914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071380052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096724713 seconds)
  done (took 3.997823943 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116230943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153499278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075198547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130676033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113434567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099485551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143373001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122713636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156092828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069180024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113215523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069809064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12829256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070370867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087258215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097205359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069383216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095350497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070267014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068584794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115755986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069237039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094576201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070558301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068937079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109837163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070080279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068112457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097177992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071063789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099835745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070375295 seconds)
  done (took 4.295401181 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074199242 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075229245 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111302001 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084283483 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069272255 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100720211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073826388 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09711241 seconds)
  done (took 1.933862944 seconds)
done (took 27.766476228 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080567113 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069570753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100968517 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081735902 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073156854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.107752732 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068186241 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103025839 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073911604 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073587215 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103172217 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068318799 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070792635 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096626865 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074941086 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068141934 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109351865 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071404519 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108020384 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080457761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097135226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075457504 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075416731 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106848288 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080986466 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106878489 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079209242 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072571744 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.098624794 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071128095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076276975 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113503296 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069090964 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108214684 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069036711 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068357386 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100213269 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068139541 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107206261 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078184979 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069541191 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105567245 seconds)
  done (took 4.819425973 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089620984 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090661417 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113744708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061564373 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06606861 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064077813 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087476749 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090262803 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061221992 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088082071 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084650977 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060356064 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062831063 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053446389 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.088639285 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05762012 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062514757 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084510841 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06037432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059502586 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057815094 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082814931 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061818161 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062483584 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085138323 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063303665 seconds)
  done (took 3.146993787 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076353927 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083746675 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117994455 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126601538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143514601 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076772973 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107961578 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087534888 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115455306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068508283 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071244228 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123380511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08928384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103428735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071243532 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084550974 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111683625 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069689347 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102082159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092568153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083629083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.107798609 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09254084 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109887794 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067925767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069763695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.101574436 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081229871 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.1009551 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078013519 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071640486 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10090792 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069906229 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108208173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072326028 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069368933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120145454 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077633895 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.107406937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069273638 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071982937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099239998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091164264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152527278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068180974 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102966815 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076894735 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077271894 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09720478 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087825595 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07857983 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097388348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07158219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.094494707 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07021026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081062691 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098080134 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072346612 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076854334 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10077912 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080931166 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099667755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085137448 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0674555 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104739257 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068471698 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068825805 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095994266 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093115386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097730431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109763063 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097437698 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07024004 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077219007 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104960263 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074599341 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067396673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113093025 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077909129 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100111816 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077315686 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071258159 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100020973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089762891 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097577247 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071188702 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069066438 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103005957 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072080996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06894966 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10986239 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068640352 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070906801 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083242158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066394585 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100581615 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074869682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072159615 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097545998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078746661 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102502839 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069603524 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076733283 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097553601 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071486399 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106557137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075294085 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067349101 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101867197 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074743715 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068217396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099120623 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070935876 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097922107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079718518 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074223283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102568654 seconds)
  done (took 11.540462492 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187934546 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154611429 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100846669 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.175219291 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07774078 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079032365 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177574907 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126114839 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068621503 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068477572 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099956536 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115281071 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137153478 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.152090672 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079420411 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099701665 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084614221 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.147143328 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180066351 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144298831 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115220462 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077484956 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101264256 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070558603 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074437988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112573353 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091427708 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107904333 seconds)
  done (took 4.463882082 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084306496 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129471236 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075724488 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089148254 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121608513 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067859618 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101222081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071398752 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080159424 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.110173494 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068200403 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103040312 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075333092 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102647562 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070737512 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07524926 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10566565 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070094986 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071481028 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102802453 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077649556 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.110459541 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073214514 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067677714 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105324215 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067673312 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.094195411 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085900397 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097846095 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091239515 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065804243 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074236154 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081011366 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101180317 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069416734 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067989525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09875257 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069587802 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069509102 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09763352 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068001142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058592997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097530579 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080853501 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10357239 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058128746 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073914491 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103807436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074079047 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065267748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101123932 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071426668 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070895519 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105024916 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073234466 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10166189 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07121332 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067049623 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105271426 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069134931 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065509326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096819491 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07402778 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066015708 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106209399 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072981485 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066149154 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067124337 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069139672 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106320156 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069773151 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071657223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.097145102 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071518891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072167575 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100934486 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069729582 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066266626 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09821492 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069051338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055807976 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098506981 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054896366 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071693121 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09664859 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06741317 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095544433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075771944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081543704 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069751774 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073375709 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100402328 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069291969 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071960563 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.091930266 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072812101 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084096694 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113920353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068233283 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.096431189 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083912146 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.101131299 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069163768 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057729266 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104489604 seconds)
  done (took 9.93402669 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096710133 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088424887 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100788594 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084825102 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12071222 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089905689 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075264706 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107901036 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070969542 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111369789 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075770965 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076102077 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099386682 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078654685 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093943231 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10763453 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070644032 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1070555 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074097826 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101914295 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114003784 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083017589 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.105182166 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069879291 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07596146 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079537131 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08928366 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.1123794 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.0803988 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076144275 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111606612 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091685693 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.104322252 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073821557 seconds)
  done (took 4.366397422 seconds)
done (took 39.513963876 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.332298197 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.560906468 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.324757565 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.356686912 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.326565055 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.351000725 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.339537165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.324331966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.82494273 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.324401815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.555998358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.077107241 seconds)
done (took 60.969332944 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.42823628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.469325687 seconds)
    (2/2) benchmarking "String"...
    done (took 1.59997179 seconds)
  done (took 4.355039215 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.728835346 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.251127035 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.590510658 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.323674237 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.324968289 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.634742293 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.090970683 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257216087 seconds)
  done (took 28.743095874 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.335985063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.714786594 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.95227325 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.949565602 seconds)
  done (took 19.223564868 seconds)
done (took 62.746174611 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.342045575 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.373476863 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.335731116 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.309873417 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.461472503 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.371601781 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.51130674 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.370089013 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.325078351 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.314358307 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.337423873 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.334155651 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.330974908 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.450096141 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.337581889 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.328151081 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.346517568 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.956302101 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.742399461 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.329549456 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.332189541 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.348538107 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.332190158 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.332649757 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.364137673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.325859746 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.325531131 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.332126084 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.850547709 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.331513537 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.332785493 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.636916533 seconds)
  done (took 194.323767973 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.3270226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.407535063 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.514169372 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.385749867 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.961109908 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.526101004 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.482579565 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.01115524 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.343515313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.336950635 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.629338506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.32520448 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.691734704 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.348289099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.337447058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.395895191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.650718896 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.671897087 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.34644483 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.606918798 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.331558905 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.622309204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.559969641 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.560165163 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.341534594 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.358390194 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.346744551 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.357242507 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.51898651 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.582957627 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.343963468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.347343122 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944693514 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.190366657 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.354549901 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.328392197 seconds)
  done (took 155.660983329 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.88874024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.328153064 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.328504581 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328674963 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.360606048 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.328255035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.905416217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906024394 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.875613828 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.623966185 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.393425444 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556910138 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.328040054 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.422100317 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.341289276 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.329922417 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342773271 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.354191134 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.330164659 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.328771889 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902917649 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.344359652 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.344237032 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.338936418 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.330160318 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361657244 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.723244478 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.329802774 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328672436 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361269224 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.652389559 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.377469515 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328962366 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.662769036 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.194437016 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438962522 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.331703174 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361443318 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.330014149 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.601500359 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.329837985 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.330491848 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.331348282 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907354034 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.330490341 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.905610325 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.33382737 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.241447103 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.33073555 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.330821663 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.959217366 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.824609915 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.331366529 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.331418573 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.330531741 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.334616448 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.330439468 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.332348129 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.363512053 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.032897865 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.433601315 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.332796359 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.333396402 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364306345 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.333538443 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.72510706 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.33580479 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.650038823 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.388598076 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.446004414 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908469376 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.335847773 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427115925 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452073643 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.333139747 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.332514315 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.330286695 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.332178848 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.440066709 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.331793906 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.753870461 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339551111 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.333989114 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.394705521 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.427806029 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.332102275 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.674084755 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.335424778 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.331671734 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.056354482 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425663949 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.331483258 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.332639641 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.333090952 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.753701227 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.913327991 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.561515578 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.336599371 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.908349613 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.339037925 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.332780999 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.765654392 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.885183805 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94153139 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.333647715 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441843558 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.33759223 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.333772604 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.335122155 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.333662108 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.364043384 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.33364865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.394580511 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.334661369 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.73071927 seconds)
  done (took 361.159415073 seconds)
done (took 714.302433944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.052239181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.047610246 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.157217211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.037834005 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.022701631 seconds)
  done (took 11.59583833 seconds)
done (took 12.873991973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535677233 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538546851 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401905576 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539089608 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367674105 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558617895 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517402395 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.357911217 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443706283 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.42551365 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445959075 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.394593662 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.368668782 seconds)
  done (took 20.174164269 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.671488326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.664477371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401827481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.666657905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378333463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.677387859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.540738217 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.553848115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.541556292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.352315631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349037941 seconds)
  done (took 18.079158184 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.675402385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.670400241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40463197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.676066805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378422189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.681940524 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.548101028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.557226388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.543118659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351429467 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347815843 seconds)
  done (took 18.115514157 seconds)
done (took 57.647497673 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.345443589 seconds)
  done (took 2.625565304 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.381523427 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.549120152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.367530233 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.353910252 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.345937958 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.348396089 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.352652333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.34700735 seconds)
  done (took 12.328255519 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.344023485 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.341634319 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.343285991 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.344520495 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.345227473 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.345678778 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.342080059 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.344434976 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.343157676 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.344184627 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.34181526 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.344538731 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.342543322 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.345006775 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.342190358 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.34101806 seconds)
  done (took 22.778501963 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.34528044 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.342922379 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.341697769 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.342810813 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.341866766 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.343836958 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344708857 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.343552566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.341943909 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.343973684 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.344980064 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.344104336 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.344988633 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.342583384 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.342974902 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342905118 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.343796969 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.343006678 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.34816874 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.343354605 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.344519115 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.343242493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.344829612 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.343697444 seconds)
  done (took 33.535031629 seconds)
done (took 72.547564795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.514071894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.091284386 seconds)
  done (took 9.887972212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.346453095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.346233998 seconds)
  done (took 3.97726681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.346045865 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.347386022 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.346305486 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.34502568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.346689406 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.347852245 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.348102627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.347015344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.346149834 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.348019117 seconds)
  done (took 14.750672352 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.346255977 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.348495956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.345306777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.346261281 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.348067764 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.345227202 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.349458873 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.346765132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.347803269 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.345649782 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.346959615 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.345090493 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.348424161 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.344978459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.348247166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.346465011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.34628979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.345208695 seconds)
  done (took 25.525536453 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.348743081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.348445489 seconds)
  done (took 3.983044338 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345091925 seconds)
    (2/7) benchmarking "second"...
    done (took 1.345950038 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345979653 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34606257 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.345948688 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.346713036 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.344711892 seconds)
  done (took 10.706790437 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.350229159 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.529803935 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.622659689 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.046175266 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.352095642 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.353425017 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.313330441 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.351681505 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.35403843 seconds)
  done (took 15.559282234 seconds)
done (took 85.674146363 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.367341985 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.34463497 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.318581614 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.353186033 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.377660911 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.684250328 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.36173621 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.605612422 seconds)
done (took 39.697317554 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.359519571 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.071730096 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.089638652 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.342122749 seconds)
  done (took 11.78956124 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.334905833 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.315690281 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.346049236 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.415835131 seconds)
  done (took 18.700858023 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.004277658 seconds)
    (2/2) benchmarking "read"...
    done (took 1.681631497 seconds)
  done (took 4.973210969 seconds)
done (took 43.108203291 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.34888344 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350628801 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.351494982 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.34690264 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.35019181 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.347466949 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.348286563 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.347929327 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.351143568 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.349427652 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.348349094 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.351814224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.353067009 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351787643 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347727763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348750629 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351717355 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.348230378 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346966338 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347793903 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349919791 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.348798129 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.348907831 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.351289721 seconds)
  done (took 33.67243019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.352215868 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.350707128 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.351517171 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.351664844 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.349434464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.352085213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.351309022 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.349474481 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.351702471 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.350962393 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347618986 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.348904859 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350941501 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.34885461 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352482895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.34953401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.352482565 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349802137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352115024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.347831645 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.352251576 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34966186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.349817991 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352555495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.349631154 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349231881 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.352882822 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.351576475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352396696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.348094379 seconds)
  done (took 41.808774546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.35798904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.360487577 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.352334442 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.352636248 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.353548455 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.35338817 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.352681908 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.354218736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.351568327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.352555277 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.353602701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.353565794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.352480386 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.352650129 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.35326567 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.352726672 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.35400945 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.353509313 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.35416485 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.353681358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.354152973 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.35251172 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.353768479 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.353521159 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.355026006 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.353213503 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.354592889 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.354717355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.353926417 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.354186393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.353073675 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.353163714 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.353518947 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.355204364 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.354982229 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.355356022 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.358593843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.362674038 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.353086048 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.354330001 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.355216459 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.3547852 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.354697897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.353464484 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.354663526 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.35435169 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.354332245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.35447298 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355552998 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.355474114 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.354419526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.354898307 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.356287364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.356123127 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.355596807 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.353896339 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.355065559 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.354059804 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.354549283 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.355593977 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.35662153 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.355925078 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.355341481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.354441097 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.356638168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.355111574 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.356161705 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.35674302 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.354964583 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.356499364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.357424413 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.355852236 seconds)
  done (took 98.830680492 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.355198605 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353829495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354592769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.352786887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355083964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357606259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.353587824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356183917 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353928197 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358261152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357182774 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352708682 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355162298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357502995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355164182 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354765941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357144916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35465943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.358024548 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357662923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35699156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354275057 seconds)
  done (took 31.115733128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357758783 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358298275 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.355368364 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.357357164 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.355196554 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358148894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.358642163 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35833422 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357873527 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355035176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355705341 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358234034 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.35523245 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354667294 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355048116 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35440236 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357341823 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.355985299 seconds)
  done (took 25.714026399 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.355140321 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.356272104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.358908177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354343465 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.356474291 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.359059458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355753965 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.359796522 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.358380136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.355850233 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.358250151 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357761948 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.359787517 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355914645 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359358265 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356409128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.359128105 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35549036 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358545132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356603135 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.35591522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.360118993 seconds)
  done (took 31.159126757 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358259877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357916331 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356824783 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.357495891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356777245 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.359542907 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.359522812 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.356788638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.359815173 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.361159784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357148464 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.360529331 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.357854692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.359057211 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35780407 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358188662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360460006 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358508814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361205535 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.358026406 seconds)
  done (took 28.470781078 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361905723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36209684 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361902026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362568072 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362741872 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.363043942 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36255661 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.363727181 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362913761 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.363512561 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364456272 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.363214024 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363211211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363768432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363833871 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36259605 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36375858 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.364196017 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363522595 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36403473 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364193934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364500842 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36466467 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363698175 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.363879365 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363426861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364058403 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363939141 seconds)
  done (took 39.474883685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363025002 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361172569 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.360309914 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.359762049 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.360066797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.358912142 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.359647305 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.359718396 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.362405512 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359311073 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.361844187 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.362745204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363632129 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.362700011 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363158345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.362922542 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36277273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.360948871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360534173 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359901921 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.364214436 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361555372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.363349877 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360023197 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360400087 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.36376927 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.361380294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361090326 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363217679 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359670206 seconds)
  done (took 42.144407705 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.382058145 seconds)
    (2/2) benchmarking "in"...
    done (took 1.381283547 seconds)
  done (took 4.063686668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361089677 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364281947 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.363255892 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362498531 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.36189249 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364120567 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365501191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361974943 seconds)
  done (took 12.205746769 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.365179425 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.364245209 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.363751702 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.365034387 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.366025256 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.366583293 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.376165085 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.383131561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.36598895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.365879455 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.371991092 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.373511162 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.370960391 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365920576 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.366918458 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367596023 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.367834391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.366750331 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.367099045 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.366170195 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366803381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.369917357 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369321321 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.363910294 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.367662764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.37991771 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.372833165 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.366752306 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36410654 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372350661 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.368721565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.363370001 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.368018459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.369212609 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.366731382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.368013447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378365777 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390090883 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.37526969 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367920265 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366014769 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.365595654 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.370711751 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.370890187 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368499667 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.368014844 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.367019561 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.364306154 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.36831462 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.370528002 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371604831 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368197266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.365511468 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374376383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.369586256 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375811875 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.388221119 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.371181256 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.373201748 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.380328853 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.382460407 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.376422605 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370622638 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.370125099 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378994122 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.391694516 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377048995 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.383077814 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.365198997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.367179288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.378699542 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385191688 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.379385084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.370643895 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371094493 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.367993146 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.369943121 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36672845 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378906354 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.3908087 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.371235107 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370603726 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379471919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392562315 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.368066456 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.37078739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.371194148 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.370001455 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.370151855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382038785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.389506054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.370001098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.369441316 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.370275587 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.371789325 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.370722234 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.368708359 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372276668 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.368063333 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.369669226 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373113239 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.37545539 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.38080884 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370634171 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371206431 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.378833503 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.370961345 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370366662 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.380956655 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.370524898 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370298887 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.372312054 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.380237358 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.368250551 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374929512 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.379593316 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.371112687 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.373380888 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.369891138 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.370724549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381944905 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.399440172 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.371073353 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.371385984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.377460412 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.384076291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371942254 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375023518 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.373239912 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.369645083 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369075373 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.375106611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.37227931 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.375434767 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373241298 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.373664107 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.369802327 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.373234718 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.372904254 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.373635203 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.376024777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.374721822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.374857419 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.376532543 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.374789504 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.374930863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.381719726 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.374626109 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.375733293 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.374757143 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.371465467 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375271651 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.376088456 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.374757321 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.376178766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373198118 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.373076445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.373011494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374007902 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.37474623 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374181025 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.374994701 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377773369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.375146588 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.380167347 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.37403404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371985841 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.374338373 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.374421877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.375434509 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.374025193 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.373377282 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.378783703 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.381799043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.374013751 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.375379371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.380126396 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375517865 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375560145 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.376176662 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.378409264 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.383217322 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.376866732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.383760633 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.376175506 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375636612 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.375511536 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.377713339 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.375473063 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.376175898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.378809219 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.382726101 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389849203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387334836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.377306902 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.380746018 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.377282109 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.380699371 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.382448643 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.377347157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.374786194 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377356624 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375351696 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375785433 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.379860833 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.377347782 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.375440562 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.376827406 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.376778951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.378854471 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376608229 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.37837785 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378324642 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.375016784 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377416484 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377358814 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.375685314 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373979366 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.376843149 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.376730663 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.377177597 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.378920821 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.387802853 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.37551313 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379089676 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379336575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.379326436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.376088812 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.377634246 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381709264 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.378384074 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386971545 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.396295952 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.378691537 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.387193322 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.395680389 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.378203031 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.382153002 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.378891555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.374691912 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.382301764 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.385645198 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.378534188 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.379342262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.378822003 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378467758 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377705047 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.387160165 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.375637246 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.379541045 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.37951308 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.382030901 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.374925843 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.383139551 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.380305191 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.381295902 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.382565867 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380007358 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.379379922 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382122412 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.379898151 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.379837585 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.380377058 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382155695 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.387397274 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.385940904 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.381499665 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.383309265 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.381422961 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.384355534 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.382068901 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.378744182 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.379533638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.395021239 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.389519741 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388075105 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.384044982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.381207155 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388035896 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.382650386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.386833959 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381255592 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382146455 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.380845607 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.381104215 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378868393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382603124 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.381105969 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382973556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.382259738 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.384580418 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.381888321 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.38216338 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.381234039 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.383438966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.38145871 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.382365035 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.382610028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.386379078 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384173307 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.383148266 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.382203189 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.391157306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400991949 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.385461732 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.382538466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.382853914 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.382443922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.384170322 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.382678958 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.386693028 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.390050063 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.385505771 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.391088676 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.383985144 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.394452636 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.384249481 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.386823156 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.391845256 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.378072305 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.382603693 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.384901363 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.383280412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391889509 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.40137789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.384196403 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.386399452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383141228 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.383582717 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.384057302 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.383237619 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383386847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.383262961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.393636635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.403683948 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.388102347 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.387374521 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.382628999 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.383655049 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.384054982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.382739947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390062738 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.384487013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.385182537 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.384730493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.385488586 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383730788 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.384696047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.383930441 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.380639944 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.38440102 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393377317 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.404671151 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38924458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384393435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.397197525 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386414796 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394356298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.404821578 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.385881473 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.385515489 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.385522483 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.388196493 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.385186235 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.386393828 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.386138851 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.38759413 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.388678972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.385880464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.390358873 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.386881321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.382919271 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.385601179 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396369009 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.412050922 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.388567438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389798536 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.383265884 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.388344563 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389711608 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.387000283 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.385401856 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.389774774 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398135206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393597773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.388556523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.386517564 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386825448 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387162051 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.385783257 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.386608918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.388127539 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386853739 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.388571779 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.386656038 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391672677 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.385376918 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.388593758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389155249 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.388322764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.400012634 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.388226268 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.38912047 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388631481 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.385271377 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.388012171 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.388593983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385871963 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389599867 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388749792 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.390578877 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393735119 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.395434695 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.391537884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.388106491 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.387920401 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.389538507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.390287099 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.389680786 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.386788155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389449919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.388661848 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.388905172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.391134658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.388272583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.387032998 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.389409465 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389350882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39173034 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.394641061 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389651998 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.384326406 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.387702713 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388835847 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.388877193 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.390012809 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.401239667 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39385976 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.401199893 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.397788543 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.395243259 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.390863403 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393603674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.398663387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.388955279 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.389954963 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.388036391 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.392734925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.390291726 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.394543587 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391792599 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.399483115 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.391563011 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.390781754 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400201748 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.413778108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389021832 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.391619265 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.395077149 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.391756452 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.388387207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.391860665 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.391123803 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400375746 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.410317312 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389816062 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391839515 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.3890934 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.393378044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395489685 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390790543 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.392012242 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.385862518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.390175859 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390472246 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390964172 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.388332151 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.391616612 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.391952693 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.394697524 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.399132403 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.389157445 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394084679 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.394622457 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.392514212 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391774959 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391110744 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.387829542 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.389171211 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.392165044 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392771666 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.393056615 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.395002073 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.392739564 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.393699176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392492628 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392241831 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.394563586 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.404175845 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399464436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.389940015 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.392448884 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.393881712 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.397278497 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393498671 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.393277997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.393966925 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.396070716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392468915 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394063753 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392537641 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.39430073 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412361117 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.414372096 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393966534 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.39412351 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399924173 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.39473843 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.390427355 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.3905105 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.397345337 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.398751312 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.40012932 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.393543572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.401347941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.413462522 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.395873525 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39798077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.398329641 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.402282271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.39799284 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395762269 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.393784972 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.399997741 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.41290263 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394949092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404841647 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.425894209 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.413623502 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.397305075 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.395458468 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.391176866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.396083643 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.396712258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.395267481 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.395372154 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39442481 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.395739789 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.396811527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402778428 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.397830399 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.39531056 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395249139 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.393671961 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.39908678 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.392458903 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.393348414 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395263425 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.397272295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.395515454 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.395768729 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.396768446 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410690589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.408311771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395556264 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.396407174 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.394585487 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.40033816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.39946204 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.408100934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.402406273 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.396733662 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.397846816 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.397660779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39712104 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.393104051 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39915682 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.397552367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.39781149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.394034021 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.412194152 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.407275478 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.402820359 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.398664752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397082746 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.397082609 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401278994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398223609 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39527751 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.400665652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.398167054 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403660368 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.397774792 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.39726259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.401371951 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.405346074 seconds)
  done (took 826.450324245 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394657692 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394972585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395051494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396064794 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394612784 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395076605 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395747817 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395250178 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.39596069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394436921 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.394785072 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395747214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.39640224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39631492 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396516177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.394594215 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395650513 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.39577041 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395880851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395426179 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396872557 seconds)
  done (took 30.635920906 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.397631876 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.395248884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396105448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398438323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395416268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.399351091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.395783325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399726149 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399965353 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396456396 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398883911 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398562295 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.395886867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.396704446 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396197427 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40019773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.399475818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396731149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397985225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.397722883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398859939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.397098996 seconds)
  done (took 32.083640302 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.399992814 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400713312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.399949968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.396276761 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.400822163 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.397889079 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.399399052 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.400601618 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.400781589 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.400394173 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.401639635 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.401821995 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.408129179 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.405167883 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.404223641 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.398990113 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.544946565 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.401911533 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.401789831 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.401456712 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.398247498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.409688845 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.39870716 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.398106009 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.400798655 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.400588497 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.40126361 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.402250334 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.403157523 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.402229297 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.406644329 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.401351794 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.401414906 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.405226663 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.402186422 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.403129285 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404484176 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.402639045 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.399441146 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.402308716 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.412077816 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.422111102 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.402883135 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.409719786 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.401589264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.401963761 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.406374102 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.408275379 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.399062284 seconds)
  done (took 70.212470355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.401457832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.402484044 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.3992443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401446738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401928234 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401662788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401042354 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.400898768 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.399983391 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398863146 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.402955398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.399023063 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399508433 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.401326781 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.402709275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399775709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.400399489 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39719928 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.399536619 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399151384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.399120444 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.403062143 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.403268493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.400479533 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402908443 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400092947 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.40041462 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.402658525 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.40026762 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.400943697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.403336466 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403425061 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.403957334 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400857721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400523787 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.402191499 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.40276232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.400242469 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.403294945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400239407 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.402991016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402640842 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.404334537 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.403886454 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.401036955 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.401271951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.402112297 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.401834946 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.40146909 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403861152 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.404347474 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400798022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.402883812 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.401900751 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.403818703 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.404017502 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.400968806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.400510514 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.405248926 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.403410978 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.402507169 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.40534301 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.402381428 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.405399088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.4058886 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.402461003 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402807284 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.40556511 seconds)
  done (took 96.670299134 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.405742816 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.405802087 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406273122 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405996283 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406341374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.406107417 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406800992 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.407135786 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.406409442 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406971837 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407768399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.405336744 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.407004064 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.405151134 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406773486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.404247078 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.408017946 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406737429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407314735 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407361228 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.406851999 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.408293366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.407146376 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406667819 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406535301 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.407530297 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.405012975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407298666 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40799902 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408209207 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407762347 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.408120687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407629501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.408002878 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.409167774 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.408355584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408089454 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408904813 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.40679619 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.408174025 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407302995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409071089 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.408679663 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.407260673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408360336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407582355 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407582804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.409632904 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.408141834 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408625049 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.408307736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408569475 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408087967 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.409196262 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407726032 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.407316808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407683747 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407752758 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409444221 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.408849849 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408827121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.408377797 seconds)
  done (took 88.606956133 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.408201023 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.407560933 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.404633358 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.404092012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.407195318 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.403568676 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.408478053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.407395402 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.407775457 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.407312703 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408723095 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406217419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405654836 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408728964 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405436798 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406422157 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406306123 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.405681576 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.408828098 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.405597903 seconds)
  done (took 29.478824428 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.406327187 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.409054416 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.406572083 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.40673245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.408369147 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.407427209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.407740725 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409195094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407162496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409157815 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.410420875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.408680584 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406531703 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.406689094 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410283818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.408181738 seconds)
  done (took 23.874474041 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.404914529 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.409573509 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.411632877 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.411783818 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.406530783 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407937308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.411472222 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.408286029 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.408030077 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.41091047 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.409550205 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.411480836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.411080211 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.412575083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.408065019 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.411962094 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.40847316 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.408595788 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.410790217 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.411357397 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.408909989 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.408198466 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.41126795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.410023154 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.409131682 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.410260975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.409117407 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.407879938 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.409750748 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.4120912 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.409386627 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.408519819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.410010451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.406927407 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410454811 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.408946822 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.412044083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.411964218 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.411178226 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.412437468 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.410017431 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.408369785 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.410467923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.413286383 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.4078356 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.411315008 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.409898036 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.409681773 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.409250437 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.409386326 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.41227455 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.412600153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.411802026 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.410585383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411485596 seconds)
  done (took 78.897170279 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411887115 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.41139107 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.408875867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.412250046 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.411949235 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.409998103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.412591381 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.409571912 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410653456 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.412779933 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.411546924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.413294663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41013584 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.412951823 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412507985 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413329183 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.41001837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411149135 seconds)
  done (took 26.755237291 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.41069429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.410348046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.413449925 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.410138586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.409748327 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414653428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409850746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.414788322 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414526704 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.411841051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412182276 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.416276124 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413741263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.415551593 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409433899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41042861 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.413759283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415305384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.411140677 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.412007693 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413281465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.414110574 seconds)
  done (took 32.426508225 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.413328195 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.414386471 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.432916598 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.459326406 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.445864147 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.413836375 seconds)
  done (took 9.930033427 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413661372 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414567094 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.412386928 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414811906 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41513095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412247882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412927725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413544128 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414658158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412811752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412328957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41616171 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415545401 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412605559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415385289 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414504748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412552631 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413374949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413718063 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414988962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413077391 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416790777 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413163926 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412521657 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415030926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413026493 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417368515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414331985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414778465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416450162 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418343825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414293925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416226843 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414269962 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417243893 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416587203 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415071282 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416351986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417806552 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414837863 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418423176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417664568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417991338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415839817 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41783021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415403693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416128962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415220546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4168392 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417602664 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420192498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414953039 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417257649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417743284 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417744888 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418582337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415225777 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410885231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419471924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415126732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416911833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418000727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415210212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416480951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417917984 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413662401 seconds)
  done (took 94.772332063 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416864492 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414755957 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416434006 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416838639 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416566048 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414802406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413904235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41596107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413960343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415965312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416215816 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416222653 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415907696 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416101065 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41479117 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416084855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416472884 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413132455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416249122 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416409566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415964921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417031191 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417297834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416514953 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415333222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42125031 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416484629 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417320006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416918246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416622201 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416800388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417242846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418801558 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.417336325 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416265237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418051544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417672018 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417607138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416688587 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421884933 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418732308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421326789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417946291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417920224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418837314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417899001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419668866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418171698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417538848 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417804819 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418801603 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419940781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416168194 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420112771 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41761746 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418305843 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418458998 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419659522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418868901 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42237679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417508225 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419303777 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422270926 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418609165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419737155 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419472597 seconds)
  done (took 94.913109424 seconds)
done (took 1925.655154087 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.476431664 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.411717204 seconds)
  done (took 14.240029124 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.589566531 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.533067635 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.421078672 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.435194895 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.420167362 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.431169151 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.419648035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.421818839 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.421904823 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.42286608 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.420979926 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.610944479 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.442185202 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.422455055 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.422391257 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.514807402 seconds)
  done (took 44.715152731 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.425766737 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.425948945 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.462522787 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.426640041 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.427092027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.468482483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.502990304 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.429088434 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.618847655 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.480981911 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.861586021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.426534862 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.425357848 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.737209504 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.462178032 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472088743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.723124653 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.859910788 seconds)
  done (took 28.990933628 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.924232388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.456024583 seconds)
  done (took 9.739822306 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.454777649 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.431273361 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.433497295 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.457226259 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.454873684 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.454785624 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.435280224 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.435354194 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.450696822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.455668546 seconds)
  done (took 65.829421044 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.443283185 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.424930338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.428044797 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.426647253 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.417358023 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.417522151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.424869536 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.417634815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.391530709 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.564198294 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.446070477 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.432943505 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.426667752 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.427375977 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.424608954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.464372998 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.554346214 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.423424125 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.418392131 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.431302486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.424767678 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.533553193 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.470900854 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.424890392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.564001475 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.406461643 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.429965264 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.432571467 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.562549684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.423723811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.426919087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.425881747 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.429326877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.040731169 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.974641459 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.435579026 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.454605372 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.436245508 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.420730227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.568129501 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.428723798 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.432312269 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.418825404 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.971093049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.584025574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.548602341 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.726524383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.430568821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.428806609 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.494552421 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.428890476 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.429050564 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.461125238 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.219448206 seconds)
  done (took 117.456406777 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.466889086 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.919997733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.592701363 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.442340862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975264642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.914570154 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.420159659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.729861012 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.454554385 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931507385 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.723650142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81344979 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.420939311 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.418850981 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.424782083 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.420311073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.706979834 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785518606 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.422891405 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.420946065 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.474613364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988307778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.680856547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.60261225 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.464017169 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930436652 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.678619011 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.835558237 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.423805828 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.421431307 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.76981329 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.43280347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.424936442 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.42235255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.717323823 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.823540307 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800650041 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.423329196 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.456152381 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.423186561 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.444098001 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923331782 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.809860917 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.683545433 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.814543052 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946395181 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.423884239 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.423260619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.424085602 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630519851 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.678464695 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.982729728 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.682502268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.442616668 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.789433227 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.422988925 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.513531409 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959593087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.784496618 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.831535881 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.43774313 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.422992837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.422318124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024418782 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.42997763 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.812733392 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553320144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.425101087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81691298 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816911661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.78648006 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963706359 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.471522189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.426988739 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.499018068 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993266531 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.774587681 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959624438 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.431374867 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.423621638 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802698446 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.428829097 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.724230989 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038890345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974972114 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.482747632 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.449428807 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.42545844 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.958190293 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959109204 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.675992192 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.830389353 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.738952715 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.449984621 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.425401292 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.423812375 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.468808817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.692194559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.444854064 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.785772939 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959929004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.201777152 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.47603555 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022966508 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.695886249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.444063239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.426869798 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.425634609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.649351391 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.50799218 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.44873323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.426497112 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.951471417 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.293795283 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.564118481 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.158275737 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.774032556 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.430609911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979578431 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.43325538 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959794561 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.457457361 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022146347 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.006457503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.490333325 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.662461416 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.825759147 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.443006193 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.976855514 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.026667895 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.685245421 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972766151 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.226918023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.429396349 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008286549 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.451518824 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.454330586 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.613412087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.460912109 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.72961125 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.44600688 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.979955056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.470450504 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.733647307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477882086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99410091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.490853206 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.778804447 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.454900577 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561962309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.451332084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.428446783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.632528213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823776364 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.43096271 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.054189212 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.430285874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5940018 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.035864659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.471554493 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783311534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.431819921 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.434865741 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.808124034 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.47376071 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.169239285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.428331069 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.735951676 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.44819726 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.874657367 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.42961576 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026508547 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.65960466 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.45449719 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.439370466 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.234387486 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.431374401 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.493909536 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.610377167 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.068908136 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.432178465 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934667037 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.429809891 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.696369295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.449895433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.427532956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.782394349 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.515948815 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.433462724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.447856967 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.431340943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.429851861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947495096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.477972739 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.155598037 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583767715 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988822469 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.744725866 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.984871958 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.494406287 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.45757411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028156169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.482298669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.785198641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.43525027 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.475787009 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964389566 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.434108142 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94638432 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.014286432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.489390042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760374202 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.43413551 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776861659 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.431452484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.710579317 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83734871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.431328764 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.430777279 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.681716282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.710642491 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.657154141 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.455181568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.483907328 seconds)
  done (took 877.111215486 seconds)
done (took 1159.440129734 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.43256982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.433331732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.422259714 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.4281399 seconds)
  done (took 27.088236487 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.443257451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.433427507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.434592837 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.432340684 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.43472411 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.43457579 seconds)
  done (took 9.979033219 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.543764638 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.429684755 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.429340731 seconds)
  done (took 19.767704616 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.684904182 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.783373928 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.855958521 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.789397692 seconds)
  done (took 11.483870316 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433215444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.434729877 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.433181256 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.437886964 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.44227588 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.446145184 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.4374057 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.436827329 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.442940782 seconds)
  done (took 14.30997146 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.706883026 seconds)
done (took 89.704855024 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.863417535 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.980057734 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.431195252 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.123462155 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.890758769 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 5.485177521 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.10441604 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.730878608 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.278418609 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.060371383 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.446730533 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.509564379 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.622965196 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.827609594 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.457639243 seconds)
    (16/309) benchmarking ("sort", Int8, false)...
    done (took 4.454072522 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.370502586 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.014447519 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.516092764 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.456552141 seconds)
    (21/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.514133379 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.077956317 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.418357639 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.501252321 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.555152706 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.171037102 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.434383091 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.975802745 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.953590322 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.283397464 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.740445467 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.565521698 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.374727278 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.517638646 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.438108338 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.457613468 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.944094625 seconds)
    (38/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.115274401 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.711431778 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.315549936 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.597941067 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.44130687 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.963483726 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.454823459 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.514201111 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.438023925 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.438829608 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.451390073 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.465490953 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.562474641 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.460846738 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.045634984 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.700117408 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.166932001 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.891909074 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.908937957 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.972303875 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.513922948 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.295392376 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.915964025 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.473592492 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.440153495 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.887584733 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.469777807 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395879761 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.816874924 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.820194716 seconds)
    (68/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.522268008 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.421976015 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.875225867 seconds)
    (71/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.436509307 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.929158903 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.56689876 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.562871119 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.518887805 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.517816786 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.318022359 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.705291428 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.958411456 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.463675564 seconds)
    (81/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.848263212 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.003160088 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 5.851101265 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.004055317 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.505650917 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.42464391 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.432178321 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.473822957 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.488299581 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.438112569 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.79671337 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.465716511 seconds)
    (93/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.477757828 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.475955602 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.131282552 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.03419924 seconds)
    (97/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.74026291 seconds)
    (98/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.458254834 seconds)
    (99/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.590402738 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.45741309 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.481617887 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.700776727 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.709372306 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.440789034 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.995634958 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.919993206 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.642916267 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.152100257 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.473412755 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.544839648 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.651860143 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.430309395 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.880120816 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.458600208 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.743688619 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.971110602 seconds)
    (117/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.549567792 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.660462439 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.516627727 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.205690592 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.42393746 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.442119216 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.504522219 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.154450668 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.97034572 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.538721975 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.527885243 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.513319094 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.956262859 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.3180141 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.477279175 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.149610795 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.468595264 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.708327818 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.296093672 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.467049799 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.106197932 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.705513078 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.445085099 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.216133743 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.543828976 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.468029445 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.444270949 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.379522432 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.443389959 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.945687764 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.177116273 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.546538353 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.3612213 seconds)
    (150/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.833625762 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.725252741 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.449699673 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.10933762 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.320153743 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.473034099 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.470426621 seconds)
    (157/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.544856562 seconds)
    (158/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.46939451 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.518994431 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.092283474 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.306719321 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.529923448 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.940694719 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.466130494 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.507550573 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.440491862 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.129213496 seconds)
    (168/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.471910877 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.467869518 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.528696731 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.594594324 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.552551003 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.889758624 seconds)
    (174/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.596088394 seconds)
    (175/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.598815275 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.564974326 seconds)
    (177/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.441295365 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.429340422 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.203746162 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.018070406 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.873862301 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.887680117 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.455145658 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.943073898 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.538821052 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.444573274 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.473870127 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.441038668 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.961124799 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.455220608 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.457166016 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.487111621 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.292242131 seconds)
    (194/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.639634299 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.566640502 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.773709099 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.459453918 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.120853441 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.458179156 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.447611048 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.457075986 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.502874513 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.444471732 seconds)
    (204/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.464367435 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.791569159 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.021382573 seconds)
    (207/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.098213953 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.478594604 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.536081074 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.155937116 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.66321042 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.326261369 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.466290226 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.457529422 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.466254179 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.04486988 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.450178546 seconds)
    (218/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.752257785 seconds)
    (219/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.130424202 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.444435619 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.46813503 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.446423558 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.452164869 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.254100485 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.477165082 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.733198157 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.503499318 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.444132915 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.467297743 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.276972271 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.380164012 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.545176343 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.098836771 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.35851243 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.415524532 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.448871231 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.464048395 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.82207499 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.923488523 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.448381379 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.467399603 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.55378973 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.579740571 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.4558113 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.838070596 seconds)
    (246/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.510557667 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.005648769 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.494664099 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.47171793 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.448632984 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.676904686 seconds)
    (252/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.730867855 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.225957557 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.156430615 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.490264607 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.475408384 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.545964594 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.463467956 seconds)
    (259/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.474282842 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.620150573 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.837073539 seconds)
    (262/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.198634617 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.052835824 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.48323562 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.851654174 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.849904045 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.647442472 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.858019103 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.373316591 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.16508946 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.485893064 seconds)
    (272/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.809298945 seconds)
    (273/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.461486688 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.338631692 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.488773601 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.532911431 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.355079019 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.123956184 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.529810063 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.442546139 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.646382633 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.579678084 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.092785811 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.448353032 seconds)
    (285/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.187735271 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.623633171 seconds)
    (287/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.96180457 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.400875698 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.457832595 seconds)
    (290/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.154927013 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.944008144 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.504499766 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.485812119 seconds)
    (294/309) benchmarking ("sort", BigInt, false)...
    done (took 6.444566909 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.885013404 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.450037483 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.473090771 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.139796442 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.780301349 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.475569171 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.746002452 seconds)
    (302/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.152836245 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.831735404 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.465827108 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.44478281 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.508264386 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.924843393 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.673496346 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.552557501 seconds)
  done (took 979.759765328 seconds)
done (took 981.13092021 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.480321954 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471808988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.4537285 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.478464299 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.566403769 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.49390162 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.468135308 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.456127974 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.502821623 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.507251735 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.454770113 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.486749991 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.458333297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.456446134 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.458165704 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472131491 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.549179092 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.4602129 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.473316622 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.465159695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.474592779 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.457400174 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.508633109 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.489513993 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.461575897 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.461783624 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.464172393 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.478089172 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.56647394 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.463911921 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.461386567 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.471460141 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.549305693 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.457649267 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.454702051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.475850109 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.46698814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.467386696 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.463945827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.488032664 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.990396761 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.45926986 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.462594294 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.459799884 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.460664647 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.460336792 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.460962474 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.464412629 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.472212309 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46967159 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.983923672 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.471753908 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.460890911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.461990754 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.4692022 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.458076266 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.462255468 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474246885 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.478281199 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475217111 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.54188213 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.464639234 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.459628405 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.476817437 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.469696802 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.018512116 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.455368974 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.463627969 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.996044978 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.461759894 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.020576228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.471415707 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.461858543 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.474653708 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.491956971 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.551213852 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.457415361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.461410162 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.468888889 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.459516666 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.467911549 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47275096 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.463346831 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.460314957 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477558463 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.494071896 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.47397974 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.463215081 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.471148189 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.478305261 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.468717805 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.472114976 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462994153 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.456724335 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.470446898 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.466774073 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.463063466 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.462396206 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.467007471 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.47179965 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.991785461 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480428686 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.459080765 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.456425892 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.461049886 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.478674534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.996023999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.460428142 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.483137869 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.510603925 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.463648301 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.546885497 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.4672053 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481182243 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.468846507 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.467240932 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.459433571 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.547674838 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.98670053 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.476532882 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.462942345 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.4624892 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481546973 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.462633512 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.460032611 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.559454468 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.465450669 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476605759 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.583168448 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.475633263 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.492444439 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.463280631 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.467010946 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.491479624 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480807967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.493595259 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46692671 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.478062178 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.479258557 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.462666616 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.477491164 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.472029522 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.464739412 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.471401209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.46150879 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.49244534 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477027194 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.476880378 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.486703835 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.583853468 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.46133256 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.54969051 seconds)
done (took 246.136827979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.530822087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.463659409 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.573251798 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.464310124 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.576201172 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.561388293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.456936544 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.460152804 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.459423878 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.841120118 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.460913889 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.45850828 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.4619947 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.460221374 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.558611418 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.46119919 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.45944905 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.802546519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.462108013 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.54799444 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.461449422 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.459966353 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.462432473 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.844428274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.455844408 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.459877008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.536204299 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.459347646 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.807413094 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.453740239 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.461544042 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.807666856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.552604045 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477051274 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.473181138 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.469435578 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.562215391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479940391 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.54140259 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.554247866 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.556616063 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.500273097 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.453897447 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.45813653 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.461402883 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.465630538 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.459953999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.488784797 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.459641183 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.460095311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.804596291 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.474131753 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.469926041 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.459715565 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.460331935 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.482705662 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.46013466 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.466874749 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.569273684 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.464933214 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.527144175 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.846193097 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.847073525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.464656338 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.45948422 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.46120113 seconds)
  done (took 157.177114553 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.535102596 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.546134688 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.580911364 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.465462405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.515807557 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.58610216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.466019283 seconds)
  done (took 12.087911727 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.469771781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.463458505 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.513987595 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.512587016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.466147425 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.616269344 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465227435 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.479965999 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.462163089 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.51607088 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.466288695 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.463911624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.471814794 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.462414758 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.512757642 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.476386272 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.581268601 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.466995856 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465417475 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.621860702 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.462960208 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.47171605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.518587828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.477307795 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466414055 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.472680195 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.053964899 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46606603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.466184367 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.468179238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.462496465 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.506697097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.465304523 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.46203521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4618412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.581769788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.466091399 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.464236766 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.466944324 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.46041916 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.46759267 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.465026937 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.468932031 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.464846262 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.467480048 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.49004804 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.469321436 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.46956922 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.465978356 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.466379421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.519926398 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.471181874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.465890096 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.464450589 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.525452581 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474476342 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470740168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.465506593 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468191821 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46754959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.6256206 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.517349704 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.466509726 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.51889702 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46614083 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.46655992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.469449878 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.468888924 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525462314 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.467350103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.514672803 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.469659729 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.628740039 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.492197999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467630819 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.471356191 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.472533088 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469962586 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.463949043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.478864091 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.467497257 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.471804016 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.473888758 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.466504608 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465017445 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.577470491 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.579192309 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.465151027 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.486014929 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.477734037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.468857562 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.526203144 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.468825919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.468458727 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521781086 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.586264065 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.5232584 seconds)
  done (took 166.380274737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.474365939 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.477795887 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.470843844 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.485394567 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.468216371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.472425782 seconds)
  done (took 10.248954754 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.474295021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.47457958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.47026569 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.47064763 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.472590999 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.470728124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.471892899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.473351198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.476721284 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.470322078 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.471227653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.474852724 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.473227149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.471415383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.46974474 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.474000467 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.472385 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.470158337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.474338505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473316942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.574899083 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.475096399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470779821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.473311802 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.477566565 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.472312529 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479665585 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.470641371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.470087688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.479395159 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.477275622 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.47521794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.473059007 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.480377772 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.477721473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.472456939 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477506236 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.946037126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471985813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.476404848 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.477387777 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476343917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.473521532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.477472867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474161457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.479511239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.477751575 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.481990797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.473194453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.477399917 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.474486039 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.473967848 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.474830524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.476154005 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.476745015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478677125 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.482571431 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.476776718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.473664047 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.474355678 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.479149096 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.475861601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.479204082 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.483615468 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.471861883 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.478924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.473873895 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.478481129 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477991237 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477565804 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.476950558 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.472231431 seconds)
  done (took 109.18061799 seconds)
done (took 456.4650774 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.83241982 seconds)
  done (took 8.236750951 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.771498271 seconds)
  done (took 8.17976336 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.912134175 seconds)
  done (took 24.321923189 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.509467889 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.4925375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.477227911 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.472419724 seconds)
  done (took 27.357814126 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.707948712 seconds)
  done (took 8.117099782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.468047724 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.489698911 seconds)
  done (took 14.366483345 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913414769 seconds)
  done (took 8.320019766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.075325312 seconds)
  done (took 8.487848132 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.489719636 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.487423796 seconds)
  done (took 14.65928548 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.474360143 seconds)
  done (took 7.880864431 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.774937121 seconds)
  done (took 9.183588381 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.472946314 seconds)
  done (took 7.884064399 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.531698092 seconds)
  done (took 7.939081144 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.168380563 seconds)
  done (took 10.57455049 seconds)
done (took 166.90899933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.471601953 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.469045089 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.472867056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.468930115 seconds)
  done (took 27.286345876 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.512357303 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.511463567 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.509163876 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.524460451 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.515948119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.511386407 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.503045683 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.501567742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.519938342 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.511947347 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.514680756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.514863719 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.510006428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.50208067 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.509689748 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.511901504 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.522004907 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.509728135 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.501064777 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.513827109 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.479669173 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.523912726 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.514070079 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.478581206 seconds)
  done (took 37.63803157 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.676305292 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.550084166 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.629248525 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.528326964 seconds)
  done (took 7.791844816 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.526994911 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.533038217 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.544904477 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.583612563 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.621996636 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.540964928 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.507343502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.495387379 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.486306294 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.533213415 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.608415651 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.547648166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.616580627 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.476450602 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.669329844 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.475234128 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.479920021 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.529343531 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.581196057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.596314281 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.478728281 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.52850572 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.536051103 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.544530723 seconds)
  done (took 38.446551937 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.480578765 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.481480074 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.481182382 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.473525807 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.475099031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.476944559 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.479870943 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.478053182 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.499428578 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.478487254 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.477043307 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.478413728 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.475764116 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.477493957 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.4793023 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.490433723 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.490674257 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.477161033 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.478124408 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.483427845 seconds)
  done (took 31.02333704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.470542374 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.328805405 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.822807751 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.726904468 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.46951743 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.470742169 seconds)
  done (took 28.699566302 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.557498407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.693511935 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.478575191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.894030534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.978811524 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.480389389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.479325082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.733132863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.094541083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.106637512 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.543410634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.54117045 seconds)
  done (took 21.993485176 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.474843593 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.473710242 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.49060901 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.492103147 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.543582617 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.486234069 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.490397371 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.472936906 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.543782103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.551071742 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.484857892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.544462104 seconds)
  done (took 39.459562181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559630597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.523451032 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.544881847 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398450488 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858053931 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68288002 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40042428 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958690054 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.480864307 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745194366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487037356 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565241 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.731329026 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486479745 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.477857328 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.612256244 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705894136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018263543 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474128312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.871182759 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503428287 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.488001511 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.061093206 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511082875 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689112169 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.611075358 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.736430847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475697307 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794322799 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487437699 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487773616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475883787 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747972211 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172663032 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567445246 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484919802 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427830411 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.185898238 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.481872521 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.957319045 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475604696 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.48093982 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485721949 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475960317 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.409144702 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48106566 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965044234 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.480095682 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.18500157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474850689 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489585771 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571373989 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.478315457 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293796357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642262643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476237221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.474706967 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482646682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04692182 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.266402232 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483916833 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.413573107 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647454919 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.952551879 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189460227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.57920224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.482875991 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482870013 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410417958 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.936097021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499657593 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.83963219 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.502718485 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138635585 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290109228 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.480954059 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414546362 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079457471 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477734324 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.436084235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706086005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474938068 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420206908 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.427550423 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.411345321 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278010918 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48542753 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.004090508 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490442173 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963750626 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.488450041 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493730799 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50036792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704673718 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.362280877 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47810187 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.480584525 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603511536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501761995 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961716147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414916981 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.480405485 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739432264 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.690587181 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480515656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.596247973 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720702102 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48594239 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.499464299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.488499348 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493951733 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.159805667 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488476907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465279948 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49767601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4785953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314461085 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487463299 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.585419627 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.49303271 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750190962 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.360000978 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478889431 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563363401 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482170928 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.478969473 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.990595345 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001352976 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.480191998 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.481112605 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482209309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495783484 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.481325321 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443700429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.476592082 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481857961 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.485204251 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.707775496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491483055 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756865201 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415792639 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839687168 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581932103 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.703368168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.845216566 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.481886277 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746550109 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495875582 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.482182222 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513914107 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500636856 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582057146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504088216 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.492797717 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.746536836 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.490234666 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.487127152 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985959628 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484162358 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490200045 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.488166643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46651298 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160815079 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457037876 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.488043701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378454256 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.498197867 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546409396 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489215652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.492461733 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.532423987 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557300482 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.485101338 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.48210319 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711577585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494523781 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.901614296 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5607592 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.718348858 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16606331 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49481962 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.419738555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.199583958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.179883187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484089092 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421322215 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.484577381 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495381734 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495067744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.813287825 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165476871 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484529883 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.905335579 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.491076778 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49402885 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.488742477 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482483134 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.522853004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297725013 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502447705 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.497487872 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628364207 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.495850004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.41902379 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.487923709 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488252759 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.483620611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484574067 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519488256 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914040151 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00793579 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747404135 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.405869557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494524681 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031640005 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.523911082 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.491376193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489368458 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505674886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.502502571 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494834241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.498461213 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.96094731 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.155560142 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054335699 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314403086 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111555932 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644673018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.496782279 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.488865233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977071189 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420006327 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043823264 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705274904 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982416553 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443869337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725513069 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.850848381 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325527839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49559673 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717560591 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.574109779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.489511258 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500247802 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700495282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523532959 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.493171897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419081695 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.772141971 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778472322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4913212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570031344 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976002588 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48365954 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49009919 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.485794052 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.962222265 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683219069 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.202146944 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670396959 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.494845645 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.504333975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006987103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.492529245 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.717829147 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200975053 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497207408 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.726744102 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432394923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.498847189 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.501538649 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.49334916 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.043127959 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.490137491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.74738155 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499982953 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423345453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.502236579 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113310121 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.343961114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.490684901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488397178 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306807505 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50398681 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811244192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.502442401 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.517325477 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499958931 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.421071207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427387699 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.182866137 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.49844396 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461886794 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036119738 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.599600782 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679731664 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.527905502 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546960403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.74911915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.503540805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171240157 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71894438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515493554 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512745031 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.590750384 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490969176 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.481082832 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.492150615 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.728024643 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469175801 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.715035271 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.57622198 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.401537079 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.487212102 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700851932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.491019724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499069788 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763830478 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.201243176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.507038641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310355106 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516038759 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.493230328 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438952698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662522691 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501844571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571174641 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502964637 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.502217401 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50417194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688908714 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503481276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495812263 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.503555782 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586447618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.524794549 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.530948734 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.501237912 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180740012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329428143 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17626346 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502180382 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.490607648 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498126979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429117668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642463621 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.721221219 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764866611 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612830708 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.713542092 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517254466 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510010469 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501461539 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70630914 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765700892 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.394103452 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51001064 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511603488 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.496549566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503194634 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.706207366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053233132 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101881452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617365699 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5008632 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986673087 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767278537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494066871 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495604339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092776844 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.519612088 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.982238686 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.502097011 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495626768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643968543 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505976594 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200587016 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504140824 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.65224097 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.269602078 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96158984 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.752876248 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.081082907 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508192656 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186779501 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327254246 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763071315 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565433182 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505513914 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.622274252 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644107955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.498096582 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495746144 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495393438 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548984443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.204368776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.506400271 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188570596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757274317 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.492009865 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.504590058 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518623293 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.504717886 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.725535031 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277682027 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722944668 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503662865 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500736113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.31626411 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185250894 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510410824 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432220835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.50047308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765302527 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732654016 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518254602 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.948573996 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.207600632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108629967 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.469612223 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51556267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501049813 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334914745 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18385219 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.486951422 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050060345 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057944766 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512081601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773229072 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.500427914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497566077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774873722 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.502861012 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.514640026 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513963897 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.184234575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344955854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.499050275 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.973408648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.43792392 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.845674287 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279963813 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43535464 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.506429842 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.709047391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.497382738 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622326454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509518395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.496446471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515558509 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.260502774 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.783235785 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.507284767 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.488173309 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.48876236 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.51373657 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511613804 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796167384 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.507640047 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.178365163 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.853782448 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759647513 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.510046744 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.483723177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.504284883 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500932999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50096953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.708780014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.829180253 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114945035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.503306489 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.513952646 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506016912 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.716493176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712124237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.512169748 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51420147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51006602 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521681691 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.407493005 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.01944665 seconds)
  done (took 1685.747091207 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.557302315 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.518841377 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.531148765 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.53079488 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522774611 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.631357111 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.548046364 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.641028664 seconds)
  done (took 53.918661921 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.503943883 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.747221241 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.538317181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.503971667 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.512352992 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.5107116 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.986276204 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.504538927 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.511847451 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.510934543 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.516023809 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.513350504 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.227049558 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.51190645 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.516529906 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.4904929 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.509525177 seconds)
  done (took 68.558913277 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.518375412 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.023960536 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.534155176 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.507095295 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.033719225 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.505395055 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.006438692 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.553909068 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.522867935 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.521908179 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.157168731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.539078162 seconds)
  done (took 82.864642891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.510875295 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.51033478 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.512393066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.511494139 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.509278655 seconds)
  done (took 8.99762613 seconds)
done (took 2133.831126826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.757782625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.330571641 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.253930723 seconds)
  done (took 6.024902786 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.651750341 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.700971251 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.825854962 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.829959607 seconds)
  done (took 8.451125238 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.789881429 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.889049525 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.71059456 seconds)
  done (took 6.831086862 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.097987745 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.512470254 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.579330923 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.501912304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.502289716 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.505999026 seconds)
  done (took 20.952730341 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.50788695 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.509800022 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.507990175 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.509413165 seconds)
  done (took 7.476957948 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.487280775 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.271265511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.487918462 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.502523376 seconds)
  done (took 19.190524698 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.265116153 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.265439209 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.250955593 seconds)
  done (took 8.221787633 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.51410735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.344221838 seconds)
  done (took 10.298653903 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.840703909 seconds)
  done (took 3.281154378 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.63876369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.768525283 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.771370929 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.575725108 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.758429155 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.946431771 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.417422249 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.921437219 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.567035789 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.033150445 seconds)
  done (took 31.840808952 seconds)
done (took 136.958223672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.68424165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.507468371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.705911451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.697390991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.734154399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.704368765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.007367237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.670476404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.163849617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.157011191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.664126817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.733268424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.736452676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.517338798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.734109096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897707447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.737151721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.713587675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.389645545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.514555564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.018862189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.294028152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.493875562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.308766179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.737417379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.659510048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.87738819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.895763412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.503114543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.895004701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.657852423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.506446609 seconds)
  done (took 201.963012136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.505210728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.50562915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.522376124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.534217788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.519441985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.509110141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.529944344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.52273923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.506568565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.503881454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.511908959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.50612161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.506805833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.525357854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.506169491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.51534694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525886902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.513189086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.509773187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.527952954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.510171818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.516921652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.518398415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509094198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.50994641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505727392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.502479307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.507152602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.507499601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.506065667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504480823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.526263425 seconds)
  done (took 209.877939428 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.508798661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.526682971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.530340531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.509301988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.508216935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533148911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.510577085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.510909794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.506837603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.513428394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.508148209 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.539302671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.50814423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.507725869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50671281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.518581513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506540067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.515291533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.512219424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.50692799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.514203098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.525250136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.509120676 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509607732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509412487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.508957115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.520848308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.521359682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.510938816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.531600444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.506572737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.511228619 seconds)
  done (took 209.915251066 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.7073371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.520524655 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.518891172 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.45618335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.515669192 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.519288476 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.519415238 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.720596659 seconds)
  done (took 15.927057781 seconds)
done (took 639.124105362 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.024520204 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.71950933 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.73431075 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.537502023 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.383996748 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.541997787 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.539474943 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.725218882 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.136783654 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.71468849 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.836518638 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.538279164 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.985333439 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.539347552 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.80046552 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.650208104 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.453181016 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.567302848 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.870378831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.156708669 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.811718899 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.162303628 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.728165064 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.179007163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.990245394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.187979531 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.378567943 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.454082777 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.538898066 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.878968263 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.433611933 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.603550212 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.606717553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.590155253 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.644084259 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.625460525 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.617159509 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.583571276 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.728230325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.921668744 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.158277554 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.911923674 seconds)
  done (took 103.635685744 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.507215735 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.510258588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.507530123 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.511623462 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.509586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.509323743 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.509209297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.51101125 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.510820076 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.509107298 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.508546588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.511663141 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.509700831 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.510466767 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.511344871 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.508092938 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.508924741 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.510138023 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.507528119 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.509272083 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.512389578 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.511360203 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.512251084 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.508429506 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.509134818 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.510874078 seconds)
  done (took 40.707687108 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.521298605 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.771944632 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.96487978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531172559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.534861929 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.529994501 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.611958613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.522758418 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.529702546 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.528268876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.6834152 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.527176628 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.561090358 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.972993051 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.525987968 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.526019318 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.523893172 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.525120563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.776244514 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.533434819 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.631218334 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.526206306 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.612504394 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.533694073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.546889863 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.525290539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.528642888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.104123063 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.525921827 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.689409396 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.431720806 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.612931007 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.057890148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.979685115 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.434072749 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.528232409 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.5288395 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.691446985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.526508589 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.523675075 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.612380407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.529178211 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.976579982 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.172951072 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.544109808 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.524476863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.126479149 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.691112651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.804407017 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.535268963 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002608849 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.529828401 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.525122335 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.528209111 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.803652928 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.533635349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.527457927 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.982910572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.53062806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.612996564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.526764316 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.526880833 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.786399948 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.527611801 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.77364383 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.52637175 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.533291682 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.529001983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.979228766 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529729205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.184994227 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.542444834 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.523706985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.685512677 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.775156114 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.163175664 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.529632687 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.788759657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.073325525 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.610093866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.530596003 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.094086866 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.613547032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.528220185 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.53035631 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.529180748 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.52916424 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.569141686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.607558775 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.117980642 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.184635657 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.001042687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.614796236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.541403491 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.528144845 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.982835012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.530226982 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529025805 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.970427225 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.192700818 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.544656701 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.533998801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.176343151 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.545702759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.615434781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.534411213 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.986081869 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.527221446 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.571219735 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.529895934 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.537522706 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.53054657 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.621632821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.535181643 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.528882959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.165258125 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.715630295 seconds)
  done (took 199.333589067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.520625494 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.523254572 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.528424471 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.521016323 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.520920184 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.529877609 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.519866758 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.524061871 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.527471423 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.525049116 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.524751414 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.522902868 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.527813717 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.522647857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.532653453 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.529978994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.13354055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.525600295 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.539061908 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.524650745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.363630678 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.525448834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.524070122 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.535174653 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.526997252 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.529661832 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.563603063 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.524779812 seconds)
  done (took 157.67764515 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.533076952 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.161520136 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.536126205 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.682392545 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.557823044 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.53080812 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.679061105 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.600282101 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.533020631 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.527486036 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.527205824 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.868324285 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.532924176 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.10248871 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.749631629 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.682269339 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.102925207 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.535376492 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.5299363 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.532046068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.680565937 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.541837014 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.866885573 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.164469591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.532136955 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.162767274 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.521358847 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.533010485 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.531551707 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.162829725 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.529900276 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.871812395 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.615637558 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.597451226 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.164286482 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.111119998 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.106945151 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.700521992 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.532589923 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.527833065 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.527153329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.517222405 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.163365027 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.532236806 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.532148882 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.157968681 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.548455788 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.534898126 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.541252819 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.532053992 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.604207446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.598383346 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.87564539 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169827588 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.61756837 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.554446649 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.69385295 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.928978202 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.54499087 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.116671816 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.529469705 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.173647021 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543363707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.52797483 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.540299589 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.544459141 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.713997512 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.695790808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.119526401 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.54135815 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.118623399 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.707034349 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.538571864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.54105573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.542649836 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.17491177 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.116819007 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.713391225 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.692813529 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.76038315 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.52913911 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.54179483 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.530119226 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.632312601 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.540231345 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.17423431 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.120105554 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.541402438 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.543300603 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.544490562 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.542625139 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.743697547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.178560431 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.632542294 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.119751289 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.898737832 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.882902193 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.542516398 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.609212366 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.541902181 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.882300959 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.544391934 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.607297974 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.995205945 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.885437306 seconds)
  done (took 182.859402053 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.804340348 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.809761421 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.637729259 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.66525734 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.119290253 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.159891572 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742010803 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622888738 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.64090572 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.667160044 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.271203277 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.630453938 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.75362239 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.625711206 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.279157689 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.614727235 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.639759102 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.664143493 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.667566796 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.614449423 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.174016468 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.854383971 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.7117137 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.666795867 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.608203186 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.350422234 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.351925411 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.070971077 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.719474128 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.779341681 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.085728496 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.786140135 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.336423416 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.233508495 seconds)
  done (took 71.832835355 seconds)
done (took 757.495998262 seconds)
SAVING RESULT...
DONE!
